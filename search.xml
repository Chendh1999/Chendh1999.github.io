<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>2024，你好！</title>
      <link href="/2024/01/03/2024%EF%BC%8C%E4%BD%A0%E5%A5%BD%EF%BC%81/"/>
      <url>/2024/01/03/2024%EF%BC%8C%E4%BD%A0%E5%A5%BD%EF%BC%81/</url>
      
        <content type="html"><![CDATA[<p>我想跟平凡里的坚持干杯，</p><p>我想跟那些有何不可的失败干杯，</p><p>我想跟所有值得被尊重的一切干杯，</p><p>让我们敬存在！</p><p>我想和地球干杯，</p><p>敬那些未曾谋面的山海，</p><p>敬那些心驰神往的文化，</p><p>敬那些芸芸众生们努力用爱打造的这颗璀璨星球，</p><p>敬世界！</p><p>和明天干杯，</p><p>我不会问你是喜是悲，</p><p>不会问你有何贵干，</p><p>我只会毫无畏惧的接过你手中的礼物，</p><p>珍惜每一段经历，</p><p>不问别离，</p><p>不问结局，</p><p>敬明天！</p><p>【摘自：哔哩哔哩跨年晚会】</p>]]></content>
      
      
      <categories>
          
          <category> Life </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Life </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo部署到GitHub</title>
      <link href="/2023/02/04/hexo%E9%83%A8%E7%BD%B2%E5%88%B0GitHub%E4%B8%8A/"/>
      <url>/2023/02/04/hexo%E9%83%A8%E7%BD%B2%E5%88%B0GitHub%E4%B8%8A/</url>
      
        <content type="html"><![CDATA[<p><img src="https://s3.bmp.ovh/imgs/2023/02/04/f61324b2769a241f.png"></p><p><img src="/2023/02/04/hexo%E9%83%A8%E7%BD%B2%E5%88%B0GitHub%E4%B8%8A/Users\chendh\AppData\Roaming\Typora\typora-user-images\image-20230204155504474.png" alt="image-20230204155504474"></p><p><img src="https://cdn.jsdelivr.net/gh/Chendh1999/hexoBlog_Pictures/202302051609209.png" alt="image-20230204155521229"></p><p><img src="/2023/02/04/hexo%E9%83%A8%E7%BD%B2%E5%88%B0GitHub%E4%B8%8A/Users\chendh\AppData\Roaming\Typora\typora-user-images\image-20230204155521229.png" alt="image-20230204155521229"></p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
          <category> GitHub </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> GitHub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>重装服务器后的操作</title>
      <link href="/2022/11/30/%E9%87%8D%E8%A3%85%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%90%8E%E7%9A%84%E6%93%8D%E4%BD%9C/"/>
      <url>/2022/11/30/%E9%87%8D%E8%A3%85%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%90%8E%E7%9A%84%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<p>电子地图网站部署到服务器不成功，域名总是访问到博客网页，怎么弄都还是一样。也忘记了当时搭建hexo博客的时候到底是怎么做的了，服务器的配置还有文件这些也都非常混乱，就像之前的旧电脑一样没有明确的条理，软件安装什么的也都非常混乱，所以，为了之后能够更加条理清晰的管理服务器，也为了能够成功部署项目网站，现在重新安装服务器，之前搭载的hexo博客也相当于要重头开始！！！希望能够尽快完成项目搭建！下面将把对服务器的所有操作都记录下来，以便后续工作安排！</p><blockquote><p>重新安装服务器选择的还是<strong>宝塔Linux面板</strong></p></blockquote><h2 id="1-宝塔面板登录连接"><a href="#1-宝塔面板登录连接" class="headerlink" title="1 宝塔面板登录连接"></a>1 宝塔面板登录连接</h2><p>在<strong>“应用管理”</strong>处直接点击登录，执行<code>sudo /etc/init.d/bt default</code>命令获得宝塔面板的账号和密码，接着就可以在宝塔面板中登录服务器了！</p><img src="https://s3.bmp.ovh/imgs/2023/02/04/80edb4c173399a8a.png" alt="image-20221130134117245" style="zoom:50%;"><h2 id="2-宝塔面板软件安装"><a href="#2-宝塔面板软件安装" class="headerlink" title="2 宝塔面板软件安装"></a>2 宝塔面板软件安装</h2><h3 id="2-1-安装jdk11"><a href="#2-1-安装jdk11" class="headerlink" title="2.1 安装jdk11"></a>2.1 安装jdk11</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install java-11-openjdk</span><br></pre></td></tr></table></figure><p>查看版本：<code>java -version</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">openjdk version &quot;11.0.17&quot; 2022-10-18 LTS</span><br><span class="line">OpenJDK Runtime Environment (Red_Hat-11.0.17.0.8-2.el7_9) (build 11.0.17+8-LTS)</span><br><span class="line">OpenJDK 64-Bit Server VM (Red_Hat-11.0.17.0.8-2.el7_9) (build 11.0.17+8-LTS, mixed mode, sharing)</span><br></pre></td></tr></table></figure><h3 id="2-2-安装PostgreSQL"><a href="#2-2-安装PostgreSQL" class="headerlink" title="2.2 安装PostgreSQL"></a>2.2 安装PostgreSQL</h3><ul><li><p>安装PostgreSQL管理器</p></li><li><p>安装PostgreSQL12</p></li><li><p>终端安装：</p><ul><li><p>导入yum源</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install -y https://download.postgresql.org/pub/repos/yum/reporpms/EL-7-x86_64/pgdg-redhat-repo-latest.noarch.rpm</span><br></pre></td></tr></table></figure></li><li><p>安装PostgreSQL服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install -y postgresql12 postgresql12-server</span><br></pre></td></tr></table></figure></li><li><p>安装</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install postgresql12-devel</span><br></pre></td></tr></table></figure></li><li><p>安装postgis</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install postgis</span><br></pre></td></tr></table></figure></li><li><p>查看postgresql12的安装版本和安装位置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rpm -qi postgresql12      # 查看版本</span><br><span class="line">rpm -ql postgresql12      # 查看安装位置</span><br></pre></td></tr></table></figure></li><li><p>在home目录下，新建一个文件夹postgresql_data；把默认的postgresql的数据库移动到这个文件夹中；设置这个文件夹的读写权限。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mkdir /home/postgresql_data</span><br><span class="line"></span><br><span class="line">chown postgres:postgres /home/postgresql_data</span><br><span class="line"></span><br><span class="line">chmod 750 /home/postgresql_data</span><br></pre></td></tr></table></figure></li><li><p>配置环境变量</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">export PATH=/usr/pgsql-12/bin:$PATH</span><br><span class="line"></span><br><span class="line">export LD_LIBRARY_PATH=/usr/pgsql-12/lib</span><br><span class="line"></span><br><span class="line">export PGDATA=/home/postgresql_data</span><br></pre></td></tr></table></figure></li><li><p>把数据库目录改到&#x2F;home&#x2F;postgresql_data下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vim /usr/lib/systemd/system/postgresql-12.service</span><br><span class="line"></span><br><span class="line">修改内容如下：</span><br><span class="line">#Location of database directory</span><br><span class="line">Environment=PGDATA=/home/postgresql_data</span><br></pre></td></tr></table></figure></li></ul></li></ul><p>报错</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">psql: error: could not connect to server: No such file or directory</span><br><span class="line">        Is the server running locally and accepting</span><br><span class="line">        connections on Unix domain socket &quot;/data/pgdata/15432/.s.PGSQL.5432&quot;?</span><br><span class="line">        </span><br><span class="line">        </span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-16-8-centos ~]# su postgres</span><br><span class="line">bash-4.2$ psql</span><br><span class="line">could not change directory to &quot;/root&quot;: Permission denied</span><br><span class="line">psql: error: could not connect to server: No such file or directory</span><br><span class="line">        Is the server running locally and accepting</span><br><span class="line">        connections on Unix domain socket &quot;/var/run/postgresql/.s.PGSQL.5432&quot;?</span><br><span class="line">bash: history: /home/postgres/.bash_history: cannot create: No such file or directory</span><br><span class="line">bash-4.2$ </span><br></pre></td></tr></table></figure><h3 id="2-3-安装Nginx"><a href="#2-3-安装Nginx" class="headerlink" title="2.3 安装Nginx"></a>2.3 安装Nginx</h3><p><img src="https://s3.bmp.ovh/imgs/2023/02/04/dcbebdeb93403797.png" alt="image-20221221154030678"></p><p>nginx: the configuration file &#x2F;www&#x2F;server&#x2F;nginx&#x2F;conf&#x2F;nginx.conf syntax is ok<br>nginx: configuration file &#x2F;www&#x2F;server&#x2F;nginx&#x2F;conf&#x2F;nginx.conf test is successful</p>]]></content>
      
      
      <categories>
          
          <category> PostGIS </category>
          
          <category> PostSQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PostGIS </tag>
            
            <tag> PostSQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>构建电子地图网站——08 腾讯云javaweb环境搭载与PostSQL库与PostGIS数据导入导出</title>
      <link href="/2022/11/25/%E6%9E%84%E5%BB%BA%E7%94%B5%E5%AD%90%E5%9C%B0%E5%9B%BE%E7%BD%91%E7%AB%99%E2%80%94%E2%80%9408%20%E8%85%BE%E8%AE%AF%E4%BA%91javaweb%E7%8E%AF%E5%A2%83%E6%90%AD%E8%BD%BD%E4%B8%8EPostSQL%E5%BA%93%E4%B8%8EPostGIS%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%AF%BC%E5%87%BA/"/>
      <url>/2022/11/25/%E6%9E%84%E5%BB%BA%E7%94%B5%E5%AD%90%E5%9C%B0%E5%9B%BE%E7%BD%91%E7%AB%99%E2%80%94%E2%80%9408%20%E8%85%BE%E8%AE%AF%E4%BA%91javaweb%E7%8E%AF%E5%A2%83%E6%90%AD%E8%BD%BD%E4%B8%8EPostSQL%E5%BA%93%E4%B8%8EPostGIS%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%AF%BC%E5%87%BA/</url>
      
        <content type="html"><![CDATA[<p>2023年2月4日，距离上次打开这个项目已经过去了2个多月了，2个月前因为在腾讯云服务器上部署PostSQL数据库总是出各种错误，最后又因为疫情不得不提前回家，所有这个项目止步于此已经2个多月了。现在重新开启，把之前的步骤和出的错误做个简单总结。现在距离腾讯云到期还有近一个月的时间，希望能在那之前有个完美的答案！</p><blockquote><p>继我们上一步把springboot项目打包且本地部署成功之后，接下来就是要将本地的这个项目部署到我们的腾讯云服务器上以便通过域名进行访问！</p></blockquote><h2 id="1-腾讯云预装"><a href="#1-腾讯云预装" class="headerlink" title="1 腾讯云预装"></a>1 腾讯云预装</h2><h3 id="1-1-安装Xshell用来从本地上传数据到服务器"><a href="#1-1-安装Xshell用来从本地上传数据到服务器" class="headerlink" title="1.1 安装Xshell用来从本地上传数据到服务器"></a>1.1 安装Xshell用来从本地上传数据到服务器</h3><p>因为我安装的是“<strong>宝塔Linux面板</strong>”，可以直接在面板中上传本地数据，但是现在感觉有利也有弊，虽然直观，但是在面板中直接安装的软件，不知道为什么在终端却显示没有！所以接下来若要重新开始，我会换成centos系统试试！</p><h3 id="1-2-开放安全组"><a href="#1-2-开放安全组" class="headerlink" title="1.2 开放安全组"></a>1.2 开放安全组</h3><p>在云主机页面，选择<strong>”安全组“&#x3D;&#x3D;》”新建安全组“&#x3D;&#x3D;》”放通全部端口“&#x3D;&#x3D;》”管理实例“&#x3D;&#x3D;》”新增关联“&#x3D;&#x3D;》把实例添加进去</strong></p><h3 id><a href="#" class="headerlink" title></a></h3><h2 id="2-环境配置"><a href="#2-环境配置" class="headerlink" title="2 环境配置"></a>2 环境配置</h2><h3 id="2-1-安装jdk"><a href="#2-1-安装jdk" class="headerlink" title="2.1 安装jdk"></a>2.1 安装jdk</h3><p>安装的jdk版本要和项目开发中的版本一致</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum search jdk      # 查找镜像</span><br><span class="line">yum -y install java-1.11.0-openjdk*   </span><br></pre></td></tr></table></figure><h3 id="2-2-安装postgresql"><a href="#2-2-安装postgresql" class="headerlink" title="2.2 安装postgresql"></a>2.2 安装postgresql</h3><p>安装的pg版本也得和程序中的版本一致</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">yum install postgresql</span><br><span class="line">yum install postgresql-server</span><br><span class="line">yum install postgresql-devel</span><br><span class="line">yum install postgis</span><br><span class="line"># 提示is this ok的时候，输入y</span><br></pre></td></tr></table></figure><ul><li>查看版本信息：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -qi postgresql</span><br></pre></td></tr></table></figure><ul><li>查看安装位置:</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -ql postgresql</span><br></pre></td></tr></table></figure><p>若安装的版本不一致，卸载pg:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">yum remove postgresql</span><br><span class="line">yum remove postgresql-server</span><br><span class="line">yum remove postgresql-devel</span><br><span class="line">yum remove postgis</span><br><span class="line"># 提示is this ok的时候，输入y</span><br></pre></td></tr></table></figure><p>重新安装pg10</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install postgresql10-contrib postgresql10-server -y</span><br></pre></td></tr></table></figure><h3 id="2-3-配置文件夹权限和环境变量"><a href="#2-3-配置文件夹权限和环境变量" class="headerlink" title="2.3 配置文件夹权限和环境变量"></a>2.3 配置文件夹权限和环境变量</h3><ul><li><p><strong>home</strong>目录下，新建一个文件夹”<strong>postgresql_data</strong>“，把默认的postgresql的数据库移动到这个文件夹中</p></li><li><p>配置该文件夹读写权限</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir /home/postgresql_data</span><br><span class="line">chown postgres:postgres /home/postgresql_data</span><br><span class="line">chmod 750 /home/postgresql_data</span><br></pre></td></tr></table></figure></li><li><p>配置环境变量</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">export PATH=/usr/pgsql-10/bin:$PATH</span><br><span class="line">export LD_LIBRARY_PATH=/usr/pgsql-10/lib</span><br><span class="line">export PGDATA=/home/postgresql_data</span><br></pre></td></tr></table></figure></li><li><p>修改文件**&#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;postgresql-10.service：**</p><p>把数据库目录改到**&#x2F;home&#x2F;postgresql_data<strong>下，这个可以用</strong>vim<strong>语句来改（</strong>i是插入，esc——:wq是保存修改并退出**），也可以用xftp将文件传输到本地，用写字板打开，修改好了，再传回到云主机中。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">修改内容如下：</span><br><span class="line">#Location of database directory</span><br><span class="line">Environment=PGDATA=/home/postgresql_data</span><br></pre></td></tr></table></figure></li></ul><h2 id="3-数据库初始化"><a href="#3-数据库初始化" class="headerlink" title="3 数据库初始化"></a>3 数据库初始化</h2><ul><li><p>进入用户</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su postgres</span><br></pre></td></tr></table></figure></li><li><p>初始化数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">initdb</span><br></pre></td></tr></table></figure></li><li><p>退出</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exit</span><br></pre></td></tr></table></figure></li><li><p>设置pg库开机启动</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable postgresql-10.service</span><br><span class="line">service postgresql-10 start</span><br></pre></td></tr></table></figure></li><li><p>查看状态</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service postgresql-10 status</span><br></pre></td></tr></table></figure><p>有<strong>绿色的active（running）</strong>就说明初始化成功了</p></li><li><p>将用户密码和数据库密码改为一致</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">passwd postgres</span><br><span class="line"># 输入一遍新密码，再输入一遍确认</span><br></pre></td></tr></table></figure></li><li><p>修改用户密码</p><p>在sql模式下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">su postgres</span><br><span class="line">psql</span><br><span class="line">ALTER USER postgres WITH PASSWORD &#x27;密码&#x27;;</span><br></pre></td></tr></table></figure><p>退出：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">\q</span><br><span class="line">exit</span><br></pre></td></tr></table></figure></li></ul><h2 id="4-安装PostGIS"><a href="#4-安装PostGIS" class="headerlink" title="4 安装PostGIS"></a>4 安装PostGIS</h2><ul><li><p>要选择合适的版本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">yum -y install epel-release</span><br><span class="line">yum install postgis24_10 postgis24_10-client</span><br><span class="line">yum install ogr_fdw10 -y</span><br><span class="line">yum install pgrouting_10 -y</span><br></pre></td></tr></table></figure></li></ul><h2 id="5-创建空间数据库"><a href="#5-创建空间数据库" class="headerlink" title="5 创建空间数据库"></a>5 创建空间数据库</h2><ul><li><p>进入psql角色</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">su postgres</span><br><span class="line">psql</span><br></pre></td></tr></table></figure></li><li><p>创建数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CREATE DATABASE gismap;</span><br></pre></td></tr></table></figure></li><li><p>进入数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\c gismap;</span><br></pre></td></tr></table></figure></li><li><p>空间扩展</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">CREATE EXTENSION postgis;</span><br><span class="line">CREATE EXTENSION postgis_topology;</span><br><span class="line">CREATE EXTENSION ogr_fdw;</span><br></pre></td></tr></table></figure></li><li><p>查看是否扩展成功</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT postgis_full_version();</span><br></pre></td></tr></table></figure><p>当出现以下内容说明扩展成功：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">POSTGIS=&quot;2.4.8 r17696&quot; PGSQL=&quot;100&quot; GEOS=&quot;3.7.1-CAPI-1.11.1 27a5e771&quot; PROJ=&quot;Rel. 4.9.3, 1</span><br><span class="line">5 August 2016&quot; GDAL=&quot;GDAL 2.3.2, released 2018/09/21&quot; LIBXML=&quot;2.9.1&quot; LIBJSON=&quot;0.11&quot; LIBPR</span><br><span class="line">OTOBUF=&quot;1.0.2&quot; TOPOLOGY RASTER</span><br><span class="line">(1 row)</span><br></pre></td></tr></table></figure></li><li><p>退出：\q</p><p>exit</p></li></ul><h2 id="6-本地数据导入云主机pg库并连接"><a href="#6-本地数据导入云主机pg库并连接" class="headerlink" title="6 本地数据导入云主机pg库并连接"></a>6 本地数据导入云主机pg库并连接</h2><h3 id="6-1-pg-dump转储和还原数据"><a href="#6-1-pg-dump转储和还原数据" class="headerlink" title="6.1 pg_dump转储和还原数据"></a>6.1 pg_dump转储和还原数据</h3><ul><li><p>管理员权限打开本地cmd，切换到<strong>pg_dump</strong>目录下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd C:\PostgreSQL\10\bin</span><br></pre></td></tr></table></figure></li><li><p>运行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pg_dump -U postgres -d postgres -f dump.sql</span><br><span class="line"># -U 后面是用户名，-d 后面是数据库名，-f 是转储数据库的文件名</span><br></pre></td></tr></table></figure><p>完成之后，dump.sql就在<strong>C:\PostgreSQL\10\bin</strong>文件夹下</p></li><li><p>把<strong>dump.sql</strong>传到云主机上</p><ul><li><p>在云服务器终端进入home目录下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /home</span><br></pre></td></tr></table></figure></li><li><p>运行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">psql -d gismap -U postgres -f dump.sql</span><br><span class="line"># gismap是之前新建的数据库</span><br></pre></td></tr></table></figure></li><li><p>检查是否成功导入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">su postgres</span><br><span class="line">psql</span><br><span class="line">\c gismap</span><br><span class="line">select * from v6_time_cnty_pts_utf_wgs84 limit 1;</span><br></pre></td></tr></table></figure><p>若能查出结果，就说明成功了！</p></li><li><p>一些sql语句</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SELECT current_user;           # 查当前数据库的用户名</span><br><span class="line">SELECT current_database();     # 查当前数据库名</span><br><span class="line">SELECT version();              # 查版本</span><br></pre></td></tr></table></figure></li><li><p>退出</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">\q                             # 退出当前用户</span><br><span class="line">exit                           # 退出psql</span><br></pre></td></tr></table></figure></li></ul></li></ul><h3 id="6-2-设置数据库IP连接"><a href="#6-2-设置数据库IP连接" class="headerlink" title="6.2 设置数据库IP连接"></a>6.2 设置数据库IP连接</h3><ul><li><p>查数据IP和端口号</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT inet_server_addr(), inet_server_port();</span><br></pre></td></tr></table></figure><p>结果是：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">postgres=# SELECT inet_server_addr(), inet_server_port();</span><br><span class="line">inet_server_addr | inet_server_port</span><br><span class="line">------------------+------------------</span><br><span class="line">|</span><br><span class="line">(1 row)</span><br></pre></td></tr></table></figure><p>既没有IP，也没有端口号，说明数据库连接还是UDP，还不支持IP访问。</p><blockquote><p>UDP（User Datagram Protocol）用户数据报协议，为应用程序提供了一种<strong>无需建立连接</strong>就可以发送封装的 IP 数据包的方法。<strong>UDP和TCP协议</strong>的主要区别是两者在如何实现信息的<strong>可靠传递</strong>方面不同。TCP 是面向<strong>连接的</strong>传输控制协议，而UDP 提供了<strong>无连接的</strong>数据报服务。TCP 具有高可靠性，确保传输数据的正确性，不出现丢失或乱序；UDP 在传输数据前不建立连接，不对数据报进行检查与修改，无须等待对方的应答，所以会出现分组丢失、重复、乱序，应用程序需要负责传输可靠性方面的所有工作；UDP 具有较好的实时性，工作效率较 TCP 协议高；UDP 段结构比 TCP 的段结构简单，因此网络开销也小。</p></blockquote></li><li><p>查看本地的端口</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd C:\PostgreSQL\10\bin</span><br><span class="line">psql -U postgres</span><br><span class="line">输入密码</span><br><span class="line">SELECT inet_server_addr(), inet_server_port();</span><br></pre></td></tr></table></figure><p>结果如下，是能查到IP和端口的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">postgres=# SELECT inet_server_addr(), inet_server_port();</span><br><span class="line">inet_server_addr | inet_server_port</span><br><span class="line">------------------+------------------</span><br><span class="line">::1 | 5432</span><br><span class="line">(1 行记录)</span><br></pre></td></tr></table></figure><p>在程序中，我们是通过ip连接数据库的，所以现在要做的是，<strong>设置数据库的ip连接</strong></p></li><li><p>云服务器连接数据库IP</p><ul><li><p>修改postgresql.conf（&#x2F;home&#x2F;postgresql_data路径下）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">将这段：</span><br><span class="line">#listen_addresses = &#x27;localhost&#x27; # what IP address(es) to listen on;</span><br><span class="line"># comma-separated list of addresses;</span><br><span class="line"># defaults to &#x27;localhost&#x27;; use &#x27;*&#x27; for all</span><br><span class="line"># (change requires restart)</span><br><span class="line">#port = 5432 # (change requires restart)</span><br><span class="line"></span><br><span class="line">修改为：</span><br><span class="line">listen_addresses = &#x27;*&#x27; # what IP address(es) to listen on;</span><br><span class="line"># comma-separated list of addresses;</span><br><span class="line"># defaults to &#x27;localhost&#x27;; use &#x27;*&#x27; for all</span><br><span class="line"># (change requires restart)</span><br><span class="line">port = 5432 # (change requires restart)</span><br></pre></td></tr></table></figure></li><li><p>修改pg_hba.conf</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">将这段：</span><br><span class="line"># TYPE DATABASE USER ADDRESS METHOD</span><br><span class="line"># &quot;local&quot; is for Unix domain socket connections only</span><br><span class="line">local all all trust</span><br><span class="line"># IPv4 local connections:</span><br><span class="line">host all all 127.0.0.1/32 trust</span><br><span class="line"># IPv6 local connections:</span><br><span class="line">host all all ::1/128 trust</span><br><span class="line"># Allow replication connections from localhost, by a user with the</span><br><span class="line"># replication privilege.</span><br><span class="line">local replication all trust</span><br><span class="line">host replication all 127.0.0.1/32 trust</span><br><span class="line">host replication all ::1/128 trust</span><br><span class="line"></span><br><span class="line">修改为：</span><br><span class="line"># TYPE DATABASE USER ADDRESS METHOD</span><br><span class="line"># &quot;local&quot; is for Unix domain socket connections only</span><br><span class="line">local all all md5</span><br><span class="line"># IPv4 local connections:</span><br><span class="line">host all all 127.0.0.1/32 md5</span><br><span class="line"># IPv6 local connections:</span><br><span class="line">host all all ::1/128 md5</span><br><span class="line"># Allow replication connections from localhost, by a user with the</span><br><span class="line"># replication privilege.</span><br><span class="line">#local replication all md5</span><br><span class="line">#host replication all 127.0.0.1/32 md5</span><br><span class="line">#host replication all ::1/128 md5</span><br><span class="line">host all all 0.0.0.0/0 md5</span><br></pre></td></tr></table></figure></li><li><p>重启服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart postgresql-10</span><br></pre></td></tr></table></figure><p>通过navicat通过实例的公网ip连接一下数据库，能连上，说明ip设置好了</p></li></ul></li></ul><blockquote><p>以上这些步骤是按照知乎专栏（<a href="https://zhuanlan.zhihu.com/p/145423630">从零开始，构建电子地图网站—-索引目录 - 知乎 (zhihu.com)</a>）实行的，但是由于我本身的电脑安装是jdk11、PostSQL12，所以云服务器安装的版本和上面的操作步骤不同下面部分是我操作过程所遇到的一些问题！</p></blockquote><hr><hr><h2 id="Problems（有些问题还待解决！）"><a href="#Problems（有些问题还待解决！）" class="headerlink" title="Problems（有些问题还待解决！）"></a>Problems（有些问题还待解决！）</h2><h3 id="1-服务器上安装PostgreSQL-12"><a href="#1-服务器上安装PostgreSQL-12" class="headerlink" title="1 服务器上安装PostgreSQL 12"></a>1 服务器上安装PostgreSQL 12</h3><ul><li>参考链接</li></ul><p><a href="https://cloud.tencent.com/developer/article/1592808">在CentOS 7上安装&amp;配置PostgreSQL 12 - 腾讯云开发者社区-腾讯云 (tencent.com)</a></p><p><a href="https://blog.csdn.net/u013408188/article/details/109461014">CentOS7环境安装Postgresql12教程_凝望深蓝的博客-CSDN博客_centos7安装postgresql12</a></p><p><a href="https://blog.csdn.net/m0_37048012/article/details/120554071">Centos 7 在线安装 PostgreSQL 12_蒜丶的博客-CSDN博客_centos在线安装postgresql</a></p><p><a href="https://www.jianshu.com/p/afc52d3871f1">PostgreSQL12+PostGIS安装(一) - 简书 (jianshu.com)</a></p><p><a href="https://www.jianshu.com/p/16683b09e9f0">PostgreSQL：修改数据库用户的密码 - 简书 (jianshu.com)</a></p><img src="https://s3.uuu.ovh/imgs/2022/11/25/f9e1d191fc8ce5ae.png" style="zoom:50%;"><ul><li><p>卸载原先的pg版本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -qa | grep postgresql      列出已安装的包,使用yum remove xxxx逐一删除</span><br></pre></td></tr></table></figure></li><li><p>报错1：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Loaded plugins: fastestmirror, langpacks</span><br><span class="line"></span><br><span class="line">Repository epel is listed more than once in the configuration</span><br></pre></td></tr></table></figure><p>参考链接：<a href="https://blog.csdn.net/qcsdn123/article/details/120087514">linux yum install  提示：Loaded plugins: fastestmirror_徐先生Paul的博客-CSDN博客</a></p></li><li><p>报错2：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(code=exited, status=1/FAILURE) lock file &quot;postmaster.pid&quot; already exists，Failed tostart PostgreSQL</span><br></pre></td></tr></table></figure><p>第一步：</p><p>去postgresql的安装目录删除postmaster.pid该文件</p><p>第二步：</p><p>删除后重启postgresql</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service postgresql-12 restart</span><br></pre></td></tr></table></figure><p>第三步：</p><p>查看 postgresql的状态</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service postgresql-12 status</span><br></pre></td></tr></table></figure><p>参考链接：<a href="https://blog.csdn.net/u014368040/article/details/89706274">(code&#x3D;exited, status&#x3D;1&#x2F;FAILURE) lock file “postmaster.pid” already exists，Failed tostart PostgreSQL_谦卑的心的博客-CSDN博客</a></p></li></ul><h3 id="2-操作数据库"><a href="#2-操作数据库" class="headerlink" title="2 操作数据库"></a>2 操作数据库</h3><ul><li><p>pg_dump转储数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pg_dump -U postgres -d postgres -f dump.sql</span><br></pre></td></tr></table></figure><p>报错：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pg_dump: 错误: 无法打开输出文件&quot;dump.sql&quot;: Permission denied</span><br></pre></td></tr></table></figure></li><li><p>导出数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pg_dump -h localhost -p 5432 -U postgres -d postgres&gt; d:\postgres.sql</span><br></pre></td></tr></table></figure></li><li><p>腾讯云运行测试数据库：</p><ul><li>导入数据库</li></ul><p>psql -U postgres(用户名) 数据库名(缺省时同用户名) &lt; &#x2F;data&#x2F;dum.sql</p><ul><li>导出整个数据库</li></ul><blockquote><p>pg_dump -h localhost -U postgres(用户名) 数据库名(缺省时同用户名) &gt;&#x2F;data&#x2F;dum.sql</p></blockquote></li></ul><h3 id="3-服务器的一些其他问题"><a href="#3-服务器的一些其他问题" class="headerlink" title="3 服务器的一些其他问题"></a>3 服务器的一些其他问题</h3><p>​     腾讯云CPU爆满：<strong>终止进程</strong></p><blockquote><ol><li><p>根据分析的占用资源的进程情况，记录需要终止的进程 PID。</p></li><li><p>输入 <code>k</code>。</p></li><li><p>输入需要终止进程的 PID ，按<strong>Enter</strong></p></li></ol></blockquote><p>参考链接：<a href="https://cloud.tencent.com/document/product/213/10310">云服务器 Linux 实例：CPU 或内存占用率高导致无法登录-故障处理-文档中心-腾讯云 (tencent.com)</a></p><h3 id="4-截图"><a href="#4-截图" class="headerlink" title="4 截图"></a>4 截图</h3><p>整个过程遇到了各种问题，有些操作过程自己也迷糊了，当时操作的时候也没有记录，只截下了部分步骤</p><p><img src="https://s3.bmp.ovh/imgs/2023/02/05/9b9ab250979df3ba.jpg"></p><p><img src="https://cdn.jsdelivr.net/gh/Chendh1999/hexoBlog_Pictures/202302051510940.png"></p><img src="/2022/11/25/%E6%9E%84%E5%BB%BA%E7%94%B5%E5%AD%90%E5%9C%B0%E5%9B%BE%E7%BD%91%E7%AB%99%E2%80%94%E2%80%9408%20%E8%85%BE%E8%AE%AF%E4%BA%91javaweb%E7%8E%AF%E5%A2%83%E6%90%AD%E8%BD%BD%E4%B8%8EPostSQL%E5%BA%93%E4%B8%8EPostGIS%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%AF%BC%E5%87%BA/Users\chendh\AppData\Roaming\Typora\typora-user-images\image-20221126231527850.png" alt="su" style="zoom:50%;"><p><img src="https://s3.bmp.ovh/imgs/2023/02/04/2a6ab8805487a061.png"></p><img src="/2022/11/25/%E6%9E%84%E5%BB%BA%E7%94%B5%E5%AD%90%E5%9C%B0%E5%9B%BE%E7%BD%91%E7%AB%99%E2%80%94%E2%80%9408%20%E8%85%BE%E8%AE%AF%E4%BA%91javaweb%E7%8E%AF%E5%A2%83%E6%90%AD%E8%BD%BD%E4%B8%8EPostSQL%E5%BA%93%E4%B8%8EPostGIS%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%AF%BC%E5%87%BA/Users\chendh\AppData\Roaming\Typora\typora-user-images\image-20221126231544229.png" alt="image-20221126231544229" style="zoom:50%;"><p><img src="https://s3.bmp.ovh/imgs/2023/02/05/87f3d483fb3ed85b.png"></p><img src="/2022/11/25/%E6%9E%84%E5%BB%BA%E7%94%B5%E5%AD%90%E5%9C%B0%E5%9B%BE%E7%BD%91%E7%AB%99%E2%80%94%E2%80%9408%20%E8%85%BE%E8%AE%AF%E4%BA%91javaweb%E7%8E%AF%E5%A2%83%E6%90%AD%E8%BD%BD%E4%B8%8EPostSQL%E5%BA%93%E4%B8%8EPostGIS%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%AF%BC%E5%87%BA/Users\chendh\AppData\Roaming\Typora\typora-user-images\image-20221126231601483.png" alt="image-20221126231601483" style="zoom:50%;"><p><img src="https://s3.bmp.ovh/imgs/2023/02/05/03709c778b548313.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Environment=PGDATA=/var/lib/pgsql/12/data/</span><br></pre></td></tr></table></figure><img src="/2022/11/25/%E6%9E%84%E5%BB%BA%E7%94%B5%E5%AD%90%E5%9C%B0%E5%9B%BE%E7%BD%91%E7%AB%99%E2%80%94%E2%80%9408%20%E8%85%BE%E8%AE%AF%E4%BA%91javaweb%E7%8E%AF%E5%A2%83%E6%90%AD%E8%BD%BD%E4%B8%8EPostSQL%E5%BA%93%E4%B8%8EPostGIS%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%AF%BC%E5%87%BA/Users\chendh\AppData\Roaming\Typora\typora-user-images\image-20221127220854447.png" alt="image-20221127220854447" style="zoom:50%;"><p><img src="https://s3.bmp.ovh/imgs/2023/02/05/861db82fdcb97f48.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select rolname,rolpassword from pg_authid;</span><br></pre></td></tr></table></figure><img src="/2022/11/25/%E6%9E%84%E5%BB%BA%E7%94%B5%E5%AD%90%E5%9C%B0%E5%9B%BE%E7%BD%91%E7%AB%99%E2%80%94%E2%80%9408%20%E8%85%BE%E8%AE%AF%E4%BA%91javaweb%E7%8E%AF%E5%A2%83%E6%90%AD%E8%BD%BD%E4%B8%8EPostSQL%E5%BA%93%E4%B8%8EPostGIS%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%AF%BC%E5%87%BA/Users\chendh\AppData\Roaming\Typora\typora-user-images\image-20221127225726266.png" alt="image-20221127225726266" style="zoom:50%;"><p><img src="https://s3.bmp.ovh/imgs/2023/02/05/eafed42c163c4091.png"></p><img src="/2022/11/25/%E6%9E%84%E5%BB%BA%E7%94%B5%E5%AD%90%E5%9C%B0%E5%9B%BE%E7%BD%91%E7%AB%99%E2%80%94%E2%80%9408%20%E8%85%BE%E8%AE%AF%E4%BA%91javaweb%E7%8E%AF%E5%A2%83%E6%90%AD%E8%BD%BD%E4%B8%8EPostSQL%E5%BA%93%E4%B8%8EPostGIS%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%AF%BC%E5%87%BA/Users\chendh\AppData\Roaming\Typora\typora-user-images\image-20221128161705124.png" alt="image-20221128161705124" style="zoom:50%;"><p><img src="https://s3.bmp.ovh/imgs/2023/02/05/5f6f0fdba513aef1.png"></p><img src="/2022/11/25/%E6%9E%84%E5%BB%BA%E7%94%B5%E5%AD%90%E5%9C%B0%E5%9B%BE%E7%BD%91%E7%AB%99%E2%80%94%E2%80%9408%20%E8%85%BE%E8%AE%AF%E4%BA%91javaweb%E7%8E%AF%E5%A2%83%E6%90%AD%E8%BD%BD%E4%B8%8EPostSQL%E5%BA%93%E4%B8%8EPostGIS%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%AF%BC%E5%87%BA/Users\chendh\AppData\Roaming\Typora\typora-user-images\image-20221128161729907.png" alt="image-20221128161729907" style="zoom:50%;"><p><img src="https://s3.bmp.ovh/imgs/2023/02/05/4065644921683a24.png"></p><img src="/2022/11/25/%E6%9E%84%E5%BB%BA%E7%94%B5%E5%AD%90%E5%9C%B0%E5%9B%BE%E7%BD%91%E7%AB%99%E2%80%94%E2%80%9408%20%E8%85%BE%E8%AE%AF%E4%BA%91javaweb%E7%8E%AF%E5%A2%83%E6%90%AD%E8%BD%BD%E4%B8%8EPostSQL%E5%BA%93%E4%B8%8EPostGIS%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%AF%BC%E5%87%BA/Users\chendh\AppData\Roaming\Typora\typora-user-images\image-20221128161748954.png" alt="image-20221128161748954" style="zoom:50%;"><p><img src="https://s3.bmp.ovh/imgs/2023/02/05/52ca885d0add906d.png"></p><img src="/2022/11/25/%E6%9E%84%E5%BB%BA%E7%94%B5%E5%AD%90%E5%9C%B0%E5%9B%BE%E7%BD%91%E7%AB%99%E2%80%94%E2%80%9408%20%E8%85%BE%E8%AE%AF%E4%BA%91javaweb%E7%8E%AF%E5%A2%83%E6%90%AD%E8%BD%BD%E4%B8%8EPostSQL%E5%BA%93%E4%B8%8EPostGIS%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%AF%BC%E5%87%BA/Users\chendh\AppData\Roaming\Typora\typora-user-images\image-20221128161801406.png" alt="image-20221128161801406" style="zoom:50%;"><p><img src="https://s3.bmp.ovh/imgs/2023/02/05/266e9b60c6de519d.png"></p><img src="/2022/11/25/%E6%9E%84%E5%BB%BA%E7%94%B5%E5%AD%90%E5%9C%B0%E5%9B%BE%E7%BD%91%E7%AB%99%E2%80%94%E2%80%9408%20%E8%85%BE%E8%AE%AF%E4%BA%91javaweb%E7%8E%AF%E5%A2%83%E6%90%AD%E8%BD%BD%E4%B8%8EPostSQL%E5%BA%93%E4%B8%8EPostGIS%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%AF%BC%E5%87%BA/Users\chendh\AppData\Roaming\Typora\typora-user-images\image-20221128162734639.png" alt="image-20221128162734639" style="zoom: 33%;"><p><img src="https://s3.bmp.ovh/imgs/2023/02/05/e17b6fa3f33e8371.png"></p><img src="/2022/11/25/%E6%9E%84%E5%BB%BA%E7%94%B5%E5%AD%90%E5%9C%B0%E5%9B%BE%E7%BD%91%E7%AB%99%E2%80%94%E2%80%9408%20%E8%85%BE%E8%AE%AF%E4%BA%91javaweb%E7%8E%AF%E5%A2%83%E6%90%AD%E8%BD%BD%E4%B8%8EPostSQL%E5%BA%93%E4%B8%8EPostGIS%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%AF%BC%E5%87%BA/Users\chendh\AppData\Roaming\Typora\typora-user-images\image-20221128163701418.png" alt="image-20221128163701418" style="zoom: 67%;"><p><img src="https://s3.bmp.ovh/imgs/2023/02/05/aa28037f8d8b463e.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">10.0.16.8:5432/gismap</span><br></pre></td></tr></table></figure><p>查看nginx配置文件</p><img src="/2022/11/25/%E6%9E%84%E5%BB%BA%E7%94%B5%E5%AD%90%E5%9C%B0%E5%9B%BE%E7%BD%91%E7%AB%99%E2%80%94%E2%80%9408%20%E8%85%BE%E8%AE%AF%E4%BA%91javaweb%E7%8E%AF%E5%A2%83%E6%90%AD%E8%BD%BD%E4%B8%8EPostSQL%E5%BA%93%E4%B8%8EPostGIS%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%AF%BC%E5%87%BA/Users\chendh\AppData\Roaming\Typora\typora-user-images\image-20221129170359969.png" alt="image-20221129170359969" style="zoom: 50%;"><p><img src="https://s3.bmp.ovh/imgs/2023/02/05/7f2ed07e8696be3b.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">thymeleaf:</span><br><span class="line">  check-template: false</span><br><span class="line">  check-template-location: false</span><br></pre></td></tr></table></figure><p><img src="/2022/11/25/%E6%9E%84%E5%BB%BA%E7%94%B5%E5%AD%90%E5%9C%B0%E5%9B%BE%E7%BD%91%E7%AB%99%E2%80%94%E2%80%9408%20%E8%85%BE%E8%AE%AF%E4%BA%91javaweb%E7%8E%AF%E5%A2%83%E6%90%AD%E8%BD%BD%E4%B8%8EPostSQL%E5%BA%93%E4%B8%8EPostGIS%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%AF%BC%E5%87%BA/Users\chendh\AppData\Roaming\Typora\typora-user-images\image-20221130131255966.png" alt="image-20221130131255966"></p><p><img src="/2022/11/25/%E6%9E%84%E5%BB%BA%E7%94%B5%E5%AD%90%E5%9C%B0%E5%9B%BE%E7%BD%91%E7%AB%99%E2%80%94%E2%80%9408%20%E8%85%BE%E8%AE%AF%E4%BA%91javaweb%E7%8E%AF%E5%A2%83%E6%90%AD%E8%BD%BD%E4%B8%8EPostSQL%E5%BA%93%E4%B8%8EPostGIS%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%AF%BC%E5%87%BA/Users\chendh\AppData\Roaming\Typora\typora-user-images\image-20221130131307566.png" alt="image-20221130131307566"></p><p><img src="/2022/11/25/%E6%9E%84%E5%BB%BA%E7%94%B5%E5%AD%90%E5%9C%B0%E5%9B%BE%E7%BD%91%E7%AB%99%E2%80%94%E2%80%9408%20%E8%85%BE%E8%AE%AF%E4%BA%91javaweb%E7%8E%AF%E5%A2%83%E6%90%AD%E8%BD%BD%E4%B8%8EPostSQL%E5%BA%93%E4%B8%8EPostGIS%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5%E5%AF%BC%E5%87%BA/Users\chendh\AppData\Roaming\Typora\typora-user-images\image-20221130131320708.png" alt="image-20221130131320708"></p>]]></content>
      
      
      <categories>
          
          <category> PostSQL </category>
          
          <category> PostGIS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PostGIS </tag>
            
            <tag> PostSQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>构建电子地图网站——07 VUE整合Leaflet/VUE打包合并到后端/前后端本地部署</title>
      <link href="/2022/11/25/%E6%9E%84%E5%BB%BA%E7%94%B5%E5%AD%90%E5%9C%B0%E5%9B%BE%E7%BD%91%E7%AB%99%E2%80%94%E2%80%9407%20VUE%E6%95%B4%E5%90%88Leaflet,VUE%E6%89%93%E5%8C%85%E5%90%88%E5%B9%B6%E5%88%B0%E5%90%8E%E7%AB%AF,%E5%89%8D%E5%90%8E%E7%AB%AF%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2/"/>
      <url>/2022/11/25/%E6%9E%84%E5%BB%BA%E7%94%B5%E5%AD%90%E5%9C%B0%E5%9B%BE%E7%BD%91%E7%AB%99%E2%80%94%E2%80%9407%20VUE%E6%95%B4%E5%90%88Leaflet,VUE%E6%89%93%E5%8C%85%E5%90%88%E5%B9%B6%E5%88%B0%E5%90%8E%E7%AB%AF,%E5%89%8D%E5%90%8E%E7%AB%AF%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2/</url>
      
        <content type="html"><![CDATA[<h2 id="1-VUE整合Leaflet"><a href="#1-VUE整合Leaflet" class="headerlink" title="1 VUE整合Leaflet"></a>1 VUE整合Leaflet</h2><h3 id="1-1-安装leaflet模块"><a href="#1-1-安装leaflet模块" class="headerlink" title="1.1 安装leaflet模块"></a>1.1 安装leaflet模块</h3><p>​        <code>npm install vue2-leaflet -S</code></p><p>​        <code>npm install leaflet -S</code></p><h3 id="1-2-加载地图"><a href="#1-2-加载地图" class="headerlink" title="1.2 加载地图"></a>1.2 加载地图</h3><p>简单的加载腾讯地图，包括一个点、一个标签、一个面和触发事件</p><ul><li><p>新建一个**&#x2F;src&#x2F;js&#x2F;txTileLayer.js**文件，放瓦片函数</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title class_">TXTileLayer</span> = L.<span class="property">TileLayer</span>.<span class="title function_">extend</span>(&#123;</span><br><span class="line">  <span class="attr">getTileUrl</span>: <span class="keyword">function</span>(<span class="params">tilePoint</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> urlArgs = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">let</span> getUrlArgs = <span class="variable language_">this</span>.<span class="property">options</span>.<span class="property">getUrlArgs</span>;</span><br><span class="line">    <span class="keyword">if</span> (getUrlArgs) &#123;</span><br><span class="line">      urlArgs = <span class="title function_">getUrlArgs</span>(tilePoint);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      urlArgs = &#123;</span><br><span class="line">        <span class="attr">z</span>: tilePoint.<span class="property">z</span>,</span><br><span class="line">        <span class="attr">x</span>: tilePoint.<span class="property">x</span>,</span><br><span class="line">        <span class="attr">y</span>: tilePoint.<span class="property">y</span></span><br><span class="line">      &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> L.<span class="property">Util</span>.<span class="title function_">template</span>(</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">_url</span>,</span><br><span class="line">      L.<span class="title function_">extend</span>(urlArgs, <span class="variable language_">this</span>.<span class="property">options</span>, &#123;</span><br><span class="line">        <span class="attr">s</span>: <span class="variable language_">this</span>.<span class="title function_">_getSubdomain</span>(tilePoint)</span><br><span class="line">      &#125;)</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li><li><p>在<strong>src&#x2F;icon</strong>中放一个<strong>dian.png</strong>，这个是点的图标</p></li><li><p><strong>src&#x2F;components&#x2F;HelperDocument.vue</strong>中</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div id=&quot;map&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">import &quot;leaflet/dist/leaflet.css&quot;;</span><br><span class="line">import &quot;leaflet/dist/leaflet.js&quot;;</span><br><span class="line">import &#123; TXTileLayer &#125; from &quot;../js/txTileLayer.js&quot;;</span><br><span class="line">export default &#123;</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      map: null</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    initLeaflet() &#123;</span><br><span class="line">      this.map = L.map(&quot;map&quot;, &#123;</span><br><span class="line">        center: [39.916527, 116.397128],</span><br><span class="line">        zoom: 10,</span><br><span class="line">        maxZoom: 23,</span><br><span class="line">        minZoom: 3</span><br><span class="line">      &#125;);</span><br><span class="line">      //按照新定义瓦片规则加载底图</span><br><span class="line">      let url =</span><br><span class="line">        &quot;http://rt1.map.gtimg.com/realtimerender/?z=&#123;z&#125;&amp;x=&#123;x&#125;&amp;y=&#123;y&#125;&amp;type=vector&amp;style=1&amp;v=1.1.1&quot;;</span><br><span class="line">      let getUrlArgs = function(tilePoint) &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">          z: tilePoint.z,</span><br><span class="line">          x: tilePoint.x,</span><br><span class="line">          y: Math.pow(2, tilePoint.z) - 1 - tilePoint.y</span><br><span class="line">        &#125;;</span><br><span class="line">      &#125;;</span><br><span class="line">      let options = &#123;</span><br><span class="line">        subdomain: &quot;012&quot;,</span><br><span class="line">        getUrlArgs: getUrlArgs</span><br><span class="line">      &#125;;</span><br><span class="line">      const txMap = new TXTileLayer(url, options);</span><br><span class="line">      txMap.addTo(this.map);</span><br><span class="line">      //marker</span><br><span class="line">      var myDivIcon = L.divIcon(&#123;</span><br><span class="line">        className: &quot;my-div-icon&quot;,</span><br><span class="line">        html: &quot;这是一个测试用的marker&quot;,</span><br><span class="line">        iconSize: 150</span><br><span class="line">      &#125;);</span><br><span class="line">      var marker = L.marker([39.916527, 116.397128], &#123; icon: myDivIcon &#125;).addTo(</span><br><span class="line">        this.map</span><br><span class="line">      );</span><br><span class="line">      marker.on(&quot;click&quot;, function(e) &#123;</span><br><span class="line">        console.log(e);</span><br><span class="line">        alert(&quot;我是Marker。&quot;);</span><br><span class="line">      &#125;);</span><br><span class="line">      //point</span><br><span class="line">      var myIcon = L.icon(&#123;</span><br><span class="line">        iconUrl: require(&quot;../icon/dian.png&quot;), //icon图片</span><br><span class="line">        iconSize: [30, 30], //icon的尺寸</span><br><span class="line">        iconAnchor: [15, 15], //锚点在icon上的坐标，左下角为原点</span><br><span class="line">        popupAnchor: [40, 0], //弹出框的锚点</span><br><span class="line">        shadowUrl: require(&quot;leaflet/dist/images/marker-shadow.png&quot;), //阴影图片</span><br><span class="line">        shadowSize: [30, 30], //阴影尺寸</span><br><span class="line">        shadowAnchor: [15, 15] //阴影锚点</span><br><span class="line">      &#125;);</span><br><span class="line">      var point = L.marker([39.916527, 116.397128], &#123;</span><br><span class="line">        icon: myIcon,</span><br><span class="line">        title: &quot;这是一个测试用的point&quot;</span><br><span class="line">      &#125;).addTo(this.map);</span><br><span class="line">      point.on(&quot;click&quot;, function(e) &#123;</span><br><span class="line">        console.log(e);</span><br><span class="line">        alert(&quot;我是point。&quot;);</span><br><span class="line">      &#125;);</span><br><span class="line">      //polygon</span><br><span class="line">      var polygon = L.polygon(</span><br><span class="line">        [</span><br><span class="line">          [</span><br><span class="line">            [40.0, 116.4],</span><br><span class="line">            [40.1, 116.4],</span><br><span class="line">            [40.1, 116.5],</span><br><span class="line">            [40.0, 116.5]</span><br><span class="line">          ], // 外部</span><br><span class="line">          [</span><br><span class="line">            [40.05, 116.45],</span><br><span class="line">            [40.06, 116.45],</span><br><span class="line">            [40.06, 116.46],</span><br><span class="line">            [40.05, 116.46]</span><br><span class="line">          ] // 孔洞</span><br><span class="line">        ],</span><br><span class="line">        &#123;</span><br><span class="line">          color: &quot;green&quot;,</span><br><span class="line">          fillColor: &quot;#f03&quot;,</span><br><span class="line">          fillOpacity: 0.5</span><br><span class="line">        &#125;</span><br><span class="line">      ).addTo(this.map);</span><br><span class="line">      // 绑定一个提示标签</span><br><span class="line">      polygon.bindTooltip(&quot;这是个多边形&quot;);</span><br><span class="line">      // 飞到这个多边形的位置</span><br><span class="line">      // this.map.fitBounds(polygon.getBounds());</span><br><span class="line">      polygon.on(&quot;click&quot;, function(e) &#123;</span><br><span class="line">        // console.log(e);</span><br><span class="line">        alert(&quot;我是polygon&quot;);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  mounted() &#123;</span><br><span class="line">    this.initLeaflet();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">#map &#123;</span><br><span class="line">  width: 100%;</span><br><span class="line">  height: 100%;</span><br><span class="line">&#125;</span><br><span class="line">.my-div-icon &#123;</span><br><span class="line">  font-size: 15px;</span><br><span class="line">  width: 5px;</span><br><span class="line">  color: red;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p><strong>HistoryMap.vue</strong></p><p>给左侧栏加一个绝对的top坐标</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div style=&quot;background-color: #fff; height: 100vh;width: 15%;position:absolute;left:0px;top: 60px&quot;&gt;</span><br></pre></td></tr></table></figure></li><li><p><strong>build&#x2F;webpack.base.conf.js</strong></p><p>修改图标打包的limit值，把它改大一点，由原来的10000，改成80000</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">test</span>: <span class="regexp">/\.(woff2?|eot|ttf|otf)(\?.*)?$/</span>,</span><br><span class="line">    <span class="attr">loader</span>: <span class="string">&#x27;url-loader&#x27;</span>,</span><br><span class="line">    <span class="attr">options</span>: &#123;</span><br><span class="line">    <span class="attr">limit</span>: <span class="number">80000</span>,</span><br><span class="line">    <span class="attr">name</span>: utils.<span class="title function_">assetsPath</span>(<span class="string">&#x27;fonts/[name].[hash:7].[ext]&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="2-VUE打包合并到后端"><a href="#2-VUE打包合并到后端" class="headerlink" title="2 VUE打包合并到后端"></a>2 VUE打包合并到后端</h2><h3 id="2-1-vue配置抽出"><a href="#2-1-vue配置抽出" class="headerlink" title="2.1 vue配置抽出"></a>2.1 vue配置抽出</h3><p>因为打包之后，文件都会混在一起，就很难修改了，所以要先把可能会修改的配置提取出来，再进行打包，把请求后端的url提取出来：</p><ul><li><p><strong>config.js</strong></p><p>static中新建config.js文件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">window</span>.<span class="property">g</span>=&#123;</span><br><span class="line">    <span class="attr">BASE_URL</span>: <span class="string">&#x27;http://localhost:8081/history/geometry?&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>index.html</strong></p><p>修改mapweb-vue&#x2F;index.html文件，引入config.js</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width,initial-scale=1.0&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;/static/config.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>vue-gismap<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- built files will be auto injected --&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><strong>HistoryMap.vue</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var urlbase = window.g.BASE_URL;</span><br></pre></td></tr></table></figure></li></ul><h3 id="2-2-打包"><a href="#2-2-打包" class="headerlink" title="2.2 打包"></a>2.2 打包</h3><ul><li><p>修改<strong>config&#x2F;index.js</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">将bulid下的<span class="attr">assetsPublicPath</span>: <span class="string">&#x27;/&#x27;</span>,改为<span class="attr">assetsPublicPath</span>: <span class="string">&#x27;./&#x27;</span>,</span><br></pre></td></tr></table></figure></li><li><p>终端运行</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm run build</span><br></pre></td></tr></table></figure><p>运行成功之后，会在多出一个<strong>dist</strong>文件夹，这个是打包生成的文件，需要把它放在后端程序之中！</p></li></ul><h3 id="2-3-并入Springboot"><a href="#2-3-并入Springboot" class="headerlink" title="2.3 并入Springboot"></a>2.3 并入Springboot</h3><p>打开IDEA中的后端项目，在<strong>src\main\resources</strong>下新建一个文件夹<strong>static</strong>，把<strong>dist</strong>文件夹中的内容拷贝到<strong>static</strong>中</p><h3 id="2-4-运行测试"><a href="#2-4-运行测试" class="headerlink" title="2.4 运行测试"></a>2.4 运行测试</h3><p>在idea中运行程序之后，访问<code>http://localhost:8081</code>，成功！</p><h2 id="3-工程打包本地部署"><a href="#3-工程打包本地部署" class="headerlink" title="3 工程打包本地部署"></a>3 工程打包本地部署</h2><h3 id="3-1-IDEA中工程打包"><a href="#3-1-IDEA中工程打包" class="headerlink" title="3.1 IDEA中工程打包"></a>3.1 IDEA中工程打包</h3><p>首先在<strong>maven</strong>的<strong>Lifecycle</strong>中，先<strong>clean</strong>一下，再<strong>package</strong>一下，稍等一会儿，在Project中的<strong>target</strong>目录下，就会出现打包好的<strong>jar</strong>包——<code>mapweb-0.0.1-SNAPSHOT.jar</code></p><img src="https://s3.uuu.ovh/imgs/2022/11/25/74d8d6b332ea642c.png" style="zoom: 33%;"><h3 id="3-2-运行测试"><a href="#3-2-运行测试" class="headerlink" title="3.2 运行测试"></a>3.2 运行测试</h3><ul><li><p>打开cmd</p></li><li><p>切换到jar包所在目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">e:</span><br><span class="line">cd E:\develop_gis\map website\project\mapweb\mapweb\target</span><br></pre></td></tr></table></figure></li><li><p>运行jar包</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar mapweb-0.0.1-SNAPSHOT.jar</span><br></pre></td></tr></table></figure></li><li><p>运行成功，完成本地部署</p></li></ul><h3 id="报错"><a href="#报错" class="headerlink" title="报错"></a>报错</h3><ul><li><p><code>Failed to determine a suitable driver class</code></p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">Description:</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">Failed</span> <span class="title">to</span> <span class="title">configure</span> <span class="title">a</span> <span class="title">DataSource</span>: &#x27;<span class="title">url</span>&#x27; <span class="title">attribute</span> <span class="title">is</span> <span class="title">not</span> <span class="title">specified</span> <span class="title">and</span> <span class="title">no</span> <span class="title">embedded</span> <span class="title">datasource</span> <span class="title">could</span> <span class="title">be</span> <span class="title">configured</span>.</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">Reason</span>: <span class="title">Failed</span> <span class="title">to</span> <span class="title">determine</span> <span class="title">a</span> <span class="title">suitable</span> <span class="title">driver</span> <span class="title">class</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">Action</span>:</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">Consider</span> <span class="title">the</span> <span class="title">following</span>:</span></span><br><span class="line"><span class="function">        <span class="title">If</span> <span class="title">you</span> <span class="title">want</span> <span class="title">an</span> <span class="title">embedded</span> <span class="title">database</span> (<span class="title">H2</span>, <span class="title">HSQL</span> <span class="title">or</span> <span class="title">Derby</span>), <span class="title">please</span> <span class="title">put</span> <span class="title">it</span> <span class="title">on</span> <span class="title">the</span> <span class="title">classpath</span>.</span></span><br><span class="line"><span class="function">        <span class="title">If</span> <span class="title">you</span> <span class="title">have</span> <span class="title">database</span> <span class="title">settings</span> <span class="title">to</span> <span class="title">be</span> <span class="title">loaded</span> <span class="title">from</span> <span class="title">a</span> <span class="title">particular</span> <span class="title">profile</span> <span class="title">you</span> <span class="title">may</span> <span class="title">need</span> <span class="title">to</span> <span class="title">activate</span> <span class="title">it</span> (<span class="title">no</span> <span class="title">profiles</span> <span class="title">are</span> <span class="title">currently</span> <span class="title">active</span>).</span></span><br><span class="line"><span class="function">        </span></span><br></pre></td></tr></table></figure><ul><li><p>这个问题归根结底是程序的yml配置文件和没有打包进入target文件夹下，<strong>即在pom.xml文件下没有配置yml路径！！！</strong></p><p><img src="https://img-blog.csdnimg.cn/49be9d172809451496090afcb8a2b778.png" alt="img"></p></li><li><p>当yml和mapper文件都在target目录下之后，程序能够部署了，但是没有界面展示，此时的静态资源文件static还没有打包进入target下，所以在pom.xml中应该有如下的配置：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--编译main下面的xml文件和.properties文件--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/java<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>true<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--编译resources下面的配置文件和xml文件--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.yml<span class="tag">&lt;/<span class="name">include</span>&gt;</span>  <span class="comment">&lt;!--配置application.yml--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span>  <span class="comment">&lt;!--配置mapper下的xml--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.*<span class="tag">&lt;/<span class="name">include</span>&gt;</span>   <span class="comment">&lt;!--配置static静态资源--&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>参考链接：<a href="https://www.pudn.com/news/633ec15e272bb74d44331060.html#:~:text=springcloud%E8%A7%A3%E5%86%B3%E8%BF%90%E8%A1%8C%E5%87%BA%E7%8E%B0Failed">springcloud解决运行出现Failed to determine a suitable driver class-pudn.com</a></p><p><a href="https://blog.csdn.net/jingtao232/article/details/85120198">springboot maven打包静态资源文件_Tom&amp;Jerry的博客-CSDN博客</a></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> GIS </category>
          
          <category> Springboot </category>
          
          <category> PostSQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Springboot </tag>
            
            <tag> GIS </tag>
            
            <tag> PostSQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vscode的插件和一些快捷操作（持续更新）</title>
      <link href="/2022/11/24/vscode%E7%9A%84%E6%8F%92%E4%BB%B6%E5%92%8C%E4%B8%80%E4%BA%9B%E5%BF%AB%E6%8D%B7%E6%93%8D%E4%BD%9C%EF%BC%88%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%EF%BC%89/"/>
      <url>/2022/11/24/vscode%E7%9A%84%E6%8F%92%E4%BB%B6%E5%92%8C%E4%B8%80%E4%BA%9B%E5%BF%AB%E6%8D%B7%E6%93%8D%E4%BD%9C%EF%BC%88%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h2><h3 id="1-Prettier-Code-formatte"><a href="#1-Prettier-Code-formatte" class="headerlink" title="1. Prettier - Code formatte"></a>1. Prettier - Code formatte</h3><ul><li><p>可以自动格式化代码，不用再自己手动一个一个的对格式</p></li><li><p>快捷键：<strong>ALT+Shift + P</strong></p></li></ul><h3 id="2-ESlint"><a href="#2-ESlint" class="headerlink" title="2. ESlint"></a>2. ESlint</h3><ul><li>javascript代码检测工具</li></ul><h2 id="快捷操作"><a href="#快捷操作" class="headerlink" title="快捷操作"></a>快捷操作</h2><h3 id="1-快速删除多行空白行方法"><a href="#1-快速删除多行空白行方法" class="headerlink" title="1. 快速删除多行空白行方法"></a>1. 快速删除多行空白行方法</h3><ol><li>打开<strong>“搜索与替换”</strong>界面，在<strong>“搜索”</strong>中输入<code>^\s*(?=\r?$)\n</code></li><li>点击“搜索”栏最后面的<strong>“使用正则表达式Alt+R”</strong></li><li><strong>“Ctrl+Alt+Enter”</strong>批量替换全部</li></ol>]]></content>
      
      
      <categories>
          
          <category> vscode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vscode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>构建电子地图网站——06 创建前端工程</title>
      <link href="/2022/11/23/%E6%9E%84%E5%BB%BA%E7%94%B5%E5%AD%90%E5%9C%B0%E5%9B%BE%E7%BD%91%E7%AB%99%E2%80%94%E2%80%9406%20%E5%88%9B%E5%BB%BA%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B/"/>
      <url>/2022/11/23/%E6%9E%84%E5%BB%BA%E7%94%B5%E5%AD%90%E5%9C%B0%E5%9B%BE%E7%BD%91%E7%AB%99%E2%80%94%E2%80%9406%20%E5%88%9B%E5%BB%BA%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<p>前端搭建程序的大致步骤：</p><ol><li>先用<strong>vue</strong>搭建工程</li><li>用<strong>element</strong>做布局</li><li>用<strong>leaflet</strong>加载地图</li><li>用<strong>axios</strong>和后端交互数据</li><li>最后<strong>webpack</strong>打包，整合进后端</li></ol><h2 id="1-安装工具及搭建项目"><a href="#1-安装工具及搭建项目" class="headerlink" title="1 安装工具及搭建项目"></a>1 安装工具及搭建项目</h2><h3 id="1-1-全局安装脚手架vue-cli"><a href="#1-1-全局安装脚手架vue-cli" class="headerlink" title="1.1 全局安装脚手架vue-cli"></a>1.1 全局安装脚手架vue-cli</h3><ul><li>直接使用<code>npm install --global vue-cli</code>命令报如下的错误</li></ul><img src="https://s3.uuu.ovh/imgs/2022/11/24/2e324d40fa46f83d.png" style="zoom: 50%;"><ul><li><p><strong>npm</strong>在国内访问慢，换成淘宝镜像<strong>cnpm</strong></p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>、执行：</span><br><span class="line">npm config get proxy</span><br><span class="line">npm config get https-proxy</span><br><span class="line">如果返回值不为null，继续执行：</span><br><span class="line">(要确保两个返回值都是null才可以执行<span class="number">2</span>，否则就要执行下面的代码)</span><br><span class="line">npm config <span class="built_in">set</span> proxy null</span><br><span class="line">npm config <span class="built_in">set</span> https-proxy null</span><br><span class="line"><span class="number">2</span>、执行：</span><br><span class="line">npm config <span class="built_in">set</span> registry http://registry.cnpmjs.org/</span><br><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org </span><br></pre></td></tr></table></figure><p>参考链接：<a href="https://blog.csdn.net/qq_45914170/article/details/112298654">(38条消息) npm安装依赖报错npm ERR! code ENOTFOUND npm ERR! errno ENOTFOUND_得我所得，爱我所爱的博客-CSDN博客_code enotfound</a></p></li><li><p>安装<strong>vue-cli</strong></p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install --global vue-cli</span><br></pre></td></tr></table></figure></li><li><p>检查vue的版本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vue -V</span><br></pre></td></tr></table></figure></li><li><p>查看vue安装情况</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm info vue</span><br></pre></td></tr></table></figure></li></ul><h3 id="1-2-全局安装webpack"><a href="#1-2-全局安装webpack" class="headerlink" title="1.2 全局安装webpack"></a>1.2 全局安装webpack</h3><ul><li><p>webpack是一个打包工具，<strong>webpack</strong>和<strong>webpack-cli</strong>两个都全局安装一下</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install webpack -g</span><br><span class="line">npm install webpack-cli -g</span><br></pre></td></tr></table></figure></li><li><p>查看webpack的版本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">webpack -v</span><br></pre></td></tr></table></figure></li></ul><img src="https://s3.uuu.ovh/imgs/2022/11/24/ad778276a6e70a53.png" style="zoom:50%;"><h3 id="1-3-用vue-cli新建项目"><a href="#1-3-用vue-cli新建项目" class="headerlink" title="1.3 用vue-cli新建项目"></a>1.3 用vue-cli新建项目</h3><ul><li><p>新建一个本地文件夹用于前端项目</p></li><li><p>在该文件夹右键打开命令行界面</p><ul><li><p>新建项目</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vue init webpack mapweb-vue</span><br></pre></td></tr></table></figure><img src="https://s3.uuu.ovh/imgs/2022/11/24/a27a3c21ef8969aa.png" style="zoom: 50%;"><blockquote><p>Install vue-router? (Y&#x2F;n)，敲y，安装路由；</p><p>Use ESLint to lint your code? (Y&#x2F;n)，敲n，不安装ESlint管理代码，这个对初学者不太友好，不允许有一点点代码不规范；</p><p>Setup unit tests with Karma + Mocha? (Y&#x2F;n)，敲n，不安装单元测试；</p><p>Setup e2e tests with Nightwatch(Y&#x2F;n)?敲n，不要这个，要不然写程序的时候，会经常出现警告；</p><p>Should we run ‘npm install’ for you after the project has been created?选择no，因为接下来使用cnpm，不使用npm</p></blockquote></li><li><p>根据提示：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 进入文件夹下</span><br><span class="line"><span class="built_in">cd</span> mapweb-vue</span><br><span class="line"># 安装</span><br><span class="line">cnpm install</span><br><span class="line"># 启动项目</span><br><span class="line">cnpm run dev</span><br></pre></td></tr></table></figure></li><li><p>当运行完出现之后 <a href="http://localhost:8080页面出现vue的界面说明工程搭建成功！">http://localhost:8080页面出现vue的界面说明工程搭建成功！</a></p></li></ul></li></ul><h3 id="1-4-安装element"><a href="#1-4-安装element" class="headerlink" title="1.4 安装element"></a>1.4 安装element</h3><ul><li><p>Ctrl+C，退出dev界面</p></li><li><p>安装vue-awesom，各种icon都在这里</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm i vue-awesome -S</span><br></pre></td></tr></table></figure></li><li><p>安装normalize.css</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install normalize.css</span><br></pre></td></tr></table></figure></li></ul><h2 id="2-设置布局"><a href="#2-设置布局" class="headerlink" title="2 设置布局"></a>2 设置布局</h2><h3 id="2-1-预览样式"><a href="#2-1-预览样式" class="headerlink" title="2.1 预览样式"></a>2.1 预览样式</h3><p>​        <strong>顶部</strong>三个tab标签：历史地图、专题地图、帮助文档；</p><p>​        <strong>左侧</strong>一栏树状复选框，用以选择朝代；</p><p>​        <strong>中间</strong>部分是地图；</p><p>​        <strong>右侧</strong>是一个可隐藏的表，用以显示属性。</p><img src="https://pic1.zhimg.com/v2-c3646b7da44687272aec893e2de60f80_r.jpg" alt="img" style="zoom: 50%;"><p>布局采用了<strong>layout+container</strong>，路由用的是<strong>router</strong>，左侧的树状结构是<strong>tree</strong>控件，右侧点击“打开嵌套表格的drawer”，弹出的是<strong>drawer</strong>控件，内嵌<strong>table</strong>控件。</p><h3 id="2-2-项目文件结构"><a href="#2-2-项目文件结构" class="headerlink" title="2.2 项目文件结构"></a>2.2 项目文件结构</h3><p>缺失的需要新建，多余的可以删除！</p><img src="https://s3.uuu.ovh/imgs/2022/11/24/a6ab6aed6cc5100e.png" style="zoom:50%;"><h3 id="2-3-修改文件内容"><a href="#2-3-修改文件内容" class="headerlink" title="2.3 修改文件内容"></a>2.3 修改文件内容</h3><ul><li><p>全局设置</p><ul><li><p>main.js</p><p>主要是把用到的一些<strong>依赖导入</strong>，这些依赖都在文件夹node_modules下</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// The Vue build version to load with the `import` command</span></span><br><span class="line"><span class="comment">// (runtime-only or standalone) has been set in webpack.base.conf with an alias.</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Vue</span> <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&#x27;./App&#x27;</span></span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">&#x27;./router&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">ElementUI</span> <span class="keyword">from</span> <span class="string">&#x27;element-ui&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;element-ui/lib/theme-chalk/index.css&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">NormailizeCss</span> <span class="keyword">from</span> <span class="string">&#x27;normalize.css&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;vue-awesome/icons&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Icon</span> <span class="keyword">from</span> <span class="string">&#x27;vue-awesome/components/Icon&#x27;</span></span><br><span class="line"><span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">use</span>(<span class="title class_">ElementUI</span>)</span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">component</span>(<span class="string">&#x27;icon&#x27;</span>,<span class="title class_">Icon</span>)</span><br><span class="line"><span class="comment">/* eslint-disable no-new */</span></span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">  <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">  router,</span><br><span class="line">  <span class="attr">components</span>: &#123; <span class="title class_">App</span> &#125;,</span><br><span class="line">  <span class="attr">template</span>: <span class="string">&#x27;&lt;App/&gt;&#x27;</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>App.vue</p><p>主要是设置全局的一些样式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div id=&quot;app&quot;&gt;</span><br><span class="line">    &lt;el-container&gt;    </span><br><span class="line">      &lt;el-header class=&quot;header&quot;&gt;   </span><br><span class="line">      &lt;vheader /&gt; </span><br><span class="line">    &lt;/el-header&gt;</span><br><span class="line">    &lt;el-container&gt; </span><br><span class="line">    &lt;el-main class=&quot;el-main&quot;&gt;   </span><br><span class="line">     &lt;router-view&gt;&lt;/router-view&gt;   </span><br><span class="line">    &lt;/el-main&gt;   </span><br><span class="line">    &lt;/el-container&gt;    </span><br><span class="line">    &lt;/el-container&gt;    </span><br><span class="line">  &lt;/div&gt; </span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">import Header from &#x27;@/components/Header&#x27;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &#x27;app&#x27;,</span><br><span class="line">  components:&#123;</span><br><span class="line">    &#x27;vheader&#x27;:Header</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">.header&#123;</span><br><span class="line">  background-color: #c00000;</span><br><span class="line">  color: #fff;</span><br><span class="line">  line-height: 60px;</span><br><span class="line">&#125;</span><br><span class="line">.el-main&#123;</span><br><span class="line">  background-color: #E9EEF3;</span><br><span class="line">  color: #333;</span><br><span class="line">  text-align: center;</span><br><span class="line">  line-height: 160px;</span><br><span class="line">  height: 500px;</span><br><span class="line">&#125;</span><br><span class="line">/*更改全局的滚动条样式*/</span><br><span class="line">::-webkit-scrollbar&#123;</span><br><span class="line">  width: 8px;</span><br><span class="line">  height: 8px;</span><br><span class="line">  background-color: #fff;</span><br><span class="line">&#125;</span><br><span class="line">::-webkit-scrollbar-thumb &#123;</span><br><span class="line">  border-radius:5px;</span><br><span class="line">  -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, .3);</span><br><span class="line">  background-color: rgba(0, 0, 0, .1)</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul></li><li><p>组件设置</p><ul><li><p>Header.vue——头部</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;el-row :gutter=&quot;20&quot;&gt;   </span><br><span class="line">    &lt;el-col :span=&quot;4&quot;&gt;中国历史地图&lt;/div&gt;&lt;/el-col&gt;   </span><br><span class="line">    &lt;el-col :span=&quot;16&quot;&gt;    </span><br><span class="line">    &lt;el-menu class=&quot;el-menu-demo&quot; mode=&quot;horizontal&quot;   </span><br><span class="line">    background-color=&quot;#c00000&quot;   </span><br><span class="line">    text-color=&quot;#fff&quot;   </span><br><span class="line">    active-text-color=&quot;#000&quot;&gt;   </span><br><span class="line">    &lt;el-menu-item index=&quot;1&quot;&gt;  </span><br><span class="line">    &lt;span&gt;</span><br><span class="line">        &lt;router-link to=&quot;/&quot;&gt;历史地理&lt;/router-link&gt;</span><br><span class="line">    &lt;/span&gt;   </span><br><span class="line">    &lt;/el-menu-item&gt;</span><br><span class="line">    &lt;el-menu-item index=&quot;2&quot;&gt;   </span><br><span class="line">    &lt;span&gt;</span><br><span class="line">        &lt;router-link to=&quot;/specialmap&quot;&gt;专题地图&lt;/router-link&gt;</span><br><span class="line">    &lt;/span&gt; </span><br><span class="line">    &lt;/el-menu-item&gt;</span><br><span class="line">    &lt;el-menu-item index=&quot;3&quot;&gt;</span><br><span class="line">    &lt;span&gt;</span><br><span class="line">        &lt;router-link to=&quot;/helperdocument&quot;&gt;帮助文档&lt;/router-link&gt;</span><br><span class="line">    &lt;/span&gt;</span><br><span class="line">    &lt;/el-menu-item&gt;</span><br><span class="line">    &lt;/el-menu&gt;  </span><br><span class="line">    &lt;/el-col&gt;   </span><br><span class="line">    &lt;/el-row&gt;   </span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;style&gt;  </span><br><span class="line">    .el-row &#123;   </span><br><span class="line">    /* margin-top:10px; */</span><br><span class="line">    margin-bottom: 10px;</span><br><span class="line">    &amp;:last-child &#123;</span><br><span class="line">    margin-bottom: 0;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    .el-col &#123;</span><br><span class="line">    border-radius: 4px;</span><br><span class="line">    &#125;</span><br><span class="line">    .bg-purple &#123;</span><br><span class="line">    background: #d3dce6;</span><br><span class="line">    &#125;</span><br><span class="line">    .grid-content &#123;</span><br><span class="line">    border-radius: 4px;  </span><br><span class="line">    min-height: 36px;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure></li><li><p>HistoryMap.vue——历史地图</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div style=&quot;background-color: #fff; height: 75vh;width: 200px;float:left;&quot;&gt;</span><br><span class="line">      &lt;el-scrollbar style=&quot;height: 100%;&quot;&gt;</span><br><span class="line">        &lt;el-tree</span><br><span class="line">          :data=&quot;treedata&quot;</span><br><span class="line">          show-checkbox</span><br><span class="line">          node-key=&quot;id&quot;</span><br><span class="line">          :props=&quot;defaultProps&quot;</span><br><span class="line">          @check=&quot;changecheck&quot;</span><br><span class="line">        &gt;</span><br><span class="line">        &lt;/el-tree&gt;</span><br><span class="line">      &lt;/el-scrollbar&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;el-drawer title=&quot;属性&quot; :visible.sync=&quot;table&quot; direction=&quot;rtl&quot; size=&quot;20%&quot;&gt;</span><br><span class="line">      &lt;el-table :data=&quot;gridData&quot; height=&quot;85vh&quot; border&gt;</span><br><span class="line">        &lt;el-table-column</span><br><span class="line">          property=&quot;field&quot;</span><br><span class="line">          label=&quot;字段&quot;</span><br><span class="line">          width=&quot;100&quot;</span><br><span class="line">        &gt;&lt;/el-table-column&gt;</span><br><span class="line">        &lt;el-table-column</span><br><span class="line">          property=&quot;value&quot;</span><br><span class="line">          label=&quot;值&quot;</span><br><span class="line">          width=&quot;200&quot;</span><br><span class="line">        &gt;&lt;/el-table-column&gt;</span><br><span class="line">      &lt;/el-table&gt;</span><br><span class="line">    &lt;/el-drawer&gt;</span><br><span class="line">    &lt;el-button type=&quot;text&quot; @click=&quot;table = true&quot;</span><br><span class="line">      &gt;打开嵌套表格的 Drawer&lt;/el-button</span><br><span class="line">    &gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">import &#123; treedata &#125; from &quot;../js/treedata.js&quot;;</span><br><span class="line">export default &#123;</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      treedata: treedata,</span><br><span class="line">      defaultProps: &#123;</span><br><span class="line">        children: &quot;children&quot;,</span><br><span class="line">        label: &quot;label&quot;</span><br><span class="line">      &#125;,</span><br><span class="line">      table: false,</span><br><span class="line">      gridData: [</span><br><span class="line">        &#123;</span><br><span class="line">          field: &quot;name_py&quot;,</span><br><span class="line">          value: &quot;Baode Zhou&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          field: &quot;name_ch&quot;,</span><br><span class="line">          value: &quot;保德州&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          field: &quot;name_ft&quot;,</span><br><span class="line">          value: &quot;保德州&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          field: &quot;pres_loc&quot;,</span><br><span class="line">          value: &quot;山西保德县城西侧&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          field: &quot;type_ch&quot;,</span><br><span class="line">          value: &quot;州&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          field: &quot;lev_rank&quot;,</span><br><span class="line">          value: &quot;6&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          field: &quot;beg_yr&quot;,</span><br><span class="line">          value: 1376</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          field: &quot;beg_rule&quot;,</span><br><span class="line">          value: &quot;4&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          field: &quot;end_yr&quot;,</span><br><span class="line">          value: 1911</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          field: &quot;geo_src&quot;,</span><br><span class="line">          value: &quot;FROM_AC&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          field: &quot;compiler&quot;,</span><br><span class="line">          value: &quot;&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          field: &quot;gecomplr&quot;,</span><br><span class="line">          value: &quot;&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          field: &quot;checker&quot;,</span><br><span class="line">          value: &quot;&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          field: &quot;ent_date&quot;,</span><br><span class="line">          value: &quot;&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          field: &quot;beg_chg_ty&quot;,</span><br><span class="line">          value: &quot;更名&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          field: &quot;end_chg_ty&quot;,</span><br><span class="line">          value: &quot;数据下限&quot;</span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    changecheck(e, data) &#123;</span><br><span class="line">      if (e[&quot;level&quot;] === 1) &#123;</span><br><span class="line">        e[&quot;ischeck&quot;] = !e[&quot;ischeck&quot;];</span><br><span class="line">        for (var i = 0; i &lt; e[&quot;children&quot;].length; i++) &#123;</span><br><span class="line">          e[&quot;children&quot;][i][&quot;ischeck&quot;] = e[&quot;ischeck&quot;];</span><br><span class="line">          for (var j = 0; j &lt; e[&quot;children&quot;][i][&quot;children&quot;].length; j++) &#123;</span><br><span class="line">            e[&quot;children&quot;][i][&quot;children&quot;][j] = e[&quot;ischeck&quot;];</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125; else if (e[&quot;level&quot;] === 2) &#123;</span><br><span class="line">        e[&quot;ischeck&quot;] = !e[&quot;ischeck&quot;];</span><br><span class="line">        e[&quot;children&quot;][0][&quot;ischeck&quot;] = e[&quot;ischeck&quot;];</span><br><span class="line">        e[&quot;children&quot;][1][&quot;ischeck&quot;] = e[&quot;ischeck&quot;];</span><br><span class="line">        e[&quot;children&quot;][2][&quot;ischeck&quot;] = e[&quot;ischeck&quot;];</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        e[&quot;ischeck&quot;] = !e[&quot;ischeck&quot;];</span><br><span class="line">      &#125;</span><br><span class="line">      console.log(e);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;style&gt;&lt;/style&gt;</span><br></pre></td></tr></table></figure></li><li><p>SpecialMap.vue——专题地图</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    专题地图</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure></li><li><p>HelperDocument.vue——帮助文档</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    帮助文档</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>树状复选框设置</p><ul><li><p>treedata.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> treedata = [</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">id</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="attr">label</span>: <span class="string">&quot;全部内容&quot;</span>,</span><br><span class="line">    <span class="attr">ischeck</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">level</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="attr">timerange</span>: [-<span class="number">5000</span>, <span class="number">1840</span>],</span><br><span class="line">    <span class="attr">children</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">id</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="attr">label</span>: <span class="string">&quot;商周&quot;</span>,</span><br><span class="line">        <span class="attr">ischeck</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">level</span>: <span class="number">2</span>,</span><br><span class="line">        <span class="attr">timerange</span>: [-<span class="number">5000</span>, -<span class="number">221</span>],</span><br><span class="line">        <span class="attr">children</span>: [</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">id</span>: <span class="number">2</span>,</span><br><span class="line">            <span class="attr">label</span>: <span class="string">&quot;cnty点&quot;</span>,</span><br><span class="line">            <span class="attr">ischeck</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="attr">level</span>: <span class="number">3</span>,</span><br><span class="line">            <span class="attr">timerange</span>: [-<span class="number">5000</span>, -<span class="number">221</span>]</span><br><span class="line">          &#125;,</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">id</span>: <span class="number">3</span>,</span><br><span class="line">            <span class="attr">label</span>: <span class="string">&quot;pref点&quot;</span>,</span><br><span class="line">            <span class="attr">ischeck</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="attr">level</span>: <span class="number">3</span>,</span><br><span class="line">            <span class="attr">timerange</span>: [-<span class="number">5000</span>, -<span class="number">221</span>]</span><br><span class="line">          &#125;,</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">id</span>: <span class="number">4</span>,</span><br><span class="line">            <span class="attr">label</span>: <span class="string">&quot;pref面&quot;</span>,</span><br><span class="line">            <span class="attr">ischeck</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="attr">level</span>: <span class="number">3</span>,</span><br><span class="line">            <span class="attr">timerange</span>: [-<span class="number">5000</span>, -<span class="number">221</span>]</span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">id</span>: <span class="number">5</span>,</span><br><span class="line">        <span class="attr">label</span>: <span class="string">&quot;秦&quot;</span>,</span><br><span class="line">        <span class="attr">ischeck</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">level</span>: <span class="number">2</span>,</span><br><span class="line">        <span class="attr">timerange</span>: [-<span class="number">220</span>, -<span class="number">202</span>],</span><br><span class="line">        <span class="attr">children</span>: [</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">id</span>: <span class="number">6</span>,</span><br><span class="line">            <span class="attr">label</span>: <span class="string">&quot;cnty点&quot;</span>,</span><br><span class="line">            <span class="attr">ischeck</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="attr">level</span>: <span class="number">3</span>,</span><br><span class="line">            <span class="attr">timerange</span>: [-<span class="number">220</span>, -<span class="number">202</span>]</span><br><span class="line">          &#125;,</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">id</span>: <span class="number">7</span>,</span><br><span class="line">            <span class="attr">label</span>: <span class="string">&quot;pref点&quot;</span>,</span><br><span class="line">            <span class="attr">ischeck</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="attr">level</span>: <span class="number">3</span>,</span><br><span class="line">            <span class="attr">timerange</span>: [-<span class="number">220</span>, -<span class="number">202</span>]</span><br><span class="line">          &#125;,</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">id</span>: <span class="number">8</span>,</span><br><span class="line">            <span class="attr">label</span>: <span class="string">&quot;pref面&quot;</span>,</span><br><span class="line">            <span class="attr">ischeck</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="attr">level</span>: <span class="number">3</span>,</span><br><span class="line">            <span class="attr">timerange</span>: [-<span class="number">220</span>, -<span class="number">202</span>]</span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">id</span>: <span class="number">9</span>,</span><br><span class="line">        <span class="attr">label</span>: <span class="string">&quot;汉&quot;</span>,</span><br><span class="line">        <span class="attr">ischeck</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">level</span>: <span class="number">2</span>,</span><br><span class="line">        <span class="attr">timerange</span>: [-<span class="number">201</span>, <span class="number">220</span>],</span><br><span class="line">        <span class="attr">children</span>: [</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">id</span>: <span class="number">10</span>,</span><br><span class="line">            <span class="attr">label</span>: <span class="string">&quot;cnty点&quot;</span>,</span><br><span class="line">            <span class="attr">ischeck</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="attr">level</span>: <span class="number">3</span>,</span><br><span class="line">            <span class="attr">timerange</span>: [-<span class="number">201</span>, <span class="number">220</span>]</span><br><span class="line">          &#125;,</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">id</span>: <span class="number">11</span>,</span><br><span class="line">            <span class="attr">label</span>: <span class="string">&quot;pref点&quot;</span>,</span><br><span class="line">            <span class="attr">ischeck</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="attr">level</span>: <span class="number">3</span>,</span><br><span class="line">            <span class="attr">timerange</span>: [-<span class="number">201</span>, <span class="number">220</span>]</span><br><span class="line">          &#125;,</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">id</span>: <span class="number">12</span>,</span><br><span class="line">            <span class="attr">label</span>: <span class="string">&quot;pref面&quot;</span>,</span><br><span class="line">            <span class="attr">ischeck</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="attr">level</span>: <span class="number">3</span>,</span><br><span class="line">            <span class="attr">timerange</span>: [-<span class="number">201</span>, <span class="number">220</span>]</span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">id</span>: <span class="number">13</span>,</span><br><span class="line">        <span class="attr">label</span>: <span class="string">&quot;晋三国&quot;</span>,</span><br><span class="line">        <span class="attr">ischeck</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">level</span>: <span class="number">2</span>,</span><br><span class="line">        <span class="attr">timerange</span>: [<span class="number">221</span>, <span class="number">589</span>],</span><br><span class="line">        <span class="attr">children</span>: [</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">id</span>: <span class="number">14</span>,</span><br><span class="line">            <span class="attr">label</span>: <span class="string">&quot;cnty点&quot;</span>,</span><br><span class="line">            <span class="attr">ischeck</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="attr">level</span>: <span class="number">3</span>,</span><br><span class="line">            <span class="attr">timerange</span>: [<span class="number">221</span>, <span class="number">589</span>]</span><br><span class="line">          &#125;,</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">id</span>: <span class="number">15</span>,</span><br><span class="line">            <span class="attr">label</span>: <span class="string">&quot;pref点&quot;</span>,</span><br><span class="line">            <span class="attr">ischeck</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="attr">level</span>: <span class="number">3</span>,</span><br><span class="line">            <span class="attr">timerange</span>: [<span class="number">221</span>, <span class="number">589</span>]</span><br><span class="line">          &#125;,</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">id</span>: <span class="number">16</span>,</span><br><span class="line">            <span class="attr">label</span>: <span class="string">&quot;pref面&quot;</span>,</span><br><span class="line">            <span class="attr">ischeck</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="attr">level</span>: <span class="number">3</span>,</span><br><span class="line">            <span class="attr">timerange</span>: [<span class="number">221</span>, <span class="number">589</span>]</span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">id</span>: <span class="number">17</span>,</span><br><span class="line">        <span class="attr">label</span>: <span class="string">&quot;隋唐&quot;</span>,</span><br><span class="line">        <span class="attr">ischeck</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">level</span>: <span class="number">2</span>,</span><br><span class="line">        <span class="attr">timerange</span>: [<span class="number">590</span>, <span class="number">907</span>],</span><br><span class="line">        <span class="attr">children</span>: [</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">id</span>: <span class="number">18</span>,</span><br><span class="line">            <span class="attr">label</span>: <span class="string">&quot;cnty点&quot;</span>,</span><br><span class="line">            <span class="attr">ischeck</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="attr">level</span>: <span class="number">3</span>,</span><br><span class="line">            <span class="attr">timerange</span>: [<span class="number">590</span>, <span class="number">907</span>]</span><br><span class="line">          &#125;,</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">id</span>: <span class="number">19</span>,</span><br><span class="line">            <span class="attr">label</span>: <span class="string">&quot;pref点&quot;</span>,</span><br><span class="line">            <span class="attr">ischeck</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="attr">level</span>: <span class="number">3</span>,</span><br><span class="line">            <span class="attr">timerange</span>: [<span class="number">590</span>, <span class="number">907</span>]</span><br><span class="line">          &#125;,</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">id</span>: <span class="number">20</span>,</span><br><span class="line">            <span class="attr">label</span>: <span class="string">&quot;pref面&quot;</span>,</span><br><span class="line">            <span class="attr">ischeck</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="attr">level</span>: <span class="number">3</span>,</span><br><span class="line">            <span class="attr">timerange</span>: [<span class="number">590</span>, <span class="number">907</span>]</span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">id</span>: <span class="number">21</span>,</span><br><span class="line">        <span class="attr">label</span>: <span class="string">&quot;五代十国&quot;</span>,</span><br><span class="line">        <span class="attr">ischeck</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">level</span>: <span class="number">2</span>,</span><br><span class="line">        <span class="attr">timerange</span>: [<span class="number">908</span>, <span class="number">960</span>],</span><br><span class="line">        <span class="attr">children</span>: [</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">id</span>: <span class="number">22</span>,</span><br><span class="line">            <span class="attr">label</span>: <span class="string">&quot;cnty点&quot;</span>,</span><br><span class="line">            <span class="attr">ischeck</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="attr">level</span>: <span class="number">3</span>,</span><br><span class="line">            <span class="attr">timerange</span>: [<span class="number">908</span>, <span class="number">960</span>]</span><br><span class="line">          &#125;,</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">id</span>: <span class="number">23</span>,</span><br><span class="line">            <span class="attr">label</span>: <span class="string">&quot;pref点&quot;</span>,</span><br><span class="line">            <span class="attr">ischeck</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="attr">level</span>: <span class="number">3</span>,</span><br><span class="line">            <span class="attr">timerange</span>: [<span class="number">908</span>, <span class="number">960</span>]</span><br><span class="line">          &#125;,</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">id</span>: <span class="number">24</span>,</span><br><span class="line">            <span class="attr">label</span>: <span class="string">&quot;pref面&quot;</span>,</span><br><span class="line">            <span class="attr">ischeck</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="attr">level</span>: <span class="number">3</span>,</span><br><span class="line">            <span class="attr">timerange</span>: [<span class="number">908</span>, <span class="number">960</span>]</span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">id</span>: <span class="number">25</span>,</span><br><span class="line">        <span class="attr">label</span>: <span class="string">&quot;宋&quot;</span>,</span><br><span class="line">        <span class="attr">ischeck</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">level</span>: <span class="number">2</span>,</span><br><span class="line">        <span class="attr">timerange</span>: [<span class="number">961</span>, <span class="number">1276</span>],</span><br><span class="line">        <span class="attr">children</span>: [</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">id</span>: <span class="number">26</span>,</span><br><span class="line">            <span class="attr">label</span>: <span class="string">&quot;cnty点&quot;</span>,</span><br><span class="line">            <span class="attr">ischeck</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="attr">level</span>: <span class="number">3</span>,</span><br><span class="line">            <span class="attr">timerange</span>: [<span class="number">961</span>, <span class="number">1276</span>]</span><br><span class="line">          &#125;,</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">id</span>: <span class="number">27</span>,</span><br><span class="line">            <span class="attr">label</span>: <span class="string">&quot;pref点&quot;</span>,</span><br><span class="line">            <span class="attr">ischeck</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="attr">level</span>: <span class="number">3</span>,</span><br><span class="line">            <span class="attr">timerange</span>: [<span class="number">961</span>, <span class="number">1276</span>]</span><br><span class="line">          &#125;,</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">id</span>: <span class="number">28</span>,</span><br><span class="line">            <span class="attr">label</span>: <span class="string">&quot;pref面&quot;</span>,</span><br><span class="line">            <span class="attr">ischeck</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="attr">level</span>: <span class="number">3</span>,</span><br><span class="line">            <span class="attr">timerange</span>: [<span class="number">961</span>, <span class="number">1276</span>]</span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">id</span>: <span class="number">29</span>,</span><br><span class="line">        <span class="attr">label</span>: <span class="string">&quot;元&quot;</span>,</span><br><span class="line">        <span class="attr">ischeck</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">level</span>: <span class="number">2</span>,</span><br><span class="line">        <span class="attr">timerange</span>: [<span class="number">1277</span>, <span class="number">1368</span>],</span><br><span class="line">        <span class="attr">children</span>: [</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">id</span>: <span class="number">30</span>,</span><br><span class="line">            <span class="attr">label</span>: <span class="string">&quot;cnty点&quot;</span>,</span><br><span class="line">            <span class="attr">ischeck</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="attr">level</span>: <span class="number">3</span>,</span><br><span class="line">            <span class="attr">timerange</span>: [<span class="number">1277</span>, <span class="number">1368</span>]</span><br><span class="line">          &#125;,</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">id</span>: <span class="number">31</span>,</span><br><span class="line">            <span class="attr">label</span>: <span class="string">&quot;pref点&quot;</span>,</span><br><span class="line">            <span class="attr">ischeck</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="attr">level</span>: <span class="number">3</span>,</span><br><span class="line">            <span class="attr">timerange</span>: [<span class="number">1277</span>, <span class="number">1368</span>]</span><br><span class="line">          &#125;,</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">id</span>: <span class="number">32</span>,</span><br><span class="line">            <span class="attr">label</span>: <span class="string">&quot;pref面&quot;</span>,</span><br><span class="line">            <span class="attr">ischeck</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="attr">level</span>: <span class="number">3</span>,</span><br><span class="line">            <span class="attr">timerange</span>: [<span class="number">1277</span>, <span class="number">1368</span>]</span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">id</span>: <span class="number">33</span>,</span><br><span class="line">        <span class="attr">label</span>: <span class="string">&quot;明&quot;</span>,</span><br><span class="line">        <span class="attr">ischeck</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">level</span>: <span class="number">2</span>,</span><br><span class="line">        <span class="attr">timerange</span>: [<span class="number">1369</span>, <span class="number">1644</span>],</span><br><span class="line">        <span class="attr">children</span>: [</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">id</span>: <span class="number">34</span>,</span><br><span class="line">            <span class="attr">label</span>: <span class="string">&quot;cnty点&quot;</span>,</span><br><span class="line">            <span class="attr">ischeck</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="attr">level</span>: <span class="number">3</span>,</span><br><span class="line">            <span class="attr">timerange</span>: [<span class="number">1369</span>, <span class="number">1644</span>]</span><br><span class="line">          &#125;,</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">id</span>: <span class="number">35</span>,</span><br><span class="line">            <span class="attr">label</span>: <span class="string">&quot;pref点&quot;</span>,</span><br><span class="line">            <span class="attr">ischeck</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="attr">level</span>: <span class="number">3</span>,</span><br><span class="line">            <span class="attr">timerange</span>: [<span class="number">1369</span>, <span class="number">1644</span>]</span><br><span class="line">          &#125;,</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">id</span>: <span class="number">36</span>,</span><br><span class="line">            <span class="attr">label</span>: <span class="string">&quot;pref面&quot;</span>,</span><br><span class="line">            <span class="attr">ischeck</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="attr">level</span>: <span class="number">3</span>,</span><br><span class="line">            <span class="attr">timerange</span>: [<span class="number">1369</span>, <span class="number">1644</span>]</span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">id</span>: <span class="number">37</span>,</span><br><span class="line">        <span class="attr">label</span>: <span class="string">&quot;清&quot;</span>,</span><br><span class="line">        <span class="attr">ischeck</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">level</span>: <span class="number">2</span>,</span><br><span class="line">        <span class="attr">timerange</span>: [<span class="number">1645</span>, <span class="number">1840</span>],</span><br><span class="line">        <span class="attr">children</span>: [</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">id</span>: <span class="number">38</span>,</span><br><span class="line">            <span class="attr">label</span>: <span class="string">&quot;cnty点&quot;</span>,</span><br><span class="line">            <span class="attr">ischeck</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="attr">level</span>: <span class="number">3</span>,</span><br><span class="line">            <span class="attr">timerange</span>: [<span class="number">1645</span>, <span class="number">1840</span>]</span><br><span class="line">          &#125;,</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">id</span>: <span class="number">39</span>,</span><br><span class="line">            <span class="attr">label</span>: <span class="string">&quot;pref点&quot;</span>,</span><br><span class="line">            <span class="attr">ischeck</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="attr">level</span>: <span class="number">3</span>,</span><br><span class="line">            <span class="attr">timerange</span>: [<span class="number">1645</span>, <span class="number">1840</span>]</span><br><span class="line">          &#125;,</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">id</span>: <span class="number">40</span>,</span><br><span class="line">            <span class="attr">label</span>: <span class="string">&quot;pref面&quot;</span>,</span><br><span class="line">            <span class="attr">ischeck</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="attr">level</span>: <span class="number">3</span>,</span><br><span class="line">            <span class="attr">timerange</span>: [<span class="number">1645</span>, <span class="number">1840</span>]</span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">];</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul></li><li><p>路由设置</p><ul><li><p>index.js</p><p>Path是url路径，是一个相对路径，component是组件页面</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Vue</span> <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Router</span> <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">HistoryMap</span> <span class="keyword">from</span> <span class="string">&#x27;@/components/HistoryMap&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">SpecialMap</span> <span class="keyword">from</span> <span class="string">&#x27;@/components/SpecialMap&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">HelperDocument</span> <span class="keyword">from</span> <span class="string">&#x27;@/components/HelperDocument&#x27;</span></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">use</span>(<span class="title class_">Router</span>)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> <span class="title class_">Router</span>(&#123;</span><br><span class="line">  <span class="attr">routes</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&#x27;/&#x27;</span>,</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&#x27;historymap&#x27;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="title class_">HistoryMap</span></span><br><span class="line">    &#125;,&#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&#x27;/specialmap&#x27;</span>,</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&#x27;specialmap&#x27;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="title class_">SpecialMap</span></span><br><span class="line">    &#125;,&#123;</span><br><span class="line">      <span class="attr">path</span>:<span class="string">&#x27;/helperdocument&#x27;</span>,</span><br><span class="line">      <span class="attr">name</span>:<span class="string">&#x27;helperdocument&#x27;</span>,</span><br><span class="line">      <span class="attr">component</span>:<span class="title class_">HelperDocument</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li></ul></li></ul><h2 id="3-运行查看效果"><a href="#3-运行查看效果" class="headerlink" title="3 运行查看效果"></a>3 运行查看效果</h2><ul><li><p>先在vscode的终端输入<code>cnpm run dev</code>报错</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">These dependencies were not found:  * element-ui in ./src/main.js * element-ui/lib/theme-chalk/index.css in ./src/main.js</span><br></pre></td></tr></table></figure></li><li><p>解决：</p><ul><li><p><strong>cmd进入命令行窗口，切入运行的项目文件夹下</strong></p><ul><li>先直接输入哪个盘，冒号结束，eg：<code>e:</code></li><li>然后就进入了e盘，把项目文件夹路径拷贝下来粘贴过去</li></ul></li><li><p><strong>输入 <code>cnpm i element-ui -S</code></strong></p></li><li><p>继续在vscode的终端界面输入<code>cnpm run dev</code>，成功！</p><img src="https://s3.uuu.ovh/imgs/2022/11/24/48c3159bc4c92b2a.png" style="zoom: 67%;"><img src="https://s3.uuu.ovh/imgs/2022/11/24/924f6fae48f44bab.png" style="zoom: 33%;"></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> GIS </category>
          
          <category> Springboot </category>
          
          <category> PostSQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Springboot </tag>
            
            <tag> GIS </tag>
            
            <tag> PostSQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>构建电子地图网站——05 try-catch\log日志\引用geojson</title>
      <link href="/2022/11/23/%E6%9E%84%E5%BB%BA%E7%94%B5%E5%AD%90%E5%9C%B0%E5%9B%BE%E7%BD%91%E7%AB%99%E2%80%94%E2%80%9405%20try-catch%E5%92%8Clog%E6%97%A5%E5%BF%97/"/>
      <url>/2022/11/23/%E6%9E%84%E5%BB%BA%E7%94%B5%E5%AD%90%E5%9C%B0%E5%9B%BE%E7%BD%91%E7%AB%99%E2%80%94%E2%80%9405%20try-catch%E5%92%8Clog%E6%97%A5%E5%BF%97/</url>
      
        <content type="html"><![CDATA[<h2 id="1-配置log日志文件"><a href="#1-配置log日志文件" class="headerlink" title="1 配置log日志文件"></a>1 配置log日志文件</h2><ul><li><p>在<strong>resource</strong>下新建<strong>logback-boot.xml</strong>文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- %m输出的信息,%p日志级别,%t线程名,%d日期,%c类的全名,%i索引【从数字0开始递增】,,, --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- appender是configuration的子节点，是负责写日志的组件。 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- ConsoleAppender：把日志输出到控制台 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">&quot;STDOUT&quot;</span> <span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.core.ConsoleAppender&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">encoder</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>%d %p (%file:%line\)- %m%n<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 控制台也要使用UTF-8，不要使用GBK，否则会中文乱码 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">charset</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">charset</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- RollingFileAppender：滚动记录文件，先将日志记录到指定文件，当符合某个条件时，将日志记录到其他文件 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 以下的大概意思是：1.先按日期存日志，日期变了，将前一天的日志文件名重命名为XXX%日期%索引，新的日志仍然是sys.log --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 2.如果日期没有发生变化，但是当前日志的文件大小超过1024KB时，对当前日志进行分割 重命名--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">&quot;syslog&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">File</span>&gt;</span>log/sys.log<span class="tag">&lt;/<span class="name">File</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- rollingPolicy:当发生滚动时，决定 RollingFileAppender 的行为，涉及文件移动和重命名。 --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- TimeBasedRollingPolicy： 最常用的滚动策略，它根据时间来制定滚动策略，既负责滚动也负责出发滚动 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">rollingPolicy</span> <span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.core.rolling.TimeBasedRollingPolicy&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 活动文件的名字会根据fileNamePattern的值，每隔一段时间改变一次 --&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 文件名：log/sys.2019-08-11.5.log --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">fileNamePattern</span>&gt;</span>log/sys.%d.%i.log<span class="tag">&lt;/<span class="name">fileNamePattern</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 每产生一个日志文件，该日志文件的保存期限为30天 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">maxHistory</span>&gt;</span>30<span class="tag">&lt;/<span class="name">maxHistory</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">timeBasedFileNamingAndTriggeringPolicy</span> <span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP&quot;</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- maxFileSize:这是活动文件的大小，默认值是10MB,设置为1024KB --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">maxFileSize</span>&gt;</span>1024KB<span class="tag">&lt;/<span class="name">maxFileSize</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">timeBasedFileNamingAndTriggeringPolicy</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">rollingPolicy</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">encoder</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- pattern节点，用来设置日志的输入格式 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">pattern</span>&gt;</span></span><br><span class="line">                %d %p (%file:%line\)- %m%n</span><br><span class="line">            <span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 记录日志的编码 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">charset</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">charset</span>&gt;</span> <span class="comment">&lt;!-- 此处设置字符集 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 控制台输出日志级别，级别大于info的日志都会被输出 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">root</span> <span class="attr">level</span>=<span class="string">&quot;info&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">&quot;STDOUT&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 指定项目包gismap，当有日志操作行为时的日志记录级别 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 级别依次为【从高到低】：FATAL &gt; ERROR &gt; WARN &gt; INFO &gt; DEBUG &gt; TRACE --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">&quot;com.cc&quot;</span> <span class="attr">level</span>=<span class="string">&quot;info&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">&quot;syslog&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">logger</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>在项目配置文件中引入日志配置</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">logging:</span></span><br><span class="line">  <span class="attr">config:</span> <span class="string">classpath:logback-boot.xml</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="2-配置try-catch"><a href="#2-配置try-catch" class="headerlink" title="2 配置try-catch"></a>2 配置try-catch</h2><ul><li><p><code>MapController.java</code></p><p>在<code>MapController.java</code>中加上<strong>try-catch</strong>，如果try有问题，catch就会抛出一个异常，把这个异常log.error打印出来</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping(value = &quot;/history&quot;)</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MapController</span> &#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> MapService mapService;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据表名和时间区间输出对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> category 表名简写</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> start 起始时间</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> end 终止时间</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/geometry&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> JSONObject <span class="title function_">getPoint</span><span class="params">(<span class="meta">@RequestParam(&quot;category&quot;)</span> String category,<span class="meta">@RequestParam(&quot;start&quot;)</span> Integer start,<span class="meta">@RequestParam(&quot;end&quot;)</span> Integer end)</span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            List&lt;GeometryModel&gt; result = mapService.getDynastyGeom(category, start, end);</span><br><span class="line">            <span class="type">JSONObject</span> <span class="variable">jsonObject</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JSONObject</span>();</span><br><span class="line">            jsonObject.put(<span class="string">&quot;number&quot;</span>, result.size());</span><br><span class="line">            <span class="type">JSONArray</span> <span class="variable">jsonArray</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JSONArray</span>();</span><br><span class="line">            <span class="keyword">for</span> (GeometryModel g : result) &#123;</span><br><span class="line">                <span class="type">JSONObject</span> <span class="variable">geom</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JSONObject</span>();</span><br><span class="line">                geom.put(<span class="string">&quot;gid&quot;</span>, g.getGId());</span><br><span class="line">                geom.put(<span class="string">&quot;namepy&quot;</span>, g.getNamePy());</span><br><span class="line">                geom.put(<span class="string">&quot;namech&quot;</span>, g.getNameCh());</span><br><span class="line">                geom.put(<span class="string">&quot;nameft&quot;</span>, g.getNameFt());</span><br><span class="line">                geom.put(<span class="string">&quot;presloc&quot;</span>, g.getPresLoc());</span><br><span class="line">                geom.put(<span class="string">&quot;typepy&quot;</span>, g.getTypePy());</span><br><span class="line">                geom.put(<span class="string">&quot;typech&quot;</span>, g.getTypeCh());</span><br><span class="line">                geom.put(<span class="string">&quot;levrank&quot;</span>, g.getLevRank());</span><br><span class="line">                geom.put(<span class="string">&quot;begyr&quot;</span>, g.getBegYr());</span><br><span class="line">                geom.put(<span class="string">&quot;begrule&quot;</span>, g.getBegRule());</span><br><span class="line">                geom.put(<span class="string">&quot;endyr&quot;</span>, g.getEndYr());</span><br><span class="line">                geom.put(<span class="string">&quot;endrule&quot;</span>, g.getEndRule());</span><br><span class="line">                geom.put(<span class="string">&quot;geosrc&quot;</span>, g.getGeoSrc());</span><br><span class="line">                geom.put(<span class="string">&quot;compiler&quot;</span>, g.getCompiler());</span><br><span class="line">                geom.put(<span class="string">&quot;gecomplr&quot;</span>, g.getGecomplr());</span><br><span class="line">                geom.put(<span class="string">&quot;checker&quot;</span>, g.getChecker());</span><br><span class="line">                geom.put(<span class="string">&quot;entdate&quot;</span>, g.getEntDate());</span><br><span class="line">                geom.put(<span class="string">&quot;begchgty&quot;</span>, g.getBegChgTy());</span><br><span class="line">                geom.put(<span class="string">&quot;endchgty&quot;</span>, g.getEndChgTy());</span><br><span class="line">                geom.put(<span class="string">&quot;geometry&quot;</span>, geometryToJson(g.getGeometry()));</span><br><span class="line">                jsonArray.add(geom);</span><br><span class="line">            &#125;</span><br><span class="line">            jsonObject.put(<span class="string">&quot;list&quot;</span>, jsonArray);</span><br><span class="line">            log.info(<span class="string">&quot;入参类别：&#123;&#125;，起始时间：&#123;&#125;，截止时间：&#123;&#125;&quot;</span>, category, start, end);</span><br><span class="line">            <span class="keyword">return</span> jsonObject;</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            log.error(<span class="string">&quot;程序错误类型：&quot;</span>,e);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> JSONObject <span class="title function_">geometryToJson</span><span class="params">(Geometry geometry)</span>&#123;</span><br><span class="line">        JSONObject jsonObject=<span class="keyword">new</span> <span class="title class_">JSONObject</span>();</span><br><span class="line">        jsonObject.put(<span class="string">&quot;type&quot;</span>,geometry.getGeometryType());</span><br><span class="line">        JSONArray coorList=<span class="keyword">new</span> <span class="title class_">JSONArray</span>();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;geometry.getNumGeometries();i++)&#123;</span><br><span class="line">            JSONArray coors=<span class="keyword">new</span> <span class="title class_">JSONArray</span>();</span><br><span class="line">            Coordinate[] coordinates=geometry.getGeometryN(i).getCoordinates();</span><br><span class="line">            <span class="keyword">for</span> (Coordinate c:coordinates) &#123;</span><br><span class="line">                JSONObject jsonObjectCoor=<span class="keyword">new</span> <span class="title class_">JSONObject</span>();</span><br><span class="line">                jsonObjectCoor.put(<span class="string">&quot;lng&quot;</span>,c.x);</span><br><span class="line">                jsonObjectCoor.put(<span class="string">&quot;lat&quot;</span>,c.y);</span><br><span class="line">                coors.add(jsonObjectCoor);</span><br><span class="line">            &#125;</span><br><span class="line">            coorList.add(coors);</span><br><span class="line">        &#125;</span><br><span class="line">        jsonObject.put(<span class="string">&quot;coordinates&quot;</span>,coorList);</span><br><span class="line">        <span class="keyword">return</span> jsonObject;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="3-引用geojson"><a href="#3-引用geojson" class="headerlink" title="3 引用geojson"></a>3 引用geojson</h2><ul><li><p>pom.xml中引入geotools依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.geotools<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>gt-geojson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>19.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">·····························</span><br><span class="line">·····························</span><br><span class="line"><span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>osgeo<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>OSGeo Release Repository<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://repo.osgeo.org/repository/release/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">snapshots</span>&gt;</span><span class="tag">&lt;<span class="name">enabled</span>&gt;</span>false<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span><span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">releases</span>&gt;</span><span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span><span class="tag">&lt;/<span class="name">releases</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>osgeo-snapshot<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>OSGeo Snapshot Repository<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://repo.osgeo.org/repository/snapshot/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">snapshots</span>&gt;</span><span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span><span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">releases</span>&gt;</span><span class="tag">&lt;<span class="name">enabled</span>&gt;</span>false<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span><span class="tag">&lt;/<span class="name">releases</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>不是所有的jar包都被包含在maven中央仓库中</strong>，如果中央仓库没有该资源，就需要<strong>配置第三方仓库</strong>（也可以理解为别人的公开私服）。maven中央仓库不包含GeoTools的相关资源，因此需要单独配置<code>OSGeo Release Repository</code>仓库。</p><p>参考链接：<a href="https://blog.csdn.net/Sky_Tree_Delivery/article/details/105415048">Maven中GeoTools的引入 - Maven 的 repository 与 mirror_Sky_Tree_Delivery的博客-CSDN博客</a></p><p><a href="https://blog.csdn.net/weixin_38676065/article/details/124273000">解决maven导入geotools依赖失败的问题_一指流沙叹风华的博客-CSDN博客</a></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> GIS </category>
          
          <category> Springboot </category>
          
          <category> PostSQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Springboot </tag>
            
            <tag> GIS </tag>
            
            <tag> PostSQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>构建电子地图网站——04 启动加载本地缓存:web+InitializingBean</title>
      <link href="/2022/11/23/%E6%9E%84%E5%BB%BA%E7%94%B5%E5%AD%90%E5%9C%B0%E5%9B%BE%E7%BD%91%E7%AB%99%E2%80%94%E2%80%9404%20%E5%90%AF%E5%8A%A8%E5%8A%A0%E8%BD%BD%E6%9C%AC%E5%9C%B0%E7%BC%93%E5%AD%98web+InitializingBean/"/>
      <url>/2022/11/23/%E6%9E%84%E5%BB%BA%E7%94%B5%E5%AD%90%E5%9C%B0%E5%9B%BE%E7%BD%91%E7%AB%99%E2%80%94%E2%80%9404%20%E5%90%AF%E5%8A%A8%E5%8A%A0%E8%BD%BD%E6%9C%AC%E5%9C%B0%E7%BC%93%E5%AD%98web+InitializingBean/</url>
      
        <content type="html"><![CDATA[<blockquote><p>前2节已经搭建好了开发平台，并通过03节的改变，已经能够对空间数据进行增删改查了，那么接下来继续对项目进行改造，以兼容更多的<strong>geometry</strong>类型,，并只需要对对3张表进行一个<strong>查询</strong>操作。由于数据库中的数据较多，直接查库较慢，所以我们把内容存在本地内存中，从内存中访问，本节主要是<strong>启动加载本地缓存</strong>！</p></blockquote><h2 id="1-model"><a href="#1-model" class="headerlink" title="1 model"></a>1 model</h2><p>把原先的PointModel类改成<strong>GeometryModel</strong>类，以兼容更多的<strong>geometry</strong>类型，相关的属性则是根据数据库中表的属性</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Getter</span></span><br><span class="line"><span class="meta">@Setter</span></span><br><span class="line"><span class="meta">@ToString</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GeometryModel</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Integer gId;</span><br><span class="line">    <span class="keyword">private</span> String namePy;</span><br><span class="line">    <span class="keyword">private</span> String nameCh;</span><br><span class="line">    <span class="keyword">private</span> String nameFt;</span><br><span class="line">    <span class="keyword">private</span> String presLoc;</span><br><span class="line">    <span class="keyword">private</span> String typePy;</span><br><span class="line">    <span class="keyword">private</span> String typeCh;</span><br><span class="line">    <span class="keyword">private</span> String levRank;</span><br><span class="line">    <span class="keyword">private</span> Integer begYr;</span><br><span class="line">    <span class="keyword">private</span> String begRule;</span><br><span class="line">    <span class="keyword">private</span> Integer endYr;</span><br><span class="line">    <span class="keyword">private</span> String endRule;</span><br><span class="line">    <span class="keyword">private</span> String geoSrc;</span><br><span class="line">    <span class="keyword">private</span> String compiler;</span><br><span class="line">    <span class="keyword">private</span> String gecomplr;</span><br><span class="line">    <span class="keyword">private</span> String checker;</span><br><span class="line">    <span class="keyword">private</span> String entDate;</span><br><span class="line">    <span class="keyword">private</span> String begChgTy;</span><br><span class="line">    <span class="keyword">private</span> String endChgTy;</span><br><span class="line">    <span class="keyword">private</span> Geometry geometry;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-dao"><a href="#2-dao" class="headerlink" title="2 dao"></a>2 dao</h2><p>只需要查询，并<strong>查询</strong>三张表。把不必要的删掉，补充需要的</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">MapDao</span> &#123;</span><br><span class="line">     <span class="comment">//针对v6_time_cnty_pts_utf_wgs84表</span></span><br><span class="line">    GeometryModel <span class="title function_">getCntyPoint</span><span class="params">(<span class="meta">@Param(&quot;gId&quot;)</span> Integer gId)</span>;</span><br><span class="line">    <span class="comment">//针对v6_time_pref_pts_utf_wgs84表</span></span><br><span class="line">    GeometryModel <span class="title function_">getPrefPoint</span><span class="params">(<span class="meta">@Param(&quot;gId&quot;)</span> Integer gId)</span>;</span><br><span class="line">    <span class="comment">//针对v6_time_pref_pgn_utf_wgs84表</span></span><br><span class="line">    GeometryModel <span class="title function_">getprefPolygon</span><span class="params">(<span class="meta">@Param(&quot;gId&quot;)</span> Integer gId)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-mapper"><a href="#3-mapper" class="headerlink" title="3 mapper"></a>3 mapper</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mapper</span> <span class="keyword">PUBLIC</span> <span class="string">&quot;-//http://mybatis.org//DTD Mapper 3.0//EN&quot;</span> <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.cc.dao.MapDao&quot;</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;geometryModelResult&quot;</span> <span class="attr">type</span>=<span class="string">&quot;com.cc.model.GeometryModel&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;gId&quot;</span> <span class="attr">column</span>=<span class="string">&quot;gid&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;BIGINT&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;namePy&quot;</span> <span class="attr">column</span>=<span class="string">&quot;name_py&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;VARCHAR&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;nameCh&quot;</span> <span class="attr">column</span>=<span class="string">&quot;name_ch&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;VARCHAR&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;nameFt&quot;</span> <span class="attr">column</span>=<span class="string">&quot;name_ft&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;VARCHAR&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;presLoc&quot;</span> <span class="attr">column</span>=<span class="string">&quot;pres_loc&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;VARCHAR&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;typePy&quot;</span> <span class="attr">column</span>=<span class="string">&quot;type_py&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;VARCHAR&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;typeCh&quot;</span> <span class="attr">column</span>=<span class="string">&quot;type_ch&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;VARCHAR&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;levRank&quot;</span> <span class="attr">column</span>=<span class="string">&quot;lev_rank&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;VARCHAR&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;begYr&quot;</span> <span class="attr">column</span>=<span class="string">&quot;beg_yr&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;BIGINT&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;begRule&quot;</span> <span class="attr">column</span>=<span class="string">&quot;beg_rule&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;VARCHAR&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;endYr&quot;</span> <span class="attr">column</span>=<span class="string">&quot;end_yr&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;BIGINT&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;endRule&quot;</span> <span class="attr">column</span>=<span class="string">&quot;end_rule&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;VARCHAR&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;geoSrc&quot;</span> <span class="attr">column</span>=<span class="string">&quot;geo_src&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;VARCHAR&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;compiler&quot;</span> <span class="attr">column</span>=<span class="string">&quot;compiler&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;VARCHAR&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;gecomplr&quot;</span> <span class="attr">column</span>=<span class="string">&quot;gecomplr&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;VARCHAR&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;checker&quot;</span> <span class="attr">column</span>=<span class="string">&quot;checker&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;VARCHAR&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;entDate&quot;</span> <span class="attr">column</span>=<span class="string">&quot;ent_date&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;VARCHAR&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;begChgTy&quot;</span> <span class="attr">column</span>=<span class="string">&quot;beg_chg_ty&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;VARCHAR&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;endChgTy&quot;</span> <span class="attr">column</span>=<span class="string">&quot;end_chg_ty&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;VARCHAR&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;geometry&quot;</span> <span class="attr">column</span>=<span class="string">&quot;geom&quot;</span> <span class="attr">typeHandler</span>=<span class="string">&quot;com.cc.mybatis.GeometryTypeHandler&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;<span class="name">sql</span> <span class="attr">id</span>=<span class="string">&quot;CNTY_PTS&quot;</span>&gt;</span></span><br><span class="line">v6_time_cnty_pts_utf_wgs84</span><br><span class="line"><span class="tag">&lt;/<span class="name">sql</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">sql</span> <span class="attr">id</span>=<span class="string">&quot;PREF_PTS&quot;</span>&gt;</span></span><br><span class="line">v6_time_pref_pts_utf_wgs84</span><br><span class="line"><span class="tag">&lt;/<span class="name">sql</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">sql</span> <span class="attr">id</span>=<span class="string">&quot;PREF_PGN&quot;</span>&gt;</span></span><br><span class="line">v6_time_pref_pgn_utf_wgs84</span><br><span class="line"><span class="tag">&lt;/<span class="name">sql</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">sql</span> <span class="attr">id</span>=<span class="string">&quot;BASE_COLUMN&quot;</span>&gt;</span></span><br><span class="line">gid,name_py,name_ch,name_ft,pres_loc,type_py,type_ch,lev_rank,beg_yr,beg_rule,end_yr,end_rule,geo_src,compiler,gecomplr,checker,ent_date,beg_chg_ty,end_chg_ty,geom</span><br><span class="line"><span class="tag">&lt;/<span class="name">sql</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getCntyPoint&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;geometryModelResult&quot;</span>&gt;</span></span><br><span class="line">SELECT</span><br><span class="line"><span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">&quot;BASE_COLUMN&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">FROM</span><br><span class="line"><span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">&quot;CNTY_PTS&quot;</span>/&gt;</span></span><br><span class="line">WHERE gid=#&#123;gId&#125; LIMIT 1</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getprefPolygon&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;geometryModelResult&quot;</span>&gt;</span></span><br><span class="line">SELECT</span><br><span class="line"><span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">&quot;BASE_COLUMN&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">FROM</span><br><span class="line"><span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">&quot;PREF_PGN&quot;</span>/&gt;</span></span><br><span class="line">WHERE gid=#&#123;gId&#125; LIMIT 1</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getPrefPoint&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;geometryModelResult&quot;</span>&gt;</span></span><br><span class="line">SELECT</span><br><span class="line"><span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">&quot;BASE_COLUMN&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">FROM</span><br><span class="line"><span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">&quot;PREF_PTS&quot;</span>/&gt;</span></span><br><span class="line">WHERE gid=#&#123;gId&#125; LIMIT 1</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="4-localcache"><a href="#4-localcache" class="headerlink" title="4 localcache"></a>4 localcache</h2><p>新建一个包localcache&#x3D;&#x3D;&gt;包下新建一个类GeometryCache.java</p><p>直接查库较慢，所以我们把内容存在本地内存中，从内存中访问，这个类继承了<strong>InitializingBean</strong>，当程序启动的时候，数据就会加载。</p><p>程序中加入了<strong>map&lt;&gt;<strong>，按照表名区分cntypts、prefpts、prefpgn，每张表存成一个list，新建一个查询方法</strong>getDynastyGeometry</strong>，用<strong>表名和时间区间查询对象</strong>。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GeometryCache</span> <span class="keyword">implements</span> <span class="title class_">InitializingBean</span> &#123;</span><br><span class="line">    </span><br><span class="line">    Map&lt;String, List&lt;GeometryModel&gt;&gt; historyGis =<span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> MapDao mapDao;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">afterPropertiesSet</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        List&lt;GeometryModel&gt; cntyGeometry=<span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="type">int</span> i=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (mapDao.getCntyPoint(i)!=<span class="literal">null</span>)&#123;</span><br><span class="line">            cntyGeometry.add(mapDao.getCntyPoint(i));</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">        historyGis.put(<span class="string">&quot;cntypts&quot;</span>,cntyGeometry);</span><br><span class="line">        List&lt;GeometryModel&gt; prefPtsGeometry=<span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        i=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (mapDao.getPrefPoint(i)!=<span class="literal">null</span>)&#123;</span><br><span class="line">            prefPtsGeometry.add(mapDao.getCntyPoint(i));</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">        historyGis.put(<span class="string">&quot;prefpts&quot;</span>,prefPtsGeometry);</span><br><span class="line">        List&lt;GeometryModel&gt; prefPgnGeometry=<span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        i=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (mapDao.getprefPolygon(i)!=<span class="literal">null</span>)&#123;</span><br><span class="line">            prefPgnGeometry.add(mapDao.getprefPolygon(i));</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">        historyGis.put(<span class="string">&quot;prefpgn&quot;</span>,prefPgnGeometry);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> List&lt;GeometryModel&gt; <span class="title function_">getDynastyGeometry</span><span class="params">(String category,Integer start,Integer end)</span>&#123;</span><br><span class="line">        List&lt;GeometryModel&gt; result=<span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (GeometryModel g:historyGis.get(category)) &#123;</span><br><span class="line">            <span class="keyword">if</span>((g.getBegYr()&gt;=start &amp;&amp; g.getBegYr()&lt;=end)||(g.getEndYr()&gt;=start&amp;&amp;g.getEndYr()&lt;=end))&#123;</span><br><span class="line">                result.add(g);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-Service"><a href="#5-Service" class="headerlink" title="5 Service"></a>5 Service</h2><p>接口——MapService</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">MapService</span> &#123;</span><br><span class="line">    List&lt;GeometryModel&gt; <span class="title function_">getDynastyGeom</span><span class="params">(String category,Integer start,Integer end)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>实现类——MapServiceImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MapServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">MapService</span> &#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> GeometryCache geometryCache;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;GeometryModel&gt; <span class="title function_">getDynastyGeom</span><span class="params">(String category,Integer start,Integer end)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> geometryCache.getDynastyGeometry(category,start,end);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="6-controller"><a href="#6-controller" class="headerlink" title="6 controller"></a>6 controller</h2><p>用json跟前端交互数据，里面有一个方法<strong>geometryToJson</strong>，将<strong>geometry对象转成json</strong>，其实geometry.toString也可以将geometry转成String，但String有长度限制，转成json更安全些</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping(value = &quot;/history&quot;)</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MapController</span> &#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> MapService mapService;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据表名和时间区间输出对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> category 表名简写</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> start 起始时间</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> end 终止时间</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/geometry&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> JSONObject <span class="title function_">getPoint</span><span class="params">(<span class="meta">@RequestParam(&quot;category&quot;)</span> String category,<span class="meta">@RequestParam(&quot;start&quot;)</span> Integer start,<span class="meta">@RequestParam(&quot;end&quot;)</span> Integer end)</span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            List&lt;GeometryModel&gt; result = mapService.getDynastyGeom(category, start, end);</span><br><span class="line">            <span class="type">JSONObject</span> <span class="variable">jsonObject</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JSONObject</span>();</span><br><span class="line">            jsonObject.put(<span class="string">&quot;number&quot;</span>, result.size());</span><br><span class="line">            <span class="type">JSONArray</span> <span class="variable">jsonArray</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JSONArray</span>();</span><br><span class="line">            <span class="keyword">for</span> (GeometryModel g : result) &#123;</span><br><span class="line">                <span class="type">JSONObject</span> <span class="variable">geom</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JSONObject</span>();</span><br><span class="line">                geom.put(<span class="string">&quot;gid&quot;</span>, g.getGId());</span><br><span class="line">                geom.put(<span class="string">&quot;namepy&quot;</span>, g.getNamePy());</span><br><span class="line">                geom.put(<span class="string">&quot;namech&quot;</span>, g.getNameCh());</span><br><span class="line">                geom.put(<span class="string">&quot;nameft&quot;</span>, g.getNameFt());</span><br><span class="line">                geom.put(<span class="string">&quot;presloc&quot;</span>, g.getPresLoc());</span><br><span class="line">                geom.put(<span class="string">&quot;typepy&quot;</span>, g.getTypePy());</span><br><span class="line">                geom.put(<span class="string">&quot;typech&quot;</span>, g.getTypeCh());</span><br><span class="line">                geom.put(<span class="string">&quot;levrank&quot;</span>, g.getLevRank());</span><br><span class="line">                geom.put(<span class="string">&quot;begyr&quot;</span>, g.getBegYr());</span><br><span class="line">                geom.put(<span class="string">&quot;begrule&quot;</span>, g.getBegRule());</span><br><span class="line">                geom.put(<span class="string">&quot;endyr&quot;</span>, g.getEndYr());</span><br><span class="line">                geom.put(<span class="string">&quot;endrule&quot;</span>, g.getEndRule());</span><br><span class="line">                geom.put(<span class="string">&quot;geosrc&quot;</span>, g.getGeoSrc());</span><br><span class="line">                geom.put(<span class="string">&quot;compiler&quot;</span>, g.getCompiler());</span><br><span class="line">                geom.put(<span class="string">&quot;gecomplr&quot;</span>, g.getGecomplr());</span><br><span class="line">                geom.put(<span class="string">&quot;checker&quot;</span>, g.getChecker());</span><br><span class="line">                geom.put(<span class="string">&quot;entdate&quot;</span>, g.getEntDate());</span><br><span class="line">                geom.put(<span class="string">&quot;begchgty&quot;</span>, g.getBegChgTy());</span><br><span class="line">                geom.put(<span class="string">&quot;endchgty&quot;</span>, g.getEndChgTy());</span><br><span class="line">                geom.put(<span class="string">&quot;geometry&quot;</span>, geometryToJson(g.getGeometry()));</span><br><span class="line">                jsonArray.add(geom);</span><br><span class="line">            &#125;</span><br><span class="line">            jsonObject.put(<span class="string">&quot;list&quot;</span>, jsonArray);</span><br><span class="line">            log.info(<span class="string">&quot;入参类别：&#123;&#125;，起始时间：&#123;&#125;，截止时间：&#123;&#125;&quot;</span>, category, start, end);</span><br><span class="line">            <span class="keyword">return</span> jsonObject;</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            log.error(<span class="string">&quot;程序错误类型：&quot;</span>,e);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> JSONObject <span class="title function_">geometryToJson</span><span class="params">(Geometry geometry)</span>&#123;</span><br><span class="line">        JSONObject jsonObject=<span class="keyword">new</span> <span class="title class_">JSONObject</span>();</span><br><span class="line">        jsonObject.put(<span class="string">&quot;type&quot;</span>,geometry.getGeometryType());</span><br><span class="line">        JSONArray coorList=<span class="keyword">new</span> <span class="title class_">JSONArray</span>();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;geometry.getNumGeometries();i++)&#123;</span><br><span class="line">            JSONArray coors=<span class="keyword">new</span> <span class="title class_">JSONArray</span>();</span><br><span class="line">            Coordinate[] coordinates=geometry.getGeometryN(i).getCoordinates();</span><br><span class="line">            <span class="keyword">for</span> (Coordinate c:coordinates) &#123;</span><br><span class="line">                JSONObject jsonObjectCoor=<span class="keyword">new</span> <span class="title class_">JSONObject</span>();</span><br><span class="line">                jsonObjectCoor.put(<span class="string">&quot;lng&quot;</span>,c.x);</span><br><span class="line">                jsonObjectCoor.put(<span class="string">&quot;lat&quot;</span>,c.y);</span><br><span class="line">                coors.add(jsonObjectCoor);</span><br><span class="line">            &#125;</span><br><span class="line">            coorList.add(coors);</span><br><span class="line">        &#125;</span><br><span class="line">        jsonObject.put(<span class="string">&quot;coordinates&quot;</span>,coorList);</span><br><span class="line">        <span class="keyword">return</span> jsonObject;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="7-测试"><a href="#7-测试" class="headerlink" title="7 测试"></a>7 测试</h2><p><strong>查询v6_time_pref_pgn_utf_wgs84表</strong></p><p><code>http://localhost:8080/history/geometry?category=prefpgn&amp;start=-5000&amp;end=-221</code></p><img src="https://s3.uuu.ovh/imgs/2022/11/23/6b585626f7c98761.png" style="zoom:50%;"><p><strong>查询v6_time_pref_pts_utf_wgs84表</strong></p><p><code>localhost:8080/history/geometry?category=prefpts&amp;start=-5000&amp;end=-221</code></p><img src="https://s3.uuu.ovh/imgs/2022/11/23/b7449e8d53870f0e.png" style="zoom:50%;"><p><strong>查询v6_time_cnty_pts_utf_wgs84表</strong></p><p><code>localhost:8080/history/geometry?category=cntypts&amp;start=-5000&amp;end=-221</code></p><img src="https://s3.uuu.ovh/imgs/2022/11/23/084dce9f29c121c2.png" style="zoom:50%;">]]></content>
      
      
      <categories>
          
          <category> GIS </category>
          
          <category> Springboot </category>
          
          <category> PostSQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Springboot </tag>
            
            <tag> GIS </tag>
            
            <tag> PostSQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>构建电子地图网站——03 搭建开发平台：MyBatis+TypeHandler+Jts</title>
      <link href="/2022/11/16/%E6%9E%84%E5%BB%BA%E7%94%B5%E5%AD%90%E5%9C%B0%E5%9B%BE%E7%BD%91%E7%AB%99%E2%80%94%E2%80%9403%20%E6%90%AD%E5%BB%BA%E5%BC%80%E5%8F%91%E5%B9%B3%E5%8F%B0%EF%BC%9AMyBatis+TypeHandler+Jts/"/>
      <url>/2022/11/16/%E6%9E%84%E5%BB%BA%E7%94%B5%E5%AD%90%E5%9C%B0%E5%9B%BE%E7%BD%91%E7%AB%99%E2%80%94%E2%80%9403%20%E6%90%AD%E5%BB%BA%E5%BC%80%E5%8F%91%E5%B9%B3%E5%8F%B0%EF%BC%9AMyBatis+TypeHandler+Jts/</url>
      
        <content type="html"><![CDATA[<blockquote><p>上一节已经搭建好了项目结构，连接好了数据库，可以通过url进行简单的增删改查操作。这节主要是针对geometry几何对象的增删改查，这个就需要mybatis自定义类型了！</p></blockquote><p>我们的数据有几何类型：点和面。</p><ul><li>当我们在navicat中运行一条sql：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> geom <span class="keyword">FROM</span> v6_time_cnty_pts_utf_wgs84 LIMIT <span class="number">1</span></span><br></pre></td></tr></table></figure><p>查询的结果geom是<strong>geohash</strong>编码的：<code>0101000020E6100000A165DD3F16C55B4089963C9E96814340</code></p><ul><li>再运行另一条sql：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">sql</span>：<span class="keyword">SELECT</span> st_astext(geom) <span class="keyword">FROM</span> v6_time_cnty_pts_utf_wgs84 LIMIT <span class="number">1</span></span><br></pre></td></tr></table></figure><p>查询结果是<strong>WKT</strong>格式的：</p><p><code>POINT(111.079483 39.012409)</code></p><ul><li><strong>WKT</strong>和<strong>geohash</strong>都是空间数据的存储格式，但是WKT比geohash编码更直观；在mybatis中，直接查geometry对象，返回的是字符类型的geohash，但是交互的时候，我们不能返一串geohash码。对于后端来说，我们应该直接操作geometry类，给前端提供json数组</li></ul><h3 id="1-引入依赖"><a href="#1-引入依赖" class="headerlink" title="1 引入依赖"></a>1 引入依赖</h3><p><strong>Jts</strong>是空间处理jar包，功能很全很强大，这个jar包的maven依赖，我们之前已经在pom中引用了，再加一个解析json的jar包。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--引入alibaba的json处理jar包--&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/com.alibaba/fastjson --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fastjson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.47<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-增加mybatis自定义类"><a href="#2-增加mybatis自定义类" class="headerlink" title="2 增加mybatis自定义类"></a>2 增加mybatis自定义类</h3><p>新建一个<code>mybatis</code>包&#x3D;&#x3D;》新建一个<code>GeometryTypeHandler.java</code>类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@MappedTypes(Geometry.class)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GeometryTypeHandler</span> <span class="keyword">extends</span> <span class="title class_">BaseTypeHandler</span>&lt;Geometry&gt; &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setNonNullParameter</span><span class="params">(PreparedStatement preparedStatement, <span class="type">int</span> i, Geometry geometry, JdbcType jdbcType)</span> <span class="keyword">throws</span> SQLException &#123;</span><br><span class="line">PGobject pGobject=<span class="keyword">new</span> <span class="title class_">PGobject</span>();</span><br><span class="line">pGobject.setValue(geometry.toString());</span><br><span class="line">pGobject.setType(<span class="string">&quot;geometry&quot;</span>);</span><br><span class="line">preparedStatement.setObject(i,pGobject);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> Geometry <span class="title function_">getNullableResult</span><span class="params">(ResultSet resultSet, String columnName)</span> <span class="keyword">throws</span> SQLException &#123;</span><br><span class="line">PGobject pGgeometry= (PGobject) resultSet.getObject(columnName);</span><br><span class="line"><span class="keyword">if</span>(pGgeometry==<span class="literal">null</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">WKBReader wkbReader=<span class="keyword">new</span> <span class="title class_">WKBReader</span>();</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">return</span> wkbReader.read(WKBReader.hexToBytes(pGgeometry.getValue()));</span><br><span class="line">&#125; <span class="keyword">catch</span> (ParseException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line"><span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> Geometry <span class="title function_">getNullableResult</span><span class="params">(ResultSet resultSet, <span class="type">int</span> columnIndex)</span> <span class="keyword">throws</span> SQLException &#123;</span><br><span class="line">PGobject pGgeometry= (PGobject) resultSet.getObject(columnIndex);</span><br><span class="line"><span class="keyword">if</span>(pGgeometry==<span class="literal">null</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">WKBReader wkbReader=<span class="keyword">new</span> <span class="title class_">WKBReader</span>();</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">return</span> wkbReader.read(WKBReader.hexToBytes(pGgeometry.getValue()));</span><br><span class="line">&#125; <span class="keyword">catch</span> (ParseException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line"><span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> Geometry <span class="title function_">getNullableResult</span><span class="params">(CallableStatement callableStatement, <span class="type">int</span> i)</span> <span class="keyword">throws</span> SQLException &#123;</span><br><span class="line">PGobject pGgeometry= (PGobject) callableStatement.getObject(i);</span><br><span class="line"><span class="keyword">if</span>(pGgeometry==<span class="literal">null</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">WKBReader wkbReader=<span class="keyword">new</span> <span class="title class_">WKBReader</span>();</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">return</span> wkbReader.read(WKBReader.hexToBytes(pGgeometry.getValue()));</span><br><span class="line">&#125; <span class="keyword">catch</span> (ParseException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line"><span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-修改model类"><a href="#3-修改model类" class="headerlink" title="3 修改model类"></a>3 修改model类</h3><p>添加一个<code>geometry</code>属性</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Getter</span></span><br><span class="line"><span class="meta">@Setter</span></span><br><span class="line"><span class="meta">@ToString</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PointModel</span> &#123;</span><br><span class="line"><span class="keyword">private</span> Integer gId;</span><br><span class="line"><span class="keyword">private</span> String nameCh;</span><br><span class="line"><span class="keyword">private</span> Geometry geometry;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-修改mapper"><a href="#4-修改mapper" class="headerlink" title="4 修改mapper"></a>4 修改mapper</h3><p>主要是加上<code>typeHandler=&quot;com.history.gismap.mybatis.GeometryTypeHandler&quot;</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mapper</span> <span class="keyword">PUBLIC</span> <span class="string">&quot;-//http://mybatis.org//DTD Mapper 3.0//EN&quot;</span> <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.history.gismap.dao.MapDao&quot;</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;pointModelResult&quot;</span> <span class="attr">type</span>=<span class="string">&quot;com.history.gismap.model.PointModel&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;gId&quot;</span> <span class="attr">column</span>=<span class="string">&quot;gid&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;BIGINT&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;nameCh&quot;</span> <span class="attr">column</span>=<span class="string">&quot;name_ch&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;VARCHAR&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;geometry&quot;</span> <span class="attr">column</span>=<span class="string">&quot;geom&quot;</span> <span class="attr">typeHandler</span>=<span class="string">&quot;com.history.gismap.mybatis.GeometryTypeHandler&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">sql</span> <span class="attr">id</span>=<span class="string">&quot;BASE_TABLE&quot;</span>&gt;</span></span><br><span class="line">v6_time_cnty_pts_utf_wgs84</span><br><span class="line"><span class="tag">&lt;/<span class="name">sql</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">sql</span> <span class="attr">id</span>=<span class="string">&quot;BASE_COLUMN&quot;</span>&gt;</span></span><br><span class="line">gid,name_ch,geom</span><br><span class="line"><span class="tag">&lt;/<span class="name">sql</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getCntyPoint&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;pointModelResult&quot;</span>&gt;</span></span><br><span class="line">SELECT</span><br><span class="line"><span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">&quot;BASE_COLUMN&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">FROM</span><br><span class="line"><span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">&quot;BASE_TABLE&quot;</span>/&gt;</span></span><br><span class="line">WHERE gid=#&#123;gId&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;insertCntyPoint&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;com.history.gismap.model.PointModel&quot;</span>&gt;</span></span><br><span class="line">INSERT INTO</span><br><span class="line"><span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">&quot;BASE_TABLE&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">trim</span> <span class="attr">prefix</span>=<span class="string">&quot;(&quot;</span> <span class="attr">suffix</span>=<span class="string">&quot;)&quot;</span> <span class="attr">suffixOverrides</span>=<span class="string">&quot;,&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;gId != null&quot;</span>&gt;</span></span><br><span class="line">gid,</span><br><span class="line"><span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;nameCh != null&quot;</span>&gt;</span></span><br><span class="line">name_ch,</span><br><span class="line"><span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;geometry != null&quot;</span>&gt;</span></span><br><span class="line">geom,</span><br><span class="line"><span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">trim</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">trim</span> <span class="attr">prefix</span>=<span class="string">&quot;VALUES(&quot;</span> <span class="attr">suffix</span>=<span class="string">&quot;)&quot;</span> <span class="attr">suffixOverrides</span>=<span class="string">&quot;,&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;gId != null&quot;</span>&gt;</span></span><br><span class="line">#&#123;gId, jdbcType=BIGINT&#125;,</span><br><span class="line"><span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;nameCh != null&quot;</span>&gt;</span></span><br><span class="line">#&#123;nameCh, jdbcType=VARCHAR&#125;,</span><br><span class="line"><span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;geometry != null&quot;</span>&gt;</span></span><br><span class="line">#&#123;geometry,typeHandler=com.history.gismap.mybatis.GeometryTypeHandler&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">trim</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">&quot;updateCntyPoint&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;com.history.gismap.model.PointModel&quot;</span>&gt;</span></span><br><span class="line">UPDATE</span><br><span class="line"><span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">&quot;BASE_TABLE&quot;</span>/&gt;</span></span><br><span class="line">SET</span><br><span class="line">name_ch=#&#123;nameCh&#125;,</span><br><span class="line">geom=#&#123;geometry,typeHandler=com.history.gismap.mybatis.GeometryTypeHandler&#125;</span><br><span class="line">WHERE</span><br><span class="line">gid=#&#123;gId&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">&quot;deleteCntyPoint&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;com.history.gismap.model.PointModel&quot;</span>&gt;</span></span><br><span class="line">DELETE FROM</span><br><span class="line"><span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">&quot;BASE_TABLE&quot;</span>/&gt;</span></span><br><span class="line">WHERE</span><br><span class="line">gid=#&#123;gId&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="5-修改controller"><a href="#5-修改controller" class="headerlink" title="5 修改controller"></a>5 修改controller</h3><p>为了便于前端读写，我们要把<strong>geometry</strong>对象转化成<strong>geojson</strong>。这个改动比较大，查询返回结果、增加入参、修改入参都改成了json格式，<strong>WKTReader</strong>用来读取WKT文本，mybatis自定义引擎中引入的WKBReader是用来读geohash文本的</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping(value = &quot;/history&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MapController</span> &#123;</span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> MapService mapService;</span><br><span class="line">    </span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="meta">@GetMapping(&quot;/pointmodel&quot;)</span></span><br><span class="line"><span class="keyword">public</span> JSONObject <span class="title function_">getPoint</span><span class="params">(<span class="meta">@RequestParam(&quot;gid&quot;)</span> Integer gId)</span>&#123;</span><br><span class="line">PointModel pointModel=mapService.getCntyPointByGid(gId).get(<span class="number">0</span>);</span><br><span class="line">JSONObject jsonObject=<span class="keyword">new</span> <span class="title class_">JSONObject</span>();</span><br><span class="line">jsonObject.put(<span class="string">&quot;gid&quot;</span>,pointModel.getGId());</span><br><span class="line">jsonObject.put(<span class="string">&quot;namech&quot;</span>,pointModel.getNameCh());</span><br><span class="line">JSONObject geometry=<span class="keyword">new</span> <span class="title class_">JSONObject</span>();</span><br><span class="line">geometry.put(<span class="string">&quot;type&quot;</span>,pointModel.getGeometry().getGeometryType());</span><br><span class="line">JSONArray coordinateArray=<span class="keyword">new</span> <span class="title class_">JSONArray</span>();</span><br><span class="line">Coordinate[] coordinates=pointModel.getGeometry().getCoordinates();</span><br><span class="line">JSONObject coor=<span class="keyword">new</span> <span class="title class_">JSONObject</span>();</span><br><span class="line">coor.put(<span class="string">&quot;longitude&quot;</span>,coordinates[<span class="number">0</span>].x);</span><br><span class="line">coor.put(<span class="string">&quot;latitude&quot;</span>,coordinates[<span class="number">0</span>].y);</span><br><span class="line">coordinateArray.add(coor);</span><br><span class="line">geometry.put(<span class="string">&quot;coordinate&quot;</span>,coordinateArray);</span><br><span class="line">jsonObject.put(<span class="string">&quot;geometry&quot;</span>,geometry);</span><br><span class="line"><span class="keyword">return</span> jsonObject;</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="meta">@PostMapping(&quot;/add&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">addPoint</span><span class="params">(<span class="meta">@RequestBody</span> JSONObject request)</span>&#123;</span><br><span class="line">PointModel pointModel=<span class="keyword">new</span> <span class="title class_">PointModel</span>();</span><br><span class="line">pointModel.setGId((Integer) JSONPath.eval(request,<span class="string">&quot;$.gId&quot;</span>));</span><br><span class="line">pointModel.setNameCh((String) JSONPath.eval(request,<span class="string">&quot;$.nameCh&quot;</span>));</span><br><span class="line">String pointStr= (String) JSONPath.eval(request,<span class="string">&quot;$.point&quot;</span>);</span><br><span class="line"><span class="type">GeometryFactory</span> <span class="variable">geometryFactory</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">GeometryFactory</span>();</span><br><span class="line"><span class="type">WKTReader</span> <span class="variable">reader</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">WKTReader</span>( geometryFactory );</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="type">Geometry</span> <span class="variable">point</span> <span class="operator">=</span> (Point) reader.read(pointStr);</span><br><span class="line">pointModel.setGeometry(point);</span><br><span class="line">&#125; <span class="keyword">catch</span> (ParseException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> mapService.addCntyPoint(pointModel);</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="meta">@PostMapping(&quot;/modify&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">update</span><span class="params">(<span class="meta">@RequestBody</span> JSONObject request)</span>&#123;</span><br><span class="line">PointModel pointModel=<span class="keyword">new</span> <span class="title class_">PointModel</span>();</span><br><span class="line">pointModel.setGId((Integer) JSONPath.eval(request,<span class="string">&quot;$.gId&quot;</span>));</span><br><span class="line">pointModel.setNameCh((String) JSONPath.eval(request,<span class="string">&quot;$.nameCh&quot;</span>));</span><br><span class="line">String pointStr= (String) JSONPath.eval(request,<span class="string">&quot;$.point&quot;</span>);</span><br><span class="line"><span class="type">GeometryFactory</span> <span class="variable">geometryFactory</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">GeometryFactory</span>();</span><br><span class="line"><span class="type">WKTReader</span> <span class="variable">reader</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">WKTReader</span>( geometryFactory );</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="type">Geometry</span> <span class="variable">point</span> <span class="operator">=</span> (Point) reader.read(pointStr);</span><br><span class="line">pointModel.setGeometry(point);</span><br><span class="line">&#125; <span class="keyword">catch</span> (ParseException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> mapService.modifyCntyPoint(pointModel);</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="meta">@GetMapping(&quot;/remove&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">removetPoint</span><span class="params">(<span class="meta">@RequestParam(&quot;gid&quot;)</span> Integer gId)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> mapService.removeCntyPoint(gId);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>dao层、service层都没有需要修改的地方</strong></p><h3 id="6-测试"><a href="#6-测试" class="headerlink" title="6 测试"></a>6 测试</h3><p>使用postman和postwoman都可以</p><ul><li><p>查询</p><p>GET请求：<code>http://localhost:8080/history/pointmodel?gid=1</code></p><img src="https://s3.uuu.ovh/imgs/2022/11/22/a48beb5530c61c4a.png" style="zoom:50%;"></li><li><p>增加</p><p>POST请求：<code>http://localhost:8080/history/add</code></p><img src="https://s3.uuu.ovh/imgs/2022/11/22/756a23d84d0aa8dc.png" style="zoom:50%;"></li><li><p>修改</p><p>POST请求：<code>http://localhost:8080/history/modify</code></p><img src="https://s3.uuu.ovh/imgs/2022/11/22/4faacc6f27519ee3.png" style="zoom:50%;"></li><li><p>删除</p><p>POST请求：<code>http://localhost:8080/history/remove?gid=14357</code></p></li></ul><h3 id="7-不太懂的代码Tips"><a href="#7-不太懂的代码Tips" class="headerlink" title="7 不太懂的代码Tips"></a>7 不太懂的代码Tips</h3><ul><li><p>mybatis包下的<strong>GeometryTypeHandler</strong>类的作用：</p><p>对于一般的数据类型（如string等），我们不用关注定义的数据是如何映射到MySQL中的char类型的，因为mybatis已经为我们做好了这件事；But，<strong>mybatis没有做空间几何数据（点线面）的映射处理</strong>，所以我们需要自定义一个类型处理器<strong>TypeHandler</strong>来做这一层映射，实现特殊对象与sql字段的映射关系！</p></li><li><p><strong>WKT</strong>，是一种文本标记语言，用于表示<strong>矢量几何对象（</strong>点、线、多边形、TIN&lt;不规则三角网&gt;、多面体）、<strong>空间参照系统及空间参照系统之间的转换</strong>；可以通过几何集合的方式来表示不同维度的几何对象，几何物体的坐标可以是<strong>2D(x,y),3D(x,y,z),4D(x,y,z,m)</strong>,加上一个属于线性参照系统的m值。</p></li></ul><h2 id="报错"><a href="#报错" class="headerlink" title="报错"></a>报错</h2><h3 id="报错1"><a href="#报错1" class="headerlink" title="报错1"></a>报错1</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Content type &#x27;application/x-www-form-urlencoded;charset=UTF-8&#x27; not supported</span><br></pre></td></tr></table></figure><p>先是在<strong>postwoman</strong>中直接POST请求<code>http://localhost:8080/history/add</code>和请求<code>http://localhost:8080/history/add?gid=14357&amp;nameCh=test&amp;point(109.221,80.287)</code>都报如上的错误！一直就以为是json数据传输和接收有问题，也没找到解决办法。</p><p>想着有可能也会是这个postwoman平台的问题，接着下载了postman软件，当输入上述同样的请求后，报了如下的错误：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Required request body is missing: public int com.cc.controller.MapController.addPoint(com.alibaba.fastjson.JSONObject)]</span><br></pre></td></tr></table></figure><p>即请求的主题内容不存在，这个接口的请求方式是post，是需要从前端<strong>提交</strong>到后端的，<strong>请求的body应该以json的形式写到raw里面</strong></p><img src="https://s3.uuu.ovh/imgs/2022/11/22/4faacc6f27519ee3.png" style="zoom:50%;"><p>在postwoman中也可以提交，之前一直想的是就在url中提交应该就可以了，以前也是在url中提交的，but，你的代码里面并没有把id&#x2F;nameCh这些东西写到你提交的url之中</p><img src="https://s3.uuu.ovh/imgs/2022/11/22/20c21adc4abea5cb.png" style="zoom:50%;"><p>【这个问题困扰了我大概三四天了，最后发现问题出在哪儿的时候，真的想骂自己一句<strong>蠢笨如猪</strong>！！！归根结底还是自己还有很多专业基础知识缺乏，还是菜鸡！！！编程还是没入门吧~】</p><p>参考链接：<a href="https://blog.csdn.net/IBLiplus/article/details/86491530">Required request body is missing 错误解决_IBLiplus的博客-CSDN博客</a></p><h3 id="报错2"><a href="#报错2" class="headerlink" title="报错2"></a>报错2</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">template might not exist or might not be accessible by any of the configured Template Resolvers\r\n\</span><br></pre></td></tr></table></figure><p>在Controller中缺少<code>@ResponseBody</code>注解</p><p>参考链接：<a href="https://blog.csdn.net/mapboo/article/details/105547448">(38条消息) 错误：template might not exist or might not be accessible by any of the configured Template Resolvers_群鸿的博客-CSDN博客</a></p>]]></content>
      
      
      <categories>
          
          <category> GIS </category>
          
          <category> Springboot </category>
          
          <category> PostSQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Springboot </tag>
            
            <tag> GIS </tag>
            
            <tag> PostSQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>构建电子地图网站——02 搭建开发平台：SpringBoot+MyBatis+PostgreSQL</title>
      <link href="/2022/11/15/%E6%9E%84%E5%BB%BA%E7%94%B5%E5%AD%90%E5%9C%B0%E5%9B%BE%E7%BD%91%E7%AB%99%E2%80%94%E2%80%9402%20%E6%90%AD%E5%BB%BA%E5%BC%80%E5%8F%91%E5%B9%B3%E5%8F%B0%EF%BC%9ASpringBoot+MyBatis+PostgreSQL/"/>
      <url>/2022/11/15/%E6%9E%84%E5%BB%BA%E7%94%B5%E5%AD%90%E5%9C%B0%E5%9B%BE%E7%BD%91%E7%AB%99%E2%80%94%E2%80%9402%20%E6%90%AD%E5%BB%BA%E5%BC%80%E5%8F%91%E5%B9%B3%E5%8F%B0%EF%BC%9ASpringBoot+MyBatis+PostgreSQL/</url>
      
        <content type="html"><![CDATA[<h2 id="1-完成工程搭建及项目结构"><a href="#1-完成工程搭建及项目结构" class="headerlink" title="1 完成工程搭建及项目结构"></a>1 完成工程搭建及项目结构</h2><ul><li><p>需要添加的依赖：</p><ul><li>Spring Boot DevTools：热部署，修改内容，工程自动重启</li></ul></li><li><p>Lombok：打日志、注解工具，调试代码用</p><ul><li>Spring Configuration Processor：引入配置的工具</li></ul></li><li><p>Spring Web Starter：web工程启动工具</p><ul><li>Thymeleaf：整合前端用的</li></ul></li><li><p>JDBC API：连数据库的引擎</p><ul><li>Mybatis Framwork：Mybatis框架</li></ul></li><li><p>PostgreSQL Driver：pg库引擎</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--jdbc--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--thymeleaf--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-thymeleaf<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--web--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--mybatis--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--devtools--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--postgresql--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.postgresql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>postgresql<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>42.2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--&lt;scope&gt;runtime&lt;/scope&gt;--&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--configuration--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-configuration-processor<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--lombok--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.18.8<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span>  </span><br></pre></td></tr></table></figure></li><li><p>新增的一些依赖：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.commons<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-lang3<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--解析json的--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-databind<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.datatype<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-datatype-joda<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.module<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-module-parameter-names<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 分页插件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.pagehelper<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>pagehelper-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- alibaba的druid数据库连接池 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.9<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 解析几何geometry对象用的--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.vividsolutions<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jts<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.13<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>完善工程结构</p><p>java.com.cc：</p><ul><li>controller<ul><li>MapController</li></ul></li><li>dao<ul><li>MapDao</li></ul></li><li>model<ul><li>PointModel</li></ul></li><li>service<ul><li>impl<ul><li>MapServiceImpl</li></ul></li><li>MapService</li></ul></li></ul><p>resource：</p><ul><li><strong>mapper</strong><ul><li><strong>MapwebMapper.xml</strong></li></ul></li><li><strong>application.yml</strong></li></ul></li><li><p>package（包）的命名都需要小写；接口和类的命名要符号驼峰规则</p></li><li><p>点击小齿轮，取消勾选Compack Middle Packages，勾选上的话，会把空的package给折叠了</p><img src="https://pic1.zhimg.com/80/v2-ed6d15ee3234be9671aabe8eb494a720_1440w.webp" alt="img" style="zoom:50%;"></li></ul><h2 id="2-连接数据库"><a href="#2-连接数据库" class="headerlink" title="2 连接数据库"></a>2 连接数据库</h2><ul><li><p>application.yml</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8080</span></span><br><span class="line"></span><br><span class="line"> <span class="comment"># 数据库配置</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">main:</span></span><br><span class="line">    <span class="attr">allow-circular-references:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">initialize:</span> <span class="string">flase</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:postgresql://localhost:5432/postgres</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">postgres</span></span><br><span class="line">    <span class="attr">password:</span> <span class="number">123456</span></span><br><span class="line">    <span class="comment"># alibaba数据连接池</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">com.alibaba.druid.pool.DruidDataSource</span></span><br><span class="line">    <span class="comment"># postgresql驱动</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">org.postgresql.Driver</span></span><br><span class="line">    <span class="attr">druid:</span></span><br><span class="line">      <span class="comment"># 初始化连接大小</span></span><br><span class="line">      <span class="attr">initial-size:</span> <span class="number">8</span></span><br><span class="line">      <span class="comment"># 最小空闲连接数</span></span><br><span class="line">      <span class="attr">min-idle:</span> <span class="number">5</span></span><br><span class="line">      <span class="comment"># 最大连接数</span></span><br><span class="line">      <span class="attr">max-active:</span> <span class="number">10</span></span><br><span class="line">      <span class="comment"># 查询超时时间</span></span><br><span class="line">      <span class="attr">query-timeout:</span> <span class="number">6000</span></span><br><span class="line">      <span class="comment"># 事务查询超时时间</span></span><br><span class="line">      <span class="attr">transaction-query-timeout:</span> <span class="number">6000</span></span><br><span class="line">      <span class="comment"># 关闭空闲连接超时时间</span></span><br><span class="line">      <span class="attr">remove-abandoned-timeout:</span> <span class="number">1800</span></span><br><span class="line">      <span class="attr">filter:</span> <span class="string">stat,config</span></span><br><span class="line"></span><br><span class="line"><span class="attr">mybatis:</span></span><br><span class="line">  <span class="comment"># sql映射文件</span></span><br><span class="line">  <span class="attr">mapper-locations:</span> <span class="string">classpath:mapper/*.xml</span></span><br><span class="line">  <span class="comment"># 定义别名包</span></span><br><span class="line">  <span class="attr">type-aliases-package:</span> <span class="string">com.cc.model</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><h2 id="3-增删改查"><a href="#3-增删改查" class="headerlink" title="3 增删改查"></a>3 增删改查</h2><h3 id="3-1-DAO-Mapper-层"><a href="#3-1-DAO-Mapper-层" class="headerlink" title="3.1 DAO(Mapper)层"></a>3.1 DAO(Mapper)层</h3><ul><li><p>MapDao</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">MapDao</span> &#123;</span><br><span class="line">List&lt;PointModel&gt; <span class="title function_">getCntyPoint</span><span class="params">(<span class="meta">@Param(&quot;gId&quot;)</span> Integer gId)</span>;</span><br><span class="line"><span class="type">int</span> <span class="title function_">insertCntyPoint</span><span class="params">(PointModel pointModel)</span>;</span><br><span class="line"><span class="type">int</span> <span class="title function_">updateCntyPoint</span><span class="params">(PointModel pointModel)</span>;</span><br><span class="line"><span class="type">int</span> <span class="title function_">deleteCntyPoint</span><span class="params">(<span class="meta">@Param(&quot;gId&quot;)</span> Integer gId)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="3-2-Mapper配置"><a href="#3-2-Mapper配置" class="headerlink" title="3.2 Mapper配置"></a>3.2 Mapper配置</h3><ul><li><p>MapwebMapper.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mapper</span> <span class="keyword">PUBLIC</span> <span class="string">&quot;-//http://mybatis.org//DTD Mapper 3.0//EN&quot;</span> <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.cc.dao.MapDao&quot;</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;pointModelResult&quot;</span> <span class="attr">type</span>=<span class="string">&quot;com.cc.model.PointModel&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;gId&quot;</span> <span class="attr">column</span>=<span class="string">&quot;gid&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;BIGINT&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;nameCh&quot;</span> <span class="attr">column</span>=<span class="string">&quot;name_ch&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;VARCHAR&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">sql</span> <span class="attr">id</span>=<span class="string">&quot;BASE_TABLE&quot;</span>&gt;</span></span><br><span class="line">        v6_time_cnty_pts_utf_wgs84</span><br><span class="line">    <span class="tag">&lt;/<span class="name">sql</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">sql</span> <span class="attr">id</span>=<span class="string">&quot;BASE_COLUMN&quot;</span>&gt;</span></span><br><span class="line">        gid,name_ch</span><br><span class="line">    <span class="tag">&lt;/<span class="name">sql</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--查询--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getCntyPoint&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;pointModelResult&quot;</span>&gt;</span></span><br><span class="line">        SELECT</span><br><span class="line">        <span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">&quot;BASE_COLUMN&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">        FROM</span><br><span class="line">        <span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">&quot;BASE_TABLE&quot;</span>/&gt;</span></span><br><span class="line">        WHERE gid=#&#123;gId&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--插入--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;insertCntyPoint&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;com.cc.model.PointModel&quot;</span>&gt;</span></span><br><span class="line">        INSERT INTO</span><br><span class="line">        <span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">&quot;BASE_TABLE&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">trim</span> <span class="attr">prefix</span>=<span class="string">&quot;(&quot;</span> <span class="attr">suffix</span>=<span class="string">&quot;)&quot;</span> <span class="attr">suffixOverrides</span>=<span class="string">&quot;,&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;gId != null&quot;</span>&gt;</span></span><br><span class="line">                gid,</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;nameCh != null&quot;</span>&gt;</span></span><br><span class="line">                name_ch,</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">trim</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">trim</span> <span class="attr">prefix</span>=<span class="string">&quot;VALUES(&quot;</span> <span class="attr">suffix</span>=<span class="string">&quot;)&quot;</span> <span class="attr">suffixOverrides</span>=<span class="string">&quot;,&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;gId != null&quot;</span>&gt;</span></span><br><span class="line">                #&#123;gId, jdbcType=BIGINT&#125;,</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;nameCh != null&quot;</span>&gt;</span></span><br><span class="line">                #&#123;nameCh, jdbcType=VARCHAR&#125;,</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">trim</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--更新--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">&quot;updateCntyPoint&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;com.cc.model.PointModel&quot;</span>&gt;</span></span><br><span class="line">        UPDATE</span><br><span class="line">        <span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">&quot;BASE_TABLE&quot;</span>/&gt;</span></span><br><span class="line">        SET</span><br><span class="line">        name_ch=#&#123;nameCh&#125;</span><br><span class="line">        WHERE</span><br><span class="line">        gid=#&#123;gId&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--删除--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">&quot;deleteCntyPoint&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;com.cc.model.PointModel&quot;</span>&gt;</span></span><br><span class="line">        DELETE FROM</span><br><span class="line">        <span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">&quot;BASE_TABLE&quot;</span>/&gt;</span></span><br><span class="line">        WHERE</span><br><span class="line">        gid=#&#123;gId&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>application.yml</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">mybatis:</span></span><br><span class="line">  <span class="comment"># sql映射文件</span></span><br><span class="line">  <span class="attr">mapper-locations:</span> <span class="string">classpath:mapper/*.xml</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="3-3-Service层"><a href="#3-3-Service层" class="headerlink" title="3.3 Service层"></a>3.3 Service层</h3><ul><li><p>接口——MapService </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">MapService</span> &#123;</span><br><span class="line">List&lt;PointModel&gt; <span class="title function_">getCntyPointByGid</span><span class="params">(Integer gId)</span>;</span><br><span class="line"><span class="type">int</span> <span class="title function_">addCntyPoint</span><span class="params">(PointModel pointModel)</span>;</span><br><span class="line"><span class="type">int</span> <span class="title function_">modifyCntyPoint</span><span class="params">(PointModel pointModel)</span>;</span><br><span class="line"><span class="type">int</span> <span class="title function_">removeCntyPoint</span><span class="params">(Integer gId)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>实现类——MapServiceImpl </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MapServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">MapService</span> &#123;</span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> MapDao mapDao;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> List&lt;PointModel&gt; <span class="title function_">getCntyPointByGid</span><span class="params">(Integer gId)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> mapDao.getCntyPoint(gId);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">addCntyPoint</span><span class="params">(PointModel pointModel)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> mapDao.insertCntyPoint(pointModel);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">modifyCntyPoint</span><span class="params">(PointModel pointModel)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> mapDao.updateCntyPoint(pointModel);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">removeCntyPoint</span><span class="params">(Integer gId)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> mapDao.deleteCntyPoint(gId);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="3-4-Controller层"><a href="#3-4-Controller层" class="headerlink" title="3.4 Controller层"></a>3.4 Controller层</h3><ul><li><p>MapController </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping(value = &quot;/history&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MapController</span> &#123;</span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> MapService mapService;</span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="meta">@GetMapping(&quot;/pointmodel&quot;)</span></span><br><span class="line"><span class="keyword">public</span> PointModel <span class="title function_">getPoint</span><span class="params">(<span class="meta">@RequestParam(&quot;gid&quot;)</span> Integer gId)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> mapService.getCntyPointByGid(gId).get(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="meta">@PostMapping(&quot;/add&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">addPoint</span><span class="params">(PointModel pointModel)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> mapService.addCntyPoint(pointModel);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="meta">@PostMapping(&quot;/modify&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">update</span><span class="params">(PointModel pointModel)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> mapService.modifyCntyPoint(pointModel);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="meta">@GetMapping(&quot;/remove&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">removetPoint</span><span class="params">(<span class="meta">@RequestParam(&quot;gid&quot;)</span> Integer gId)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> mapService.removeCntyPoint(gId);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="3-5-测试"><a href="#3-5-测试" class="headerlink" title="3.5 测试"></a>3.5 测试</h3><p>可以用工具测试，也可以用浏览器直接访问，测试工具Postman用得较多，但是现在好像不能直接在浏览器中使用，但有一个<strong>Postwoman</strong> 扩展也差不多！</p><ul><li><p>查（直接访问）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:8080/history/pointmodel?gid=1</span><br></pre></td></tr></table></figure></li><li><p>增（<strong>POST</strong>请求）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:8080/history/add?gid=14354&amp;nameCh=test</span><br></pre></td></tr></table></figure></li><li><p>改（<strong>POST</strong>请求）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:8080/history/modify?gid=14354&amp;nameCh=test01</span><br></pre></td></tr></table></figure></li><li><p>删（<strong>GET</strong>请求）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:8080/history/remove?gid=1435</span><br></pre></td></tr></table></figure></li></ul><h3 id="3-6-上传代码至GitHub"><a href="#3-6-上传代码至GitHub" class="headerlink" title="3.6 上传代码至GitHub"></a>3.6 上传代码至GitHub</h3><p>最简便的方法就是，可以直接通过IDEA上传代码至GitHub仓库。<strong>“VCS”&#x3D;&#x3D;&gt;”Share Project on GitHub”</strong></p><h2 id="4-报错"><a href="#4-报错" class="headerlink" title="4 报错"></a>4 报错</h2><h3 id="报错1："><a href="#报错1：" class="headerlink" title="报错1："></a>报错1：</h3><ul><li><p>循环依赖问题：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Relying upon circular references is discouraged and they are prohibited by default. Update your application to remove the dependency cycle between beans. As a last resort, it may be possible to break the cycle automatically by setting spring.main.allow-circular-references to true.</span><br></pre></td></tr></table></figure></li><li><p>解决办法：在yml配置文件中新增以下语句</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">main:</span></span><br><span class="line">    <span class="attr">allow-circular-references:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></li></ul><p>参考链接：<a href="https://blog.csdn.net/weixin_57109001/article/details/125134453">解决循环依赖BUG。Relying upon circular references is discouraged and they are prohibited by default._去海边整点浪漫的博客-CSDN博客</a></p><h3 id="报错2："><a href="#报错2：" class="headerlink" title="报错2："></a>报错2：</h3><ul><li><p><strong>Invalid bound statement</strong>——<strong>无效绑定</strong>，是mybatis中常见的一个异常。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Invalid bound statement (not found): com.cc.dao.MapDao.getCntyPoint] with root cause</span><br></pre></td></tr></table></figure></li><li><p>问题实质：mapper接口（dao层）和xml没有绑定成功，也叫做与xml文件没有映射！</p></li><li><p>解决办法：在yml配置文件中，发现映射xml的路径打错了，多打了一个s</p><img src="https://s3.bmp.ovh/imgs/2022/11/16/27d8c1b82cb48208.png" style="zoom:50%;"></li><li><p>一些Tips：</p><ul><li><p>接口与xml的绑定原理：mapper接口并没有实现类，所以框架会通过JDK动态代理模式获取接口的代理实现类，进而根据接口全限定类名+id去一一绑定xml中的sql</p></li><li><p>mapper文件要和.xml的目录结构一样</p></li><li><p>可以通过target目录查看mapper是否成功加载</p></li></ul><img src="https://s3.bmp.ovh/imgs/2022/11/16/e0bb89e7caa036c4.png" style="zoom: 50%;"></li></ul><p>参考链接：<a href="https://blog.csdn.net/hexz0407/article/details/122270218">mybatis常见异常：Invalid bound statement (not found): com.ruoyi.news.mapper.RuoyiNewsMapper.selectRuoyiNe_hexz0407的博客-CSDN博客</a></p><p><a href="https://blog.csdn.net/weixin_42204641/article/details/81155726">三步教你解决Invalid bound statement (not found): com.xxx.dao.xxxDao.selectByxx错误!!!!很简单_倩女有文的博客-CSDN博客</a></p>]]></content>
      
      
      <categories>
          
          <category> GIS </category>
          
          <category> Springboot </category>
          
          <category> PostSQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Springboot </tag>
            
            <tag> GIS </tag>
            
            <tag> PostSQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>构建电子地图网站——01 软件安装及数据处理</title>
      <link href="/2022/11/09/%E6%9E%84%E5%BB%BA%E7%94%B5%E5%AD%90%E5%9C%B0%E5%9B%BE%E7%BD%91%E7%AB%99%E2%80%94%E2%80%9401%20%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85%E5%8F%8A%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/"/>
      <url>/2022/11/09/%E6%9E%84%E5%BB%BA%E7%94%B5%E5%AD%90%E5%9C%B0%E5%9B%BE%E7%BD%91%E7%AB%99%E2%80%94%E2%80%9401%20%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85%E5%8F%8A%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/</url>
      
        <content type="html"><![CDATA[<blockquote><p>最近在搜索关于GIS的项目时，在知乎看到了一个构建电子地图网站的教程，里面运用到的QGIS、python语言是之前未接触到的，觉得比较新颖，接下来准备用几天的时间按照教程来实现网站功能，希望能有所收获，这也算是一次小小的实践经验！</p><p>参考链接：<a href="https://zhuanlan.zhihu.com/p/145423630">从零开始，构建电子地图网站—-索引目录 - 知乎 (zhihu.com)</a></p></blockquote><h2 id="1-需要用到的软件"><a href="#1-需要用到的软件" class="headerlink" title="1. 需要用到的软件"></a>1. 需要用到的软件</h2><blockquote><p>后端开发软件：IntelliJ IDEA，语言JAVA。</p><p>数据处理软件：pyCharm，语言python。（试试用vscode替代）</p><p>前端开发软件：sublime，语言JavaScript。（试试用vscode替代）</p><p>数据库：PostgreSQL+PostGIS，语言SQL。</p><p>数据查看软件：QGIS。</p><p>浏览器：谷歌chrome</p></blockquote><p>新安装了QGIS、PostgreSQL、PostGIS、Navicat Premium</p><h3 id="1-1-安装QGIS（易）"><a href="#1-1-安装QGIS（易）" class="headerlink" title="1.1 安装QGIS（易）"></a>1.1 安装QGIS（易）</h3><p>这个软件开源且安装简单，相比ArcGIS的各种破解，这个软件是真滴良心！直接从官网下载好电脑对应的版本，之后就是傻瓜的“下一步”式安装了！安装好了之后在“XYZ Tiles”下可以添加在线地图，百度搜索“瓦片地图”对应地图的url添加进去就ok 了！</p><h3 id="1-2-安装PostgreSQL-PostGIS-Navicat-Premium"><a href="#1-2-安装PostgreSQL-PostGIS-Navicat-Premium" class="headerlink" title="1.2 安装PostgreSQL+PostGIS+Navicat Premium"></a>1.2 安装PostgreSQL+PostGIS+Navicat Premium</h3><blockquote><p><strong>特别注意：PostGIS的安装必须在PostgreSQL安装好之后再进行安装！！！两个的版本要对应，推荐安装稍微低一点的版本，高版本易出错，推荐PostgreSQL12+postgis3.0.x+Navicat Premium16</strong></p><p><strong>Navicat Premium的版本和</strong></p></blockquote><ul><li><p>安装PostgreSQL（较易）</p><ul><li><p>下载电脑对应版本的软件</p><blockquote><p> 注：PostGIS的版本要与PostgreSQL版本一致，所以，<strong>不推荐下载高版本的</strong>。最开始我下载的PostgreSQL15，安装了对应的PostgreSQL版本之后，PostgreSQL中是有根据PostGIS新建的数据库，但是PostgreGIS一直打不开，报错：找不到xxxxx.dll文件</p><p><strong>推荐下载PostgreSQL12</strong></p></blockquote></li><li><p>安装过程要设置密码和端口号，端口号默认就行</p></li></ul></li><li><p>安装PostgreGIS（较易）</p><ul><li><p>下载与PostgreSQL对应的版本</p><p>可以去官网或者一些网站下载，也可以直接在PostgreSQL安装路径下的“<strong>Application Stack Builder</strong>”中下载（更推荐后者的下载方式，可以直接选择下载对应的版本，但是这根据网上的说法好像要网不卡）</p></li><li><p>安装路径要和PostgreSQL的安装路径一样</p></li><li><p>输入在PostgreSQL安装时设置的username和password，还有端口号</p></li><li><p>弹出来的弹窗都选择“是”，这是自动设置了环境变量</p></li></ul></li><li><p>安装Navicat Premium（要破解）</p><blockquote><p>参考链接：<a href="https://zhuanlan.zhihu.com/p/492364793">Navicat 16 最新版Windows安装与永久激活教程 - 知乎 (zhihu.com)</a></p></blockquote><p>Navicat的版本可以下载高版本的，当版本较低，而PostSQL版本较高时会连接报错！Navicat的版本应比PostSQL的版本高！</p></li></ul><h3 id="1-3-安装PyCharm"><a href="#1-3-安装PyCharm" class="headerlink" title="1.3 安装PyCharm"></a>1.3 安装PyCharm</h3><p>  我是直接通过联想的电脑管家直接进行傻瓜式安装</p><h2 id="2-数据处理——PostGIS"><a href="#2-数据处理——PostGIS" class="headerlink" title="2 数据处理——PostGIS"></a>2 数据处理——PostGIS</h2><h3 id="2-1-数据来源"><a href="#2-1-数据来源" class="headerlink" title="2.1 数据来源"></a>2.1 数据来源</h3><p>China Historical GIS（<a href="https://chgis.fairbank.fas.harvard.edu/">CHGIS (harvard.edu)</a>）</p><p>  里面的数据包含基于wgs84的utf和gbk两种不同的编码，包含：历史行政区划点，到县一级；历史行政区划点，到州一级；历史政区面</p><h3 id="2-2-数据入库"><a href="#2-2-数据入库" class="headerlink" title="2.2 数据入库"></a>2.2 数据入库</h3><ul><li><p>navicat连接pg库</p></li><li><p>空间扩展</p><ul><li><p>navicat打开数据库postgres，这就是初始化的数据库</p></li><li><p>新建查询，执行<code>CREATE EXTENSION postgis</code>，为数据库添加空间扩展，会发现数据库中多了一表<code>spatial_ref_sys</code></p></li></ul></li></ul><h3 id="2-3-PostGIS工具上传shp"><a href="#2-3-PostGIS工具上传shp" class="headerlink" title="2.3 PostGIS工具上传shp"></a>2.3 PostGIS工具上传shp</h3><p>把utf8编码格式、wgs84坐标系的文件上传数据库，因为数据库一般都是utf-8编码的</p><ul><li>打开<strong>PostGIS Shapefile Import&#x2F;Export Manager</strong></li><li><strong>View connection details</strong>连接PostSQL</li><li><strong>Add File</strong>上传shp文件再<strong>Import</strong>一下</li></ul><h2 id="3-查看数据"><a href="#3-查看数据" class="headerlink" title="3 查看数据"></a>3 查看数据</h2><h3 id="3-1-QGIS查看pg库中的数据"><a href="#3-1-QGIS查看pg库中的数据" class="headerlink" title="3.1 QGIS查看pg库中的数据"></a>3.1 QGIS查看pg库中的数据</h3><ul><li><p>QGIS添加一个地图瓦片</p><p>Browser——XYZ Tiles——右键——New Connection，打开 XYZ Connection——把url粘贴进去</p></li><li><p>QGIS连接PostSQL并把shp数据加载进去</p><p>打开Data Source Manger，选择Vector，选择Database，下拉选择PostgreSQL，选择new，输入Connection Information，输入User name和Password，勾选store，Test Connection，显示连接成功，ok，ok，add</p></li></ul><h3 id="3-2-用Sql语法查看"><a href="#3-2-用Sql语法查看" class="headerlink" title="3.2 用Sql语法查看"></a>3.2 用Sql语法查看</h3><ul><li><p>打开Navicat</p></li><li><p>新建查询</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> st_astext(geom) <span class="keyword">FROM</span> v6_time_cnty_pts_utf_wgs84 LIMIT <span class="number">1</span>;</span><br><span class="line"><span class="keyword">SELECT</span> st_astext(geom) <span class="keyword">FROM</span> v6_time_pref_pgn_utf_wgs84 LIMIT <span class="number">1</span>;</span><br><span class="line"><span class="keyword">SELECT</span> st_astext(geom) <span class="keyword">FROM</span> v6_time_pref_pts_utf_wgs84 LIMIT <span class="number">1</span></span><br></pre></td></tr></table></figure><p>查询结果一：POINT(111.079483 39.012409)</p><p>查询结果二：MULTIPOLYGON(((113.549411712145 36.7545434898289,113.543285553768 36.7521524539279,113.560044728209 36.7134634435762,113.55651873219 36.7287158304727,113.552914744172 36.7456842597138,113.549411712145 36.7545434898289)))</p><p>查询结果三：POINT(111.076347 39.017826)</p></li></ul><h2 id="4-数据处理——Python"><a href="#4-数据处理——Python" class="headerlink" title="4 数据处理——Python"></a>4 数据处理——Python</h2><blockquote><p>用PostGIS可以很简单的就上传shp文件，但是由于导入shp文件没有字段备注和表说明，且如果字段名过长，还会截短字段名。所以为了规范化，用py脚本把数据读入PostgreSQL数据库中。</p></blockquote><h3 id="4-1-环境搭建"><a href="#4-1-环境搭建" class="headerlink" title="4.1 环境搭建"></a>4.1 环境搭建</h3><blockquote><p>Python需要3个库包：gdal、shapely、psycopg2</p></blockquote><p>这3个库包可以进入cmd利用命令行进行安装</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">pip install gdal</span><br><span class="line"></span><br><span class="line">pip install shapely</span><br><span class="line"></span><br><span class="line">pip install psycopg2</span><br></pre></td></tr></table></figure><h3 id="4-2-Python读取shp文件"><a href="#4-2-Python读取shp文件" class="headerlink" title="4.2 Python读取shp文件"></a>4.2 Python读取shp文件</h3><blockquote><p><strong>读shp文件，并返回一个list方法，再把list写入一个文本txt中</strong></p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=gbk</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="keyword">from</span> osgeo <span class="keyword">import</span> gdal</span><br><span class="line">    <span class="keyword">from</span> osgeo <span class="keyword">import</span> ogr</span><br><span class="line"><span class="keyword">except</span> ImportError:</span><br><span class="line">    <span class="keyword">import</span> gdal</span><br><span class="line">    <span class="keyword">import</span> ogr</span><br><span class="line"><span class="comment"># pathStr,shp文件的全路径</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">ReadVectorFile</span>(<span class="params">pathStr</span>):</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 返回结果是一个list</span></span><br><span class="line">    result=[]</span><br><span class="line">    <span class="comment"># 支持中文路径</span></span><br><span class="line">    gdal.SetConfigOption(<span class="string">&quot;GDAL_FILENAME_IS_UTF8&quot;</span>, <span class="string">&quot;NO&quot;</span>)</span><br><span class="line">    <span class="comment"># 属性表字段支持中文</span></span><br><span class="line">    gdal.SetConfigOption(<span class="string">&quot;SHAPE_ENCODING&quot;</span>, <span class="string">&quot;&quot;</span>)</span><br><span class="line">    strVectorFile = pathStr</span><br><span class="line">    <span class="comment"># 注册所有的驱动</span></span><br><span class="line">    ogr.RegisterAll()</span><br><span class="line">    <span class="comment"># 打开数据</span></span><br><span class="line">    ds = ogr.Open(strVectorFile, <span class="number">0</span>)</span><br><span class="line">    <span class="comment"># 获取该数据源中的图层个数，一般shp数据图层只有一个，如果是mdb、dxf等图层就会有多个</span></span><br><span class="line">    iLayerCount = ds.GetLayerCount()</span><br><span class="line">    <span class="comment"># 获取第一个图层</span></span><br><span class="line">    oLayer = ds.GetLayerByIndex(<span class="number">0</span>)</span><br><span class="line">    <span class="comment"># 对图层进行初始化</span></span><br><span class="line">    oLayer.ResetReading()</span><br><span class="line">    <span class="comment"># 获取图层中的属性表表头并输出,可以定义建表语句</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;属性表结构信息：&quot;</span>)</span><br><span class="line">    oDefn = oLayer.GetLayerDefn()</span><br><span class="line">    iFieldCount = oDefn.GetFieldCount()</span><br><span class="line">    <span class="keyword">for</span> iAttr <span class="keyword">in</span> <span class="built_in">range</span>(iFieldCount):</span><br><span class="line">        oField = oDefn.GetFieldDefn(iAttr)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;%s: %s(%d.%d)&quot;</span> % ( \</span><br><span class="line">     \</span><br><span class="line">            oField.GetNameRef(), \</span><br><span class="line">     \</span><br><span class="line">            oField.GetFieldTypeName(oField.GetType()), \</span><br><span class="line">     \</span><br><span class="line">            oField.GetWidth(), \</span><br><span class="line">     \</span><br><span class="line">            oField.GetPrecision()))</span><br><span class="line">    <span class="comment"># 输出图层中的要素个数</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;要素个数 = &quot;</span>, oLayer.GetFeatureCount(<span class="number">0</span>))</span><br><span class="line">    oFeature = oLayer.GetNextFeature()</span><br><span class="line">    <span class="comment"># 下面开始遍历图层中的要素，将对象都作为string输出</span></span><br><span class="line">    <span class="keyword">while</span> oFeature <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">        <span class="comment"># 获取要素中的属性表内容</span></span><br><span class="line">        lineStr=[]</span><br><span class="line">        <span class="keyword">for</span> iField <span class="keyword">in</span> <span class="built_in">range</span>(iFieldCount):</span><br><span class="line">            lineStr.append(oFeature.GetFieldAsString(iField))</span><br><span class="line">    <span class="comment"># 获取要素中的几何体</span></span><br><span class="line">        oGeometry = oFeature.GetGeometryRef()</span><br><span class="line">        lineStr.append(<span class="built_in">str</span>(oGeometry))</span><br><span class="line">        <span class="comment"># print(lineStr)</span></span><br><span class="line">        result.append(lineStr)</span><br><span class="line">        <span class="comment"># 循环</span></span><br><span class="line">        oFeature = oLayer.GetNextFeature()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;数据集关闭！&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    result=ReadVectorFile(  <span class="string">r&#x27;E:\develop_gis\map website\data\V6 Time Series County Points\v6_time_cnty_pts_utf_wgs84\v6_time_cnty_pts_utf_wgs84.shp&#x27;</span>)</span><br><span class="line">    f_new = <span class="built_in">open</span>(</span><br><span class="line">        <span class="string">r&#x27;E:\develop_gis\map website\data\V6 Time Series County Points\v6_time_cnty_pts_utf_wgs84\v6_time_cnty_pts_utf_wgs84.txt&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;a&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    <span class="keyword">for</span> r <span class="keyword">in</span> result:</span><br><span class="line">        <span class="keyword">for</span> p <span class="keyword">in</span> r:</span><br><span class="line">            f_new.write(p + <span class="string">&#x27;\t&#x27;</span>)</span><br><span class="line">        f_new.write(<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">    f_new.close()</span><br></pre></td></tr></table></figure><h3 id="4-3-PostSQL数据库中建表"><a href="#4-3-PostSQL数据库中建表" class="headerlink" title="4.3 PostSQL数据库中建表"></a>4.3 PostSQL数据库中建表</h3><blockquote><p>直接将之前shp生成的txt文件作为源，写入数据库！进行两个步骤的操作：<strong>① 建表；② 插入</strong></p></blockquote><ul><li><p><strong>建表</strong></p><p>建表的时候最好加上<strong>字段说明</strong>，顺便可以再加上索引</p><ul><li><em>public. v6_time_cnty_pts_utf_wgs84表</em></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--建表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> public. v6_time_cnty_pts_utf_wgs84(</span><br><span class="line">  gid SERIAL8 <span class="keyword">PRIMARY</span> KEY <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  name_py <span class="type">varchar</span>(<span class="number">40</span>),</span><br><span class="line">  name_ch <span class="type">varchar</span>(<span class="number">45</span>),</span><br><span class="line">  name_ft <span class="type">varchar</span>(<span class="number">45</span>),</span><br><span class="line">  x_coor float8,</span><br><span class="line">  y_coor float8,</span><br><span class="line">  pres_loc <span class="type">varchar</span>(<span class="number">60</span>),</span><br><span class="line">  type_py <span class="type">varchar</span>(<span class="number">15</span>),</span><br><span class="line">  type_ch <span class="type">varchar</span>(<span class="number">15</span>),</span><br><span class="line">  lev_rank <span class="type">varchar</span>(<span class="number">1</span>),</span><br><span class="line">  beg_yr int8,</span><br><span class="line">  beg_rule <span class="type">varchar</span>(<span class="number">1</span>),</span><br><span class="line">  end_yr int8,</span><br><span class="line">  end_rule <span class="type">varchar</span>(<span class="number">1</span>),</span><br><span class="line">  note_id int8,</span><br><span class="line">  obj_type <span class="type">varchar</span>(<span class="number">7</span>),</span><br><span class="line">  sys_id int8,</span><br><span class="line">  geo_src <span class="type">varchar</span>(<span class="number">10</span>),</span><br><span class="line">  compiler <span class="type">varchar</span>(<span class="number">12</span>),</span><br><span class="line">  gecomplr <span class="type">varchar</span>(<span class="number">10</span>),</span><br><span class="line">  checker <span class="type">varchar</span>(<span class="number">10</span>),</span><br><span class="line">  ent_date <span class="type">varchar</span>(<span class="number">10</span>),</span><br><span class="line">  beg_chg_ty <span class="type">varchar</span>(<span class="number">21</span>),</span><br><span class="line">  end_chg_ty <span class="type">varchar</span>(<span class="number">30</span>),</span><br><span class="line">  geom geometry</span><br><span class="line">);</span><br><span class="line"><span class="comment">--建立索引</span></span><br><span class="line"><span class="keyword">CREATE</span> INDEX v6_time_cnty_pts_utf_wgs84_index <span class="keyword">ON</span> v6_time_cnty_pts_utf_wgs84 <span class="keyword">USING</span> btree(gid);</span><br><span class="line"><span class="comment">--表说明</span></span><br><span class="line">COMMENT <span class="keyword">ON</span> <span class="keyword">TABLE</span> public.v6_time_cnty_pts_utf_wgs84 <span class="keyword">IS</span> <span class="string">&#x27;第6版中国历史地理时间序列点数据&#x27;</span>;</span><br><span class="line">COMMENT <span class="keyword">ON</span> <span class="keyword">COLUMN</span> public.v6_time_cnty_pts_utf_wgs84.gid <span class="keyword">IS</span> <span class="string">&#x27;主键ID&#x27;</span>;</span><br><span class="line">COMMENT <span class="keyword">ON</span> <span class="keyword">COLUMN</span> public.v6_time_cnty_pts_utf_wgs84.name_py <span class="keyword">IS</span> <span class="string">&#x27;拼音名称&#x27;</span>;</span><br><span class="line">COMMENT <span class="keyword">ON</span> <span class="keyword">COLUMN</span> public.v6_time_cnty_pts_utf_wgs84.name_ch <span class="keyword">IS</span> <span class="string">&#x27;简体中文名称&#x27;</span>;</span><br><span class="line">COMMENT <span class="keyword">ON</span> <span class="keyword">COLUMN</span> public.v6_time_cnty_pts_utf_wgs84.name_ft <span class="keyword">IS</span> <span class="string">&#x27;繁体中文名称&#x27;</span>;</span><br><span class="line">COMMENT <span class="keyword">ON</span> <span class="keyword">COLUMN</span> public.v6_time_cnty_pts_utf_wgs84.x_coor <span class="keyword">IS</span> <span class="string">&#x27;经度&#x27;</span>;</span><br><span class="line">COMMENT <span class="keyword">ON</span> <span class="keyword">COLUMN</span> public.v6_time_cnty_pts_utf_wgs84.y_coor <span class="keyword">IS</span> <span class="string">&#x27;纬度&#x27;</span>;</span><br><span class="line">COMMENT <span class="keyword">ON</span> <span class="keyword">COLUMN</span> public.v6_time_cnty_pts_utf_wgs84.pres_loc <span class="keyword">IS</span> <span class="string">&#x27;现所在地&#x27;</span>;</span><br><span class="line">COMMENT <span class="keyword">ON</span> <span class="keyword">COLUMN</span> public.v6_time_cnty_pts_utf_wgs84.type_py <span class="keyword">IS</span> <span class="string">&#x27;建制类型拼音&#x27;</span>;</span><br><span class="line">COMMENT <span class="keyword">ON</span> <span class="keyword">COLUMN</span> public.v6_time_cnty_pts_utf_wgs84.type_ch <span class="keyword">IS</span> <span class="string">&#x27;建制类型简体中文&#x27;</span>;</span><br><span class="line">COMMENT <span class="keyword">ON</span> <span class="keyword">COLUMN</span> public.v6_time_cnty_pts_utf_wgs84.lev_rank <span class="keyword">IS</span> <span class="string">&#x27;建制等级&#x27;</span>;</span><br><span class="line">COMMENT <span class="keyword">ON</span> <span class="keyword">COLUMN</span> public.v6_time_cnty_pts_utf_wgs84.beg_yr <span class="keyword">IS</span> <span class="string">&#x27;建制开始时间&#x27;</span>;</span><br><span class="line">COMMENT <span class="keyword">ON</span> <span class="keyword">COLUMN</span> public.v6_time_cnty_pts_utf_wgs84.beg_rule <span class="keyword">IS</span> <span class="string">&#x27;开始时间精度&#x27;</span>;</span><br><span class="line">COMMENT <span class="keyword">ON</span> <span class="keyword">COLUMN</span> public.v6_time_cnty_pts_utf_wgs84.end_yr <span class="keyword">IS</span> <span class="string">&#x27;建制结束时间&#x27;</span>;</span><br><span class="line">COMMENT <span class="keyword">ON</span> <span class="keyword">COLUMN</span> public.v6_time_cnty_pts_utf_wgs84.end_rule <span class="keyword">IS</span> <span class="string">&#x27;结束时间精度&#x27;</span>;</span><br><span class="line">COMMENT <span class="keyword">ON</span> <span class="keyword">COLUMN</span> public.v6_time_cnty_pts_utf_wgs84.note_id <span class="keyword">IS</span> <span class="string">&#x27;系统id&#x27;</span>;</span><br><span class="line">COMMENT <span class="keyword">ON</span> <span class="keyword">COLUMN</span> public.v6_time_cnty_pts_utf_wgs84.obj_type <span class="keyword">IS</span> <span class="string">&#x27;geometry对象类型&#x27;</span>;</span><br><span class="line">COMMENT <span class="keyword">ON</span> <span class="keyword">COLUMN</span> public.v6_time_cnty_pts_utf_wgs84.sys_id <span class="keyword">IS</span> <span class="string">&#x27;系统id&#x27;</span>;</span><br><span class="line">COMMENT <span class="keyword">ON</span> <span class="keyword">COLUMN</span> public.v6_time_cnty_pts_utf_wgs84.geo_src <span class="keyword">IS</span> <span class="string">&#x27;geometry数据来源&#x27;</span>;</span><br><span class="line">COMMENT <span class="keyword">ON</span> <span class="keyword">COLUMN</span> public.v6_time_cnty_pts_utf_wgs84.compiler <span class="keyword">IS</span> <span class="string">&#x27;编辑人员&#x27;</span>;</span><br><span class="line">COMMENT <span class="keyword">ON</span> <span class="keyword">COLUMN</span> public.v6_time_cnty_pts_utf_wgs84.gecomplr <span class="keyword">IS</span> <span class="string">&#x27;绘制人员&#x27;</span>;</span><br><span class="line">COMMENT <span class="keyword">ON</span> <span class="keyword">COLUMN</span> public.v6_time_cnty_pts_utf_wgs84.checker <span class="keyword">IS</span> <span class="string">&#x27;审核人员&#x27;</span>;</span><br><span class="line">COMMENT <span class="keyword">ON</span> <span class="keyword">COLUMN</span> public.v6_time_cnty_pts_utf_wgs84.ent_date <span class="keyword">IS</span> <span class="string">&#x27;结束时间&#x27;</span>;</span><br><span class="line">COMMENT <span class="keyword">ON</span> <span class="keyword">COLUMN</span> public.v6_time_cnty_pts_utf_wgs84.beg_chg_ty <span class="keyword">IS</span> <span class="string">&#x27;建制开始原因&#x27;</span>;</span><br><span class="line">COMMENT <span class="keyword">ON</span> <span class="keyword">COLUMN</span> public.v6_time_cnty_pts_utf_wgs84.end_chg_ty <span class="keyword">IS</span> <span class="string">&#x27;建制结束原因&#x27;</span>;</span><br><span class="line">COMMENT <span class="keyword">ON</span> <span class="keyword">COLUMN</span> public.v6_time_cnty_pts_utf_wgs84.geom <span class="keyword">IS</span> <span class="string">&#x27;geometry对象&#x27;</span>;</span><br></pre></td></tr></table></figure></li><li><p><strong>插入</strong></p><p>插入一条数据进去</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> v6_time_cnty_pts_utf_wgs84(name_py,name_ch,name_ft,x_coor,y_coor,pres_loc,type_py,type_ch,lev_rank,beg_yr,beg_rule,end_yr,end_rule,note_id,obj_type,sys_id,geo_src,compiler,gecomplr,checker,ent_date,beg_chg_ty,end_chg_ty,geom) <span class="keyword">VALUES</span>(<span class="string">&#x27;Luowubu&#x27;</span>,<span class="string">&#x27;罗婺部&#x27;</span>,<span class="string">&#x27;羅婺部&#x27;</span>,<span class="number">102.40378</span>,<span class="number">25.88668</span>,<span class="string">&#x27;云南省禄劝彝族苗族自治县西北七十二里云龙&#x27;</span>,<span class="string">&#x27;Bu&#x27;</span>,<span class="string">&#x27;部&#x27;</span>,<span class="string">&#x27;6&#x27;</span>,<span class="number">960</span>,<span class="keyword">null</span>,<span class="number">1253</span>,<span class="keyword">null</span>,<span class="number">80317</span>,<span class="string">&#x27;POINT&#x27;</span>,<span class="number">80317</span>,<span class="string">&#x27;FROM_FD&#x27;</span>,<span class="keyword">null</span>,<span class="keyword">null</span>,<span class="keyword">null</span>,<span class="keyword">null</span>,<span class="string">&#x27;新建&#x27;</span>,<span class="string">&#x27;撤销&#x27;</span>,st_geomfromtext(<span class="string">&#x27;POINT(102.4037799950270653 25.88667999033716072)&#x27;</span>,<span class="number">4326</span>))</span><br></pre></td></tr></table></figure></li></ul><h3 id="4-4-Python把生成的txt文件写入PostSQL数据库"><a href="#4-4-Python把生成的txt文件写入PostSQL数据库" class="headerlink" title="4.4 Python把生成的txt文件写入PostSQL数据库"></a>4.4 Python把生成的txt文件写入PostSQL数据库</h3><ul><li><p>测试一下能不能连接成功</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=gbk</span></span><br><span class="line"><span class="keyword">import</span> psycopg2</span><br><span class="line"></span><br><span class="line">conn = psycopg2.connect(database=<span class="string">&quot;mapdata&quot;</span>, user=<span class="string">&quot;postgres&quot;</span>, password=<span class="string">&quot;123456&quot;</span>, host=<span class="string">&quot;127.0.0.1&quot;</span>, port=<span class="string">&quot;5432&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;连接成功&#x27;</span>)</span><br></pre></td></tr></table></figure></li><li><p>连接成功之后，就可以把在4.2生成的<strong>txt文件写入PostSQL数据库了</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 建立游标</span></span><br><span class="line">cur = conn.cursor()</span><br><span class="line">f=<span class="built_in">open</span>(<span class="string">r&#x27;E:\develop_gis\map website\data\V6 Time Series County Points\v6_time_cnty_pts_utf_wgs84\v6_time_cnty_pts_utf_wgs84.txt&#x27;</span>,<span class="string">&#x27;r&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"><span class="comment"># 按行读入txt</span></span><br><span class="line">flines=f.readlines()</span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> flines:</span><br><span class="line">    <span class="comment"># 去掉干扰，切词</span></span><br><span class="line">    abbrlist=line.replace(<span class="string">&quot;&#x27;&quot;</span>,<span class="string">&quot; &quot;</span>).split(<span class="string">&#x27;\t&#x27;</span>)</span><br><span class="line">    <span class="comment"># name_py,name_ch,name_ft,x_coor,y_coor,pres_loc,type_py,type_ch,lev_rank,beg_yr,beg_rule,end_yr,end_rule,note_id,obj_type,sys_id,geo_src,compiler,gecomplr,checker,ent_date,beg_chg_ty,end_chg_ty,geom</span></span><br><span class="line">    name_py=<span class="string">&#x27;null&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> (abbrlist[<span class="number">0</span>]!=<span class="string">&#x27;&#x27;</span>):</span><br><span class="line">        name_py=<span class="string">&quot;&#x27;&quot;</span>+abbrlist[<span class="number">0</span>]+<span class="string">&quot;&#x27;&quot;</span></span><br><span class="line">    name_ch=<span class="string">&#x27;null&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> (abbrlist[<span class="number">1</span>]!=<span class="string">&#x27;&#x27;</span>):</span><br><span class="line">        name_ch=<span class="string">&quot;&#x27;&quot;</span>+abbrlist[<span class="number">1</span>]+<span class="string">&quot;&#x27;&quot;</span></span><br><span class="line">    name_ft=<span class="string">&#x27;null&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> (abbrlist[<span class="number">2</span>]!=<span class="string">&#x27;&#x27;</span>):</span><br><span class="line">        name_ft=<span class="string">&quot;&#x27;&quot;</span>+abbrlist[<span class="number">2</span>]+<span class="string">&quot;&#x27;&quot;</span></span><br><span class="line">    x_coor=<span class="string">&#x27;null&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> (abbrlist[<span class="number">3</span>]!=<span class="string">&#x27;&#x27;</span>):</span><br><span class="line">        x_coor=abbrlist[<span class="number">3</span>]</span><br><span class="line">    y_coor=<span class="string">&#x27;null&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> (abbrlist[<span class="number">4</span>]!=<span class="string">&#x27;&#x27;</span>):</span><br><span class="line">        y_coor=abbrlist[<span class="number">4</span>]</span><br><span class="line">    pres_loc=<span class="string">&#x27;null&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> (abbrlist[<span class="number">5</span>]!=<span class="string">&#x27;&#x27;</span>):</span><br><span class="line">        pres_loc=<span class="string">&quot;&#x27;&quot;</span>+abbrlist[<span class="number">5</span>]+<span class="string">&quot;&#x27;&quot;</span></span><br><span class="line">    type_py=<span class="string">&#x27;null&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> (abbrlist[<span class="number">6</span>]!=<span class="string">&#x27;&#x27;</span>):</span><br><span class="line">        type_py=<span class="string">&quot;&#x27;&quot;</span>+abbrlist[<span class="number">6</span>]+<span class="string">&quot;&#x27;&quot;</span></span><br><span class="line">    type_ch=<span class="string">&#x27;null&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> (abbrlist[<span class="number">7</span>]!=<span class="string">&#x27;&#x27;</span>):</span><br><span class="line">        type_ch=<span class="string">&quot;&#x27;&quot;</span>+abbrlist[<span class="number">7</span>]+<span class="string">&quot;&#x27;&quot;</span></span><br><span class="line">    lev_rank=<span class="string">&#x27;null&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> (abbrlist[<span class="number">8</span>]!=<span class="string">&#x27;&#x27;</span>):</span><br><span class="line">        lev_rank=<span class="string">&quot;&#x27;&quot;</span>+abbrlist[<span class="number">8</span>]+<span class="string">&quot;&#x27;&quot;</span></span><br><span class="line">    beg_yr=<span class="string">&#x27;null&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> (abbrlist[<span class="number">9</span>]!=<span class="string">&#x27;&#x27;</span>):</span><br><span class="line">        beg_yr=abbrlist[<span class="number">9</span>]</span><br><span class="line">    beg_rule=<span class="string">&#x27;null&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> (abbrlist[<span class="number">10</span>]!=<span class="string">&#x27;&#x27;</span>):</span><br><span class="line">        beg_rule=<span class="string">&quot;&#x27;&quot;</span>+abbrlist[<span class="number">10</span>]+<span class="string">&quot;&#x27;&quot;</span></span><br><span class="line">    end_yr=<span class="string">&#x27;null&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> (abbrlist[<span class="number">11</span>]!=<span class="string">&#x27;&#x27;</span>):</span><br><span class="line">        end_yr=abbrlist[<span class="number">11</span>]</span><br><span class="line">    end_rule=<span class="string">&#x27;null&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> (abbrlist[<span class="number">12</span>]!=<span class="string">&#x27;&#x27;</span>):</span><br><span class="line">        end_rule=<span class="string">&quot;&#x27;&quot;</span>+abbrlist[<span class="number">12</span>]+<span class="string">&quot;&#x27;&quot;</span></span><br><span class="line">    note_id=<span class="string">&#x27;null&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> (abbrlist[<span class="number">13</span>]!=<span class="string">&#x27;&#x27;</span>):</span><br><span class="line">        note_id=abbrlist[<span class="number">13</span>]</span><br><span class="line">    obj_type=<span class="string">&#x27;null&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> (abbrlist[<span class="number">14</span>]!=<span class="string">&#x27;&#x27;</span>):</span><br><span class="line">        obj_type=<span class="string">&quot;&#x27;&quot;</span>+abbrlist[<span class="number">14</span>]+<span class="string">&quot;&#x27;&quot;</span></span><br><span class="line">    sys_id=<span class="string">&#x27;null&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> (abbrlist[<span class="number">15</span>]!=<span class="string">&#x27;&#x27;</span>):</span><br><span class="line">        sys_id=abbrlist[<span class="number">15</span>]</span><br><span class="line">    geo_src=<span class="string">&#x27;null&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> (abbrlist[<span class="number">16</span>]!=<span class="string">&#x27;&#x27;</span>):</span><br><span class="line">        geo_src=<span class="string">&quot;&#x27;&quot;</span>+abbrlist[<span class="number">16</span>]+<span class="string">&quot;&#x27;&quot;</span></span><br><span class="line">    compiler=<span class="string">&#x27;null&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> (abbrlist[<span class="number">17</span>]!=<span class="string">&#x27;&#x27;</span>):</span><br><span class="line">        compiler=<span class="string">&quot;&#x27;&quot;</span>+abbrlist[<span class="number">17</span>]+<span class="string">&quot;&#x27;&quot;</span></span><br><span class="line">    gecomplr=<span class="string">&#x27;null&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> (abbrlist[<span class="number">18</span>]!=<span class="string">&#x27;&#x27;</span>):</span><br><span class="line">        gecomplr=<span class="string">&quot;&#x27;&quot;</span>+abbrlist[<span class="number">18</span>]+<span class="string">&quot;&#x27;&quot;</span></span><br><span class="line">    checker=<span class="string">&#x27;null&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> (abbrlist[<span class="number">19</span>]!=<span class="string">&#x27;&#x27;</span>):</span><br><span class="line">        checker=<span class="string">&quot;&#x27;&quot;</span>+abbrlist[<span class="number">19</span>]+<span class="string">&quot;&#x27;&quot;</span></span><br><span class="line">    ent_date=<span class="string">&#x27;null&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> (abbrlist[<span class="number">20</span>]!=<span class="string">&#x27;&#x27;</span>):</span><br><span class="line">        ent_date=<span class="string">&quot;&#x27;&quot;</span>+abbrlist[<span class="number">20</span>]+<span class="string">&quot;&#x27;&quot;</span></span><br><span class="line">    beg_chg_ty=<span class="string">&#x27;null&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> (abbrlist[<span class="number">21</span>]!=<span class="string">&#x27;&#x27;</span>):</span><br><span class="line">        beg_chg_ty=<span class="string">&quot;&#x27;&quot;</span>+abbrlist[<span class="number">21</span>]+<span class="string">&quot;&#x27;&quot;</span></span><br><span class="line">    end_chg_ty=<span class="string">&#x27;null&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> (abbrlist[<span class="number">22</span>]!=<span class="string">&#x27;&#x27;</span>):</span><br><span class="line">        end_chg_ty=<span class="string">&quot;&#x27;&quot;</span>+abbrlist[<span class="number">22</span>]+<span class="string">&quot;&#x27;&quot;</span></span><br><span class="line">    geom=<span class="string">&#x27;null&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> (abbrlist[<span class="number">23</span>]!=<span class="string">&#x27;&#x27;</span>):</span><br><span class="line">        geom=<span class="string">&quot;st_geomfromtext(&#x27;&quot;</span>+abbrlist[<span class="number">23</span>]+<span class="string">&quot;&#x27;,4326)&quot;</span></span><br><span class="line">    <span class="comment"># 拼接sql语句</span></span><br><span class="line">    sqltxt=<span class="string">&quot;INSERT INTO v6_time_cnty_pts_utf_wgs84(&quot;</span> \</span><br><span class="line">           <span class="string">&quot;name_py,name_ch,name_ft,x_coor,y_coor,pres_loc,type_py,type_ch,lev_rank,beg_yr,beg_rule,&quot;</span> \</span><br><span class="line">           <span class="string">&quot;end_yr,end_rule,note_id,obj_type,sys_id,geo_src,compiler,gecomplr,checker,ent_date,&quot;</span> \</span><br><span class="line">           <span class="string">&quot;beg_chg_ty,end_chg_ty,geom) VALUES(&quot;</span>+name_py+<span class="string">&quot;,&quot;</span>+name_ch+<span class="string">&quot;,&quot;</span>+name_ft+<span class="string">&quot;,&quot;</span>+x_coor+<span class="string">&quot;,&quot;</span>+y_coor+<span class="string">&quot;,&quot;</span>\</span><br><span class="line">           +pres_loc+<span class="string">&quot;,&quot;</span>+type_py+<span class="string">&quot;,&quot;</span>+type_ch+<span class="string">&quot;,&quot;</span>+lev_rank+<span class="string">&quot;,&quot;</span>+beg_yr+<span class="string">&quot;,&quot;</span>+beg_rule+<span class="string">&quot;,&quot;</span>+end_yr+<span class="string">&quot;,&quot;</span>+end_rule+<span class="string">&quot;,&quot;</span>\</span><br><span class="line">           +note_id+<span class="string">&quot;,&quot;</span>+obj_type+<span class="string">&quot;,&quot;</span>+sys_id+<span class="string">&quot;,&quot;</span>+geo_src+<span class="string">&quot;,&quot;</span>+compiler+<span class="string">&quot;,&quot;</span>+gecomplr+<span class="string">&quot;,&quot;</span>+checker+<span class="string">&quot;,&quot;</span>+ent_date+<span class="string">&quot;,&quot;</span>\</span><br><span class="line">           +beg_chg_ty+<span class="string">&quot;,&quot;</span>+end_chg_ty+<span class="string">&quot;,&quot;</span>+geom+<span class="string">&quot;)&quot;</span></span><br><span class="line">    <span class="built_in">print</span>(sqltxt)</span><br><span class="line">    <span class="comment"># 执行sql</span></span><br><span class="line">    cur.execute(sqltxt)</span><br><span class="line"><span class="comment"># 关闭连接</span></span><br><span class="line">conn.commit()</span><br><span class="line">conn.close()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;插入完成&#x27;</span>)</span><br></pre></td></tr></table></figure></li></ul><h3 id="4-5-总结流程"><a href="#4-5-总结流程" class="headerlink" title="4.5 总结流程"></a>4.5 总结流程</h3><blockquote><p>用python处理数据的流程：先把python的环境搭建好，然后读取shp文件，与此同时会返回一个txt的文件；接着，在PostSQL中建表，并插入一条数据测试；然后，用python连接数据库，把生成的txt文件写入数据库中！</p><p><strong>Python读shp文件&#x3D;&#x3D;》返回txt文件&#x3D;&#x3D;》PostSQL数据库中建表&#x3D;&#x3D;》插入一条数据&#x3D;&#x3D;》Python连接数据库&#x3D;&#x3D;》txt文件写入数据库</strong></p><p>简单总结就两步：</p><ul><li><strong>shp文件导出txt</strong></li><li><strong>txt文件导入pg数据库</strong></li></ul></blockquote><h2 id="5-上传代码到GitHub"><a href="#5-上传代码到GitHub" class="headerlink" title="5 上传代码到GitHub"></a>5 上传代码到GitHub</h2><ul><li><p>在GitHub上面新建一个仓库</p></li><li><p>选择本地需要上传的文件夹作为本地仓库，右键<code>git bash here</code></p></li><li><p>敲命令行上传代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">-----------------------------</span><br><span class="line">-----------------------------</span><br><span class="line"># 上传本地的文件到GitHub仓库</span><br><span class="line"></span><br><span class="line"># 初始化</span><br><span class="line">git init</span><br><span class="line"></span><br><span class="line"># 把GitHub上面的仓库克隆下来</span><br><span class="line">git clone https://github.com/xxxxx/historymap.git</span><br><span class="line"></span><br><span class="line"># 把本地文件添加到暂存区</span><br><span class="line">git add .</span><br><span class="line"></span><br><span class="line"># 将暂存区的文件添加到仓库中</span><br><span class="line">git commit -m &quot;first commit&quot;</span><br><span class="line"></span><br><span class="line"># 将仓库中的文件提交提交到远程仓库</span><br><span class="line">git push origin main</span><br><span class="line"></span><br><span class="line">------------------------------</span><br><span class="line">------------------------------</span><br><span class="line"># 删除GitHub仓库中的文件</span><br><span class="line"></span><br><span class="line"># 查看有哪些文件</span><br><span class="line">dir</span><br><span class="line"></span><br><span class="line"># 删除一个文件</span><br><span class="line">git rm -r --cached xxx</span><br><span class="line">git rm -r --cached xxxx</span><br><span class="line">git rm -r --cached xxxxx</span><br><span class="line"></span><br><span class="line"># 提交删除信息，添加操作说明</span><br><span class="line">git commit -m &quot;delete&quot;</span><br><span class="line"></span><br><span class="line"># push到GitHub仓库</span><br><span class="line">git push</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p><strong>git push origin main&#x2F;git push -u origin main和git push -u origin master有什么区别</strong></p><p>为什么后者代码数据传不上去，参考链接：<a href="https://blog.csdn.net/yzpbright/article/details/115574130">git push -u origin master 与git push –set-upstream origin master_yzpyzp的博客-CSDN博客</a></p><ul><li><p>新建的仓库的<strong>默认分支从master变成了main</strong>，至于origin，就是远程仓库的别名，<strong>github把远程仓库的名称默认称为origin</strong>，自己也可以改为其他名称，就像GitHub之前仓库的默认分支叫做master，而现在改为main</p></li><li><p><code>git push -u</code>是<code>git push --set-upstream</code>的缩写版本；（upstream 是指本地分支与远程仓库中的分支之间的流通道，建立流通道就是建立本地分支与远程分支的关联，建立之后，后续就可以直接使用git push指令把本地分支的commit推到远程分支中）</p></li><li><p><code>git push -u origin main</code>的作用：</p><ul><li><p>先把本地的当前分支推送到远程仓库origin的main分支</p></li><li><p>再把本地的当前分支关联到远程仓库origin的main分支</p><p>相当于<code>git push origin main</code>加上<code>git branch --set-upstream-to=origin/main main</code>的作用，即先把本地分支push到远程仓库中，然后再建立本地分支与远程分支的关联。</p></li></ul></li><li><p>不带任何参数的<code>git push</code>，默认只推送当前分支</p></li><li><p>推送代码时，经常会报以下两个错误：</p><ul><li>&#96;&#96;&#96;<br>fatal: unable to access ‘<a href="https://github.com/xxxxx/historymap.git/&#39;">https://github.com/xxxxx/historymap.git/&#39;</a>: Failed to connect to github.com port 443 after 22072 ms: Timed out<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- ```</span><br><span class="line">  error: src refspec master does not match any</span><br><span class="line">  error: failed to push some refs to &#x27;https://github.com/xxxxx/historymap.git&#x27;</span><br></pre></td></tr></table></figure></li></ul><p><strong>这是网络的原因，GitHub网站经常会出现打不开的问题</strong></p></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> GIS </category>
          
          <category> PostGIS </category>
          
          <category> PostSQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GIS </tag>
            
            <tag> PostGIS </tag>
            
            <tag> PostSQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Springboot快速入门（九）——SpringSecurity权限控制</title>
      <link href="/2022/11/03/Springboot%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%EF%BC%88%E4%B9%9D%EF%BC%89%E2%80%94%E2%80%94SpringSecurity%E6%9D%83%E9%99%90%E6%8E%A7%E5%88%B6/"/>
      <url>/2022/11/03/Springboot%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%EF%BC%88%E4%B9%9D%EF%BC%89%E2%80%94%E2%80%94SpringSecurity%E6%9D%83%E9%99%90%E6%8E%A7%E5%88%B6/</url>
      
        <content type="html"><![CDATA[<h2 id="1-安全简介"><a href="#1-安全简介" class="headerlink" title="1. 安全简介"></a>1. 安全简介</h2><blockquote><p>从应用开发的第一天就应该把安全相关的因素考虑进来，并在整个应用的开发过程中。如果在应用开发的后期才考虑安全的问题，就可能陷入一个两难的境地：一方面，应用存在严重的安全漏洞，无法满足用户的要求，并可能造成用户的隐私数据被攻击者窃取；另一方面，应用的基本架构已经确定，要修复安全漏洞，可能需要对系统的架构做出比较重大的调整，因而需要更多的开发时间，影响应用的发布进程。</p></blockquote><ul><li>之前做项目是没有使用框架是怎么控制权限的？对于权限 一般会细分为<strong>功能权限，访问权限，和菜单权限</strong>。代码会写的非常的繁琐，冗余。</li><li>Spring Security是一个功能强大且高度可定制的<strong>身份验证和访问控制框架</strong>。它实际上是保护基于spring的应用程序的标准。</li><li>Spring Security 基于 Spring 框架，提供了一套 Web 应用安全性的完整解决方案。一般来说，Web 应用的安全性包括<strong>用户认证（Authentication）和用户授权（Authorization）</strong>两个部分。<ul><li><strong>用户认证</strong>一般要求用户提供<strong>用户名和密码</strong>。系统通过校验用户名和密码来完成认证过程。</li><li><strong>用户授权</strong>指的是验证某个用户是否有权限执行某个操作。</li></ul></li><li>在用户认证方面，Spring Security 框架支持主流的认证方式，包括： <strong>HTTP 基本认证、HTTP 表单验证、HTTP 摘要认证、OpenID 和 LDAP 等。</strong></li><li>在用户授权方面，Spring Security 提供了<strong>基于角色的访问控制和访问控制列表</strong>（Access Control List，ACL），可以对应用中的领域对象进行细粒度的控制。</li></ul><h2 id="2-Spring-Security实战测试"><a href="#2-Spring-Security实战测试" class="headerlink" title="2. Spring Security实战测试"></a>2. Spring Security实战测试</h2>]]></content>
      
      
      <categories>
          
          <category> Springboot </category>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Springboot </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Springboot快速入门（八）——整合JDBC/Druid/MyBatis使用</title>
      <link href="/2022/10/28/Springboot%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%EF%BC%88%E5%85%AB%EF%BC%89%E2%80%94%E2%80%94%E6%95%B4%E5%90%88JDBC%60Druid%60MyBatis%E4%BD%BF%E7%94%A8/"/>
      <url>/2022/10/28/Springboot%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%EF%BC%88%E5%85%AB%EF%BC%89%E2%80%94%E2%80%94%E6%95%B4%E5%90%88JDBC%60Druid%60MyBatis%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h3 id="SpringData简介"><a href="#SpringData简介" class="headerlink" title="SpringData简介"></a>SpringData简介</h3><ul><li><p>对于数据访问层，无论是 SQL(关系型数据库) 还是 NOSQL(非关系型数据库)，Spring Boot 底层都是采用 Spring Data 的方式进行统一处理。</p></li><li><p>Spring Boot 底层都是采用 Spring Data 的方式进行统一处理各种数据库，Spring Data 也是 Spring 中与 Spring Boot、Spring Cloud 等齐名的知名项目。</p></li><li><p>Sping Data 官网：<a href="https://spring.io/projects/spring-data">https://spring.io/projects/spring-data</a></p></li><li><p>数据库相关的启动器 ：<a href="https://docs.spring.io/spring-boot/docs/2.6.3/reference/htmlsingle/#using.build-systems.starters">弹簧启动参考文档 (spring.io)</a></p></li></ul><h2 id="一-整合JDBC"><a href="#一-整合JDBC" class="headerlink" title="一. 整合JDBC"></a>一. 整合JDBC</h2><h3 id="1-新建项目"><a href="#1-新建项目" class="headerlink" title="1. 新建项目"></a>1. 新建项目</h3><p>选择的Dependencies有：<code>Spring Web</code> ，<code>JDBC API</code>和 <code>MySQL Driver</code></p><h3 id="2-新建application-yml文件并配置"><a href="#2-新建application-yml文件并配置" class="headerlink" title="2. 新建application.yml文件并配置"></a>2. 新建<code>application.yml</code>文件并配置</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="number">123456</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/mybatis?useUnicode=true&amp;characterEncoding=utf-8</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.jdbc.Driver</span></span><br></pre></td></tr></table></figure><h3 id="3-连接MySQL数据库"><a href="#3-连接MySQL数据库" class="headerlink" title="3. 连接MySQL数据库"></a>3. 连接MySQL数据库</h3><img src="https://s3.bmp.ovh/imgs/2022/10/25/b3691b57183b3a24.png" style="zoom: 33%;"><h3 id="4-测试数据库连接"><a href="#4-测试数据库连接" class="headerlink" title="4. 测试数据库连接"></a>4. 测试数据库连接</h3><ul><li><p>Demo5JdbcApplicationTests.java文件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Demo5JdbcApplicationTests</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Autowired(required = false)</span></span><br><span class="line">DataSource dataSource;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">contextLoads</span><span class="params">()</span> <span class="keyword">throws</span> SQLException &#123;</span><br><span class="line"><span class="comment">//查看一下默认的数据源</span></span><br><span class="line">System.out.println(dataSource.getClass());</span><br><span class="line"></span><br><span class="line"><span class="comment">//获得数据库连接</span></span><br><span class="line"><span class="type">Connection</span> <span class="variable">connection</span> <span class="operator">=</span> dataSource.getConnection();</span><br><span class="line">System.out.println(connection);</span><br><span class="line"></span><br><span class="line"><span class="comment">//关闭</span></span><br><span class="line">connection.close();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="报错问题"><a href="#报错问题" class="headerlink" title="报错问题"></a>报错问题</h4><ul><li><p>getConnection() 引入爆红</p><p>原因：</p><p>导入的包错误<code>import javax.activation.DataSource;</code></p><p>正确的是：<code>import javax.sql.DataSource;</code>    <code>import java.sql.Connection;</code>   <code>import java.sql.SQLException;</code></p><p>且要抛出异常：<code>void contextLoads() throws SQLException &#123;&#125;</code></p></li></ul><h3 id="5-Controller中的增删改查"><a href="#5-Controller中的增删改查" class="headerlink" title="5.Controller中的增删改查"></a>5.Controller中的增删改查</h3><p>在SpringBoot中有许多的模板，如：XXX Template ；这是SpringBoot已经配置好的模板bean，拿来即用！其中<code>JdbcTemplate</code>模板可以用来对数据库进行操作！</p><ul><li><p><strong>JdbcTemplate</strong></p><ol><li>有了数据源(com.zaxxer</li><li>.hikari.HikariDataSource)，然后可以拿到数据库连接 (java.sql.Connection)，有了连接，就可以使用原生的 JDBC 语句来操作数据库；</li><li>即使不使用第三方第数据库操作框架，如 MyBatis等，Spring 本身也对原生的JDBC 做了轻量级的封装，即<code>JdbcTemplate</code>。</li><li>数据库操作的所有 CRUD 方法都在 JdbcTemplate 中。</li><li>Spring Boot不仅提供了默认的数据源，同时默认已经配置好了 JdbcTemplate 放在了容器中，程序员只需自己注入即可使用。</li><li>JdbcTemplate 的自动配置是依赖 org.springframework.boot.autoconfigure.jdbc 包下的JdbcTemplateConfiguration类。</li></ol></li><li><p><strong>JdbcTemplate主要提供以下几类方法</strong>：</p><ul><li><strong>execute</strong>方法：可以用于执行任何SQL语句，一般用于执行DDL语句；</li><li><strong>update</strong>方法及<strong>batchUpdate</strong>方法：update方法用于执行新增、修改、删除等语句；batchUpdate 方法用于执行批处理相关语句；</li><li><strong>query</strong>方法及<strong>queryForXXX</strong>方法：用于执行查询相关语句；</li><li><strong>call</strong>方法：用于执行存储过程、函数相关语句。</li></ul></li><li><p><strong>JDBCController.java</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JDBCController</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Autowired(required = false)</span></span><br><span class="line">    JdbcTemplate jdbcTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//查询数据库的所有信息</span></span><br><span class="line">    <span class="comment">//没有实体类，数据库中的东西，怎么获取？  Map</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//查</span></span><br><span class="line">    <span class="comment">//List中的1个Map对应数据库的1行数据；Map中的key对应数据库的字段名，value对应数据库的字段值</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/userList&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;Map&lt;String,Object&gt;&gt; <span class="title function_">userList</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;select * from user&quot;</span>;</span><br><span class="line">        List&lt;Map&lt;String,Object&gt;&gt; list_maps = jdbcTemplate.queryForList(sql);</span><br><span class="line">        <span class="keyword">return</span> list_maps;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//增</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/addUser&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">addUser</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;insert into mybatis.user(id,name,pwd) values (4,&#x27;陈大花&#x27;,&#x27;123456&#x27;)&quot;</span>;</span><br><span class="line">        jdbcTemplate.update(sql);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;update-ok&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//改</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/updateUser/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">updateUser</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> <span class="type">int</span> id)</span>&#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;update mybatis.user set name=?,pwd=? where id=&quot;</span>+id;</span><br><span class="line">        <span class="comment">//封装</span></span><br><span class="line">        Object[] objects = <span class="keyword">new</span> <span class="title class_">Object</span>[<span class="number">2</span>];</span><br><span class="line">        objects[<span class="number">0</span>] = <span class="string">&quot;小明2&quot;</span>;</span><br><span class="line">        objects[<span class="number">1</span>] = <span class="string">&quot;zzz&quot;</span>;</span><br><span class="line">        jdbcTemplate.update(sql,objects);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;update-ok&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//删</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/deleteUser/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">deleteUser</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> <span class="type">int</span> id)</span>&#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;delete from mybatis.user where id =?&quot;</span>;</span><br><span class="line">        jdbcTemplate.update(sql,id);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;deleteUser-ok&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>总结：</p><p>数据库操作语句：</p><ul><li>查询：<code>&quot;select * from user&quot;;</code></li><li>插入：<code>&quot;insert into mybatis.user(id,name,pwd) values (4,&#39;陈大花&#39;,&#39;123456&#39;)&quot;;</code></li><li>更改：<code>&quot;update mybatis.user set name=?,pwd=? where id=&quot;+id;</code></li><li>删除：<code>&quot;delete from mybatis.user where id =?&quot;;</code></li></ul><p>springboot语句：</p><ul><li>查询：<code>List&lt;Map&lt;String,Object&gt;&gt; list_maps = jdbcTemplate.queryForList(sql);</code></li><li>插入：<code>jdbcTemplate.update(sql);</code></li><li>更改：<code>jdbcTemplate.update(sql,objects);</code></li><li>删除：<code>jdbcTemplate.update(sql,id);</code></li></ul><p>即，查询用的是<code>queryForList</code>属性，查询完放在<code>List</code>中；新增&#x2F;更改&#x2F;删除用的都是<code>update</code>属性</p></li></ul><h2 id="二-整合Druid"><a href="#二-整合Druid" class="headerlink" title="二. 整合Druid"></a>二. 整合Druid</h2><h3 id="1-Druid简介"><a href="#1-Druid简介" class="headerlink" title="1. Druid简介"></a>1. Druid简介</h3><ul><li>Druid是阿里巴巴开源平台上一个<strong>数据库连接池</strong>实现，结合了 C3P0、DBCP 等DB池的优点，同时加入了<strong>日志监控</strong></li><li>Druid可以很好的监控 DB 池连接和 SQL 的执行情况，天生就是针对<strong>监控</strong>而生的DB连接池</li><li>Github地址：<a href="https://github.com/alibaba/druid">https://github.com/alibaba/druid</a></li></ul><h3 id="2-配置数据源"><a href="#2-配置数据源" class="headerlink" title="2. 配置数据源"></a>2. 配置数据源</h3><ul><li><p>pom.xml文件</p><p>添加上Druid数据源依赖和导入Log4j的依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--druid--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.11<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--log4j--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>application.yml文件</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">root</span></span><br><span class="line">    <span class="comment"># ?serverTimezone=UTC解决时区的报错</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/mybatis?serverTimezone=UTC&amp;useUnicode=true&amp;characterEncoding=utf-8</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">com.alibaba.druid.pool.DruidDataSource</span> <span class="comment"># 自定义数据源</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#Spring Boot 默认是不注入这些属性值的，需要自己绑定</span></span><br><span class="line">    <span class="comment">#druid 数据源专有配置</span></span><br><span class="line">    <span class="attr">initialSize:</span> <span class="number">5</span></span><br><span class="line">    <span class="attr">minIdle:</span> <span class="number">5</span></span><br><span class="line">    <span class="attr">maxActive:</span> <span class="number">20</span></span><br><span class="line">    <span class="attr">maxWait:</span> <span class="number">60000</span></span><br><span class="line">    <span class="attr">timeBetweenEvictionRunsMillis:</span> <span class="number">60000</span></span><br><span class="line">    <span class="attr">minEvictableIdleTimeMillis:</span> <span class="number">300000</span></span><br><span class="line">    <span class="attr">validationQuery:</span> <span class="string">SELECT</span> <span class="number">1</span> <span class="string">FROM</span> <span class="string">DUAL</span></span><br><span class="line">    <span class="attr">testWhileIdle:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">testOnBorrow:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">testOnReturn:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">poolPreparedStatements:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment">#配置监控统计拦截的filters，stat:监控统计、log4j：日志记录、wall：防御sql注入</span></span><br><span class="line">    <span class="comment">#如果允许时报错 java.lang.ClassNotFoundException: org.apache.log4j.Priority</span></span><br><span class="line">      <span class="comment">#则导入 log4j 依赖即可，Maven 地址：https://mvnrepository.com/artifact/log4j/log4j</span></span><br><span class="line">    <span class="attr">filters:</span> <span class="string">stat,wall,log4j</span></span><br><span class="line">    <span class="attr">maxPoolPreparedStatementPerConnectionSize:</span> <span class="number">20</span></span><br><span class="line">    <span class="attr">useGlobalDataSourceStat:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">connectionProperties:</span> <span class="string">druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>将自定义的 Druid数据源添加到容器中，绑定全局配置——<strong>DruidConfig.java</strong>文件</p><p>为DruidDataSource 绑定全局配置文件中的参数，再添加到容器中，而不再使用Spring Boot的自动生成了；需要自己添加DruidDataSource组件到容器中，并绑定属性；</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DruidConfig</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *   将自定义的 Druid数据源添加到容器中，不再让 Spring Boot 自动创建</span></span><br><span class="line"><span class="comment">     *   绑定全局配置文件中的 druid 数据源属性到 com.alibaba.druid.pool.DruidDataSource从而让它们生效</span></span><br><span class="line"><span class="comment">     *   <span class="doctag">@ConfigurationProperties</span>(prefix = &quot;spring.datasource&quot;)：作用就是将 全局配置文件中</span></span><br><span class="line"><span class="comment">     *   前缀为 spring.datasource的属性值注入到 com.alibaba.druid.pool.DruidDataSource 的同名参数中</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@ConfigurationProperties(prefix = &quot;spring.datasource&quot;)</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> DataSource <span class="title function_">druidDataSource</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">DruidDataSource</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>测试是否成功</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">SpringbootDataJdbcApplicationTests</span> &#123;</span><br><span class="line">    <span class="comment">// DI注入数据源</span></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    DataSource dataSource;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">contextLoads</span><span class="params">()</span> <span class="keyword">throws</span> SQLException &#123;</span><br><span class="line">        <span class="comment">// 查看默认数据源</span></span><br><span class="line">        System.out.println(dataSource.getClass());</span><br><span class="line">        <span class="comment">// 获得连接</span></span><br><span class="line">        <span class="type">Connection</span> <span class="variable">connection</span> <span class="operator">=</span>   dataSource.getConnection();</span><br><span class="line">        System.out.println(connection);</span><br><span class="line"></span><br><span class="line">        <span class="type">DruidDataSource</span> <span class="variable">druidDataSource</span> <span class="operator">=</span> (DruidDataSource) dataSource;</span><br><span class="line">        System.out.println(<span class="string">&quot;druidDataSource 数据源最大连接数：&quot;</span> + druidDataSource.getMaxActive());</span><br><span class="line">        System.out.println(<span class="string">&quot;druidDataSource 数据源初始化连接数：&quot;</span> + druidDataSource.getInitialSize());</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 关闭连接</span></span><br><span class="line">        connection.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><h3 id="3-配置Druid数据源监控"><a href="#3-配置Druid数据源监控" class="headerlink" title="3. 配置Druid数据源监控"></a>3. 配置Druid数据源监控</h3><ul><li><p>Druid 数据源具有监控的功能，并提供了一个web界面方便用户查看，类似安装路由器时，人家也提供了一个默认的web页面。</p></li><li><p>所以第一步需要设置 Druid 的后台管理页面，比如登录账号、密码等；配置后台管理</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 配置 Druid 监控管理后台的Servlet；</span></span><br><span class="line"><span class="comment">// 内置 Servlet 容器时没有web.xml文件，所以使用 Spring Boot 的注册 Servlet 方式</span></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="keyword">public</span> ServletRegistrationBean <span class="title function_">statViewServlet</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">ServletRegistrationBean</span> <span class="variable">bean</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ServletRegistrationBean</span>(<span class="keyword">new</span> <span class="title class_">StatViewServlet</span>(), <span class="string">&quot;/druid/*&quot;</span>);</span><br><span class="line">  </span><br><span class="line">    <span class="comment">// 这些参数可以在 com.alibaba.druid.support.http.StatViewServlet</span></span><br><span class="line">    <span class="comment">// 的父类 com.alibaba.druid.support.http.ResourceServlet 中找到</span></span><br><span class="line">    Map&lt;String, String&gt; initParams = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">    initParams.put(<span class="string">&quot;loginUsername&quot;</span>, <span class="string">&quot;admin&quot;</span>); <span class="comment">//后台管理界面的登录账号</span></span><br><span class="line">    initParams.put(<span class="string">&quot;loginPassword&quot;</span>, <span class="string">&quot;123456&quot;</span>); <span class="comment">//后台管理界面的登录密码</span></span><br><span class="line">  </span><br><span class="line">    <span class="comment">// 后台允许谁可以访问</span></span><br><span class="line">    <span class="comment">// initParams.put(&quot;allow&quot;, &quot;localhost&quot;)：表示只有本机可以访问</span></span><br><span class="line">    <span class="comment">// initParams.put(&quot;allow&quot;, &quot;&quot;)：为空或者为null时，表示允许所有访问</span></span><br><span class="line">    initParams.put(<span class="string">&quot;allow&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">    <span class="comment">// deny：Druid 后台拒绝谁访问</span></span><br><span class="line">    <span class="comment">// initParams.put(&quot;kuangshen&quot;, &quot;192.168.1.20&quot;);表示禁止此ip访问</span></span><br><span class="line">  </span><br><span class="line">    <span class="comment">// 设置初始化参数</span></span><br><span class="line">    bean.setInitParameters(initParams);</span><br><span class="line">    <span class="keyword">return</span> bean;</span><br><span class="line">&#125;</span><br><span class="line">  </span><br></pre></td></tr></table></figure></li><li><p>配置监控filter过滤器(平时在工作中，按需求进行配置即可，主要用作监控！)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 配置 Druid 监控 之  web 监控的 filter</span></span><br><span class="line"><span class="comment">// WebStatFilter：用于配置Web和Druid数据源之间的管理关联监控统计</span></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="keyword">public</span> FilterRegistrationBean <span class="title function_">webStatFilter</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">FilterRegistrationBean</span> <span class="variable">bean</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FilterRegistrationBean</span>();</span><br><span class="line">    bean.setFilter(<span class="keyword">new</span> <span class="title class_">WebStatFilter</span>());</span><br><span class="line"></span><br><span class="line">    <span class="comment">// exclusions：设置哪些请求进行过滤排除掉，从而不进行统计</span></span><br><span class="line">    Map&lt;String, String&gt; initParams = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">    initParams.put(<span class="string">&quot;exclusions&quot;</span>, <span class="string">&quot;*.js,*.css,/druid/*,/jdbc/*&quot;</span>);</span><br><span class="line">    bean.setInitParameters(initParams);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// &quot;/*&quot; 表示过滤所有请求</span></span><br><span class="line">    bean.setUrlPatterns(Arrays.asList(<span class="string">&quot;/*&quot;</span>));</span><br><span class="line">    <span class="keyword">return</span> bean;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><h3 id="4-结果"><a href="#4-结果" class="headerlink" title="4. 结果"></a>4. 结果</h3><img src="https://s3.bmp.ovh/imgs/2022/10/26/0790b5b3efbfa417.png" style="zoom:33%;"><h2 id="三-整合MyBatis"><a href="#三-整合MyBatis" class="headerlink" title="三. 整合MyBatis"></a>三. 整合MyBatis</h2><blockquote><ul><li>官方文档：<a href="http://mybatis.org/spring-boot-starter/mybatis-spring-boot-autoconfigure/">http://mybatis.org/spring-boot-starter/mybatis-spring-boot-autoconfigure/</a></li><li>Maven仓库地址：<a href="https://mvnrepository.com/artifact/org.mybatis.spring.boot/mybatis-spring-boot-starter/2.2.1">Maven Repository: org.mybatis.spring.boot » mybatis-spring-boot-starter » 2.2.1 (mvnrepository.com)</a></li></ul></blockquote><h3 id="1-配置数据源"><a href="#1-配置数据源" class="headerlink" title="1. 配置数据源"></a>1. 配置数据源</h3><ul><li><p>pom.xml文件——<strong>导入MyBatis依赖</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--mybatis--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>application.properties文件——<strong>连接数据库，整合MyBatis</strong></p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring.datasource.username</span>=<span class="string">root</span></span><br><span class="line"><span class="attr">spring.datasource.password</span>=<span class="string">123456</span></span><br><span class="line"><span class="attr">spring.datasource.url</span>=<span class="string">jdbc:mysql://localhost:3306/mybatis?serverTimezone=UTC&amp;useUnicode=true&amp;characterEncoding=utf-8</span></span><br><span class="line"><span class="attr">spring.datasource.driver-class-name</span>=<span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># 整合mybatis</span></span><br><span class="line"><span class="attr">mybatis.type-aliases-package</span>=<span class="string">com.cc.pojo</span></span><br><span class="line"><span class="attr">mybatis.mapper-locations</span>=<span class="string">classpath:mybatis/mapper/*.xml</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="2-测试数据库是否成功连接"><a href="#2-测试数据库是否成功连接" class="headerlink" title="2. 测试数据库是否成功连接"></a>2. 测试数据库是否成功连接</h3><ul><li><p>test文件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Demo5MybatisApplicationTests</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//DI注入数据源</span></span><br><span class="line"><span class="meta">@Autowired(required = false)</span></span><br><span class="line">DataSource dataSource;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">contextLoads</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="comment">//查看默认数据源</span></span><br><span class="line">System.out.println(dataSource.getClass());</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">System.out.println(dataSource.getConnection());</span><br><span class="line">&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="3-创建实体类pojo——User类"><a href="#3-创建实体类pojo——User类" class="headerlink" title="3. 创建实体类pojo——User类"></a>3. 创建实体类pojo——User类</h3><ul><li><p>导入lombok依赖   </p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--lombook--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>User.java文件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String pwd;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="4-创建接口mapper——UserMapper接口"><a href="#4-创建接口mapper——UserMapper接口" class="headerlink" title="4. 创建接口mapper——UserMapper接口"></a>4. 创建接口mapper——UserMapper接口</h3><ul><li><p>UserMapper.java文件</p><p>声明controller中的方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// @Mapper: 表示本类是一个 MyBatis 的 Mapper类</span></span><br><span class="line"><span class="meta">@Mapper</span></span><br><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserMapper</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//查询用户的信息</span></span><br><span class="line">    List&lt;User&gt; <span class="title function_">queryUserList</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//通过id查询用户信息</span></span><br><span class="line">    User <span class="title function_">queryUserById</span><span class="params">(<span class="type">int</span> id)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//增加用户信息</span></span><br><span class="line">    <span class="type">int</span> <span class="title function_">addUser</span><span class="params">(User uer)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//更新用户</span></span><br><span class="line">    <span class="type">int</span> <span class="title function_">updateUser</span><span class="params">(User user)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//删除用户</span></span><br><span class="line">    <span class="type">int</span> <span class="title function_">deleteUser</span><span class="params">(<span class="type">int</span> id)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="5-创建对应的mapper映射文件-x2F-maven配置资源过滤-x2F-指定文件路径"><a href="#5-创建对应的mapper映射文件-x2F-maven配置资源过滤-x2F-指定文件路径" class="headerlink" title="5. 创建对应的mapper映射文件&#x2F;maven配置资源过滤&#x2F;指定文件路径"></a>5. 创建对应的mapper映射文件&#x2F;maven配置资源过滤&#x2F;指定文件路径</h3><ul><li><p>UserMapper.xml文件</p><p><code>resources</code>目录下新建<code>mybatis.mapper</code>包，包下新建<code>UserMapper.xml</code>文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.cc.mapper.UserMapper&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;queryUserList&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;User&quot;</span>&gt;</span></span><br><span class="line">        select * from user</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;queryUserById&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;User&quot;</span>&gt;</span></span><br><span class="line">        select * from user where id = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;addUser&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;User&quot;</span>&gt;</span></span><br><span class="line">        insert into user (id,name,pwd) values (#&#123;id&#125;,#&#123;name&#125;,#&#123;pwd&#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">&quot;updateUser&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;User&quot;</span>&gt;</span></span><br><span class="line">        update user set name=#&#123;name&#125;,pwd=#&#123;pwd&#125; where id=#&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">&quot;deleteUser&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;int&quot;</span>&gt;</span></span><br><span class="line">        delete from user where id = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><blockquote><p><strong>resultType与parameterType 的基本使用区别 ：</strong></p><ol><li><p><strong>resultType</strong> ：主要针对于<strong>从数据库中提取</strong>相应的数据出来，用于指定<strong>sql输出的结果类型</strong></p><ul><li>基本数据类型</li><li>pojo类型</li></ul></li><li><p><strong>parameterType</strong>：主要针对于将信息<strong>存入到数据库中</strong>，如：insert 增加数据到数据库，用于对应的mapper接口方法接受的参数类型</p></li></ol><ul><li>基本数据类型：int, string, long., Date<ul><li>复杂数据类型：类和Map</li></ul></li></ul></blockquote><ul><li><p>pom.xml文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/java<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filtering</span>&gt;</span>true<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>application.properties文件</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 对应实体类的路径</span></span><br><span class="line"><span class="attr">mybatis.type-aliases-package</span>=<span class="string">com.cc.pojo</span></span><br><span class="line"><span class="comment"># 指定myBatis的核心配置文件与Mapper映射文件</span></span><br><span class="line"><span class="attr">mybatis.mapper-locations</span>=<span class="string">classpath:mybatis/mapper/*.xml</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="6-创建controller层进行测试"><a href="#6-创建controller层进行测试" class="headerlink" title="6. 创建controller层进行测试"></a>6. 创建controller层进行测试</h3><ul><li><p>UserController.java文件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserMapper userMapper;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//查询用户</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/queryUserList&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;User&gt; <span class="title function_">queryUserList</span><span class="params">()</span>&#123;</span><br><span class="line">        List&lt;User&gt; userList = userMapper.queryUserList();</span><br><span class="line">        <span class="keyword">for</span>(User user : userList)&#123;</span><br><span class="line">            System.out.println(user);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> userList;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//添加一个用户</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/addUser&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">addUser</span><span class="params">()</span>&#123;</span><br><span class="line">        userMapper.addUser(<span class="keyword">new</span> <span class="title class_">User</span>(<span class="number">5</span>,<span class="string">&quot;阿狗&quot;</span>,<span class="string">&quot;456789&quot;</span>));</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;ok&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//修改一个用户</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/updateUser&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">updateUser</span><span class="params">()</span>&#123;</span><br><span class="line">        userMapper.updateUser(<span class="keyword">new</span> <span class="title class_">User</span>(<span class="number">1</span>,<span class="string">&quot;阿狗&quot;</span>,<span class="string">&quot;789456&quot;</span>));</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;ok&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//根据id删除用户</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/deleteUser&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">deleteUser</span><span class="params">()</span>&#123;</span><br><span class="line">        userMapper.deleteUser(<span class="number">5</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;ok&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="四、三类方法总结"><a href="#四、三类方法总结" class="headerlink" title="四、三类方法总结"></a>四、三类方法总结</h2><ul><li><p>回顾这3种方法：整合JDBC是最简便，最易上手的；整合MyBatis是条理最清晰的，更有逻辑感；整合Druid更适合开发者，但上手较为繁琐</p></li><li><p>整合JDBC和整合MyBatis类似，但又各有不同：</p><ul><li><p>JDBC的配置文件是——<code>application.yml</code>；MyBatis的配置文件是——<code>application.properties</code></p></li><li><p>JDBC中的controller层既写业务层的操作，也写对数据库的操作；MyBatis中只写业务层操作</p></li><li><p>JDBC在controller中用自带的JdbcTemplate模板；MyBatis在controller中用UserMapper接口方法</p></li><li><p>整合JDBC只需在配置文件中连接数据库，在controller中写方法就OK了</p></li><li><p>整合MyBatis需要分：</p><ul><li>实体类层</li><li>mapper接口层</li><li>mapper映射</li><li>controller层</li></ul><p>除此，还需要在<code>pom.xml文件</code>中配置资源过滤；在<code>application.properties文件</code>指定实体类路径和映射文件路径、</p></li></ul></li></ul><h2 id="五、MyBatis整合实验"><a href="#五、MyBatis整合实验" class="headerlink" title="五、MyBatis整合实验"></a>五、MyBatis整合实验</h2><blockquote><p>尝试把demo3的员工部门项目连接一个数据库失败！目前还需要学习的地方还有很多，这个尝试在后面一定要完成！</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Springboot </category>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Springboot </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何写一个网站——创建前端页面（一）</title>
      <link href="/2022/10/20/%E5%A6%82%E4%BD%95%E5%86%99%E4%B8%80%E4%B8%AA%E7%BD%91%E7%AB%99%E2%80%94%E2%80%94%E5%88%9B%E5%BB%BA%E5%89%8D%E7%AB%AF%E9%A1%B5%E9%9D%A2%EF%BC%88%E4%B8%80%EF%BC%89/"/>
      <url>/2022/10/20/%E5%A6%82%E4%BD%95%E5%86%99%E4%B8%80%E4%B8%AA%E7%BD%91%E7%AB%99%E2%80%94%E2%80%94%E5%88%9B%E5%BB%BA%E5%89%8D%E7%AB%AF%E9%A1%B5%E9%9D%A2%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h3 id="1-寻找合适的前端模板"><a href="#1-寻找合适的前端模板" class="headerlink" title="1. 寻找合适的前端模板"></a>1. 寻找合适的前端模板</h3><p>在<code>php中文网站</code>中找寻了一些模板，最终确定了一个<code>多用途的图文展示博客模板</code></p><h3 id="2-新建项目并加载模板"><a href="#2-新建项目并加载模板" class="headerlink" title="2. 新建项目并加载模板"></a>2. 新建项目并加载模板</h3><img src="https://s3.bmp.ovh/imgs/2022/10/20/6d310b429eef5977.png" style="zoom:33%;"><h3 id="3-提取页面公共部分"><a href="#3-提取页面公共部分" class="headerlink" title="3. 提取页面公共部分"></a>3. 提取页面公共部分</h3><blockquote><p>在<code>templates</code>下新建<code>commons</code>包，并建立<code>commons.html</code>页面，用来提取网页的<strong>头部导航栏和底部</strong>，除此之外还可以把页面的css资源和js资源等提取出来！避免在后续的页面中重复使用相同的代码，提高代码的维护性和简洁性！</p></blockquote><ul><li><p>导入Thymeleaf模板</p><ul><li><p>pom.xml中导入依赖</p></li><li><p>html页面中引入<code> xmlns:th=&quot;http://www.thymeleaf.org&quot;</code></p><p>开始的时候在HTML中引入这段代码一直都是灰色的，我以为是没有导入成功，其实只是因为在下面的页面中并没有使用到th的语法！！！只要引用了th标签之后，就不是灰色的了！</p></li></ul></li><li><p>commons.html页面：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--提取引入的css资源--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:fragment</span>=<span class="string">&quot;commons-css&quot;</span>&gt;</span></span><br><span class="line">............................................</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--提取引入的js等资源--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:fragment</span>=<span class="string">&quot;commons-jquery&quot;</span>&gt;</span></span><br><span class="line">............................................</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--提取头部导航栏--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">nav</span> <span class="attr">class</span>=<span class="string">&quot;navbar navbar-area navbar-expand-lg has-topbar nav-style-01 index-01&quot;</span> <span class="attr">th:fragment</span>=<span class="string">&quot;topbar&quot;</span>&gt;</span></span><br><span class="line">............................................</span><br><span class="line"><span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--提取底部栏--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">footer</span> <span class="attr">class</span>=<span class="string">&quot;footer-area index-01&quot;</span> <span class="attr">th:fragment</span>=<span class="string">&quot;footer&quot;</span>&gt;</span></span><br><span class="line">.............................................</span><br><span class="line"><span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>index.html页面：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--引入css/js资源--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:replace</span>=<span class="string">&quot;~&#123;commons/commons::commons-css&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:replace</span>=<span class="string">&quot;~&#123;commons/commons::commons-jquery&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--引入导航栏--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:replace</span>=<span class="string">&quot;~&#123;commons/commons::topbar&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--导航栏end--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--中间内容部分--&gt;</span></span><br><span class="line">...............................................</span><br><span class="line">...............................................</span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--引入底部栏--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:replace</span>=<span class="string">&quot;~&#123;commons/commons::footer&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--底部栏end--&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>出错：</p><ul><li><p>引入的css&#x2F;js资源不显示具体的样式</p><p>原因：在thymeleaf中，<code>href</code>前应该加上<code>th</code>标签，且引入的路径加上<code>@&#123;&#125;</code>，也不用带上<code>static</code>路径，eg: <code>&lt;link rel=&quot;stylesheet&quot; th:href=&quot;@&#123;css/bootstrap.min-v4.6.0.css&#125;&quot;&gt;</code></p></li><li><p>头部导航栏从commons中引入成功，但是样式没有加载成功</p><p>原因：在引入导航栏时用的是<code>th:include=&quot;&quot;</code>，当改为<code>th:replace=&quot;&quot;</code>后样式就正常显示了！</p><blockquote><p> <strong>th:insert&#x3D;”” ，th:replace &#x3D;””，th:include &#x3D;”” 的区别</strong></p><p>th:insert——插入片段，保留自身标记</p><p>th:replace ——插入片段，替换了自身标记</p><p>th:include ——插入片段的内容，去掉片段外层标记，同时保留自身标记</p><p>eg:</p><ul><li><p>原本的标记：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">footer</span> <span class="attr">th:fragment</span>=<span class="string">&quot;copy&quot;</span>&gt;</span></span><br><span class="line">  <span class="symbol">&amp;copy;</span> 2011 The Good Thymes Virtual Grocery</span><br><span class="line"><span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>用三个元素来分别引用：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">th:insert</span>=<span class="string">&quot;footer :: copy&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">th:replace</span>=<span class="string">&quot;footer :: copy&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">th:include</span>=<span class="string">&quot;footer :: copy&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>运行结果：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">footer</span>&gt;</span></span><br><span class="line">      <span class="symbol">&amp;copy;</span> 2011 The Good Thymes Virtual Grocery</span><br><span class="line">    <span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">footer</span>&gt;</span></span><br><span class="line">    <span class="symbol">&amp;copy;</span> 2011 The Good Thymes Virtual Grocery</span><br><span class="line">  <span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="symbol">&amp;copy;</span> 2011 The Good Thymes Virtual Grocery</span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul></blockquote></li></ul></li></ul><h3 id="4-初具雏形"><a href="#4-初具雏形" class="headerlink" title="4. 初具雏形"></a>4. 初具雏形</h3><blockquote><p> 完成了首页的初步版块和头部导航栏及底部导航栏！！！</p></blockquote><img src="https://s3.bmp.ovh/imgs/2022/10/20/f229c1dd1ffe6978.png" style="zoom: 25%;"><p>​    </p>]]></content>
      
      
      <categories>
          
          <category> Springboot </category>
          
          <category> Java </category>
          
          <category> Web </category>
          
          <category> Thymeleaf </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Springboot </tag>
            
            <tag> Java </tag>
            
            <tag> Web </tag>
            
            <tag> Thymeleaf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何写一个网站？</title>
      <link href="/2022/10/17/%E8%87%AA%E5%B7%B1%E5%A6%82%E4%BD%95%E5%86%99%E4%B8%80%E4%B8%AA%E7%BD%91%E7%AB%99%EF%BC%9F/"/>
      <url>/2022/10/17/%E8%87%AA%E5%B7%B1%E5%A6%82%E4%BD%95%E5%86%99%E4%B8%80%E4%B8%AA%E7%BD%91%E7%AB%99%EF%BC%9F/</url>
      
        <content type="html"><![CDATA[<h3 id="1-写一个网站的流程"><a href="#1-写一个网站的流程" class="headerlink" title="1. 写一个网站的流程"></a>1. 写一个网站的流程</h3><h4 id="1-1-前端搞定：页面长什么样子——需要哪些数据"><a href="#1-1-前端搞定：页面长什么样子——需要哪些数据" class="headerlink" title="1.1 前端搞定：页面长什么样子——需要哪些数据"></a>1.1 前端搞定：页面长什么样子——需要哪些数据</h4><ul><li><p>模板：别人写好的，自己拿过来改成自己需要的</p></li><li><p>框架：组件——自己动手拼接！  Bootstrap，Layui，semantic-ui</p><ul><li>栅格系统</li><li>导航栏</li><li>侧边栏</li><li>表单</li><li>index&#x2F;about&#x2F;blog&#x2F;post&#x2F;user</li></ul></li></ul><h4 id="1-2-设计数据库（难点！！！）"><a href="#1-2-设计数据库（难点！！！）" class="headerlink" title="1.2 设计数据库（难点！！！）"></a>1.2 设计数据库（难点！！！）</h4><h4 id="1-3-前端让它能够自动运行，独立化工程"><a href="#1-3-前端让它能够自动运行，独立化工程" class="headerlink" title="1.3 前端让它能够自动运行，独立化工程"></a>1.3 前端让它能够自动运行，独立化工程</h4><h4 id="1-4-数据接口如何对接：json，对象-all-in-one！"><a href="#1-4-数据接口如何对接：json，对象-all-in-one！" class="headerlink" title="1.4 数据接口如何对接：json，对象 all in one！"></a>1.4 数据接口如何对接：json，对象 all in one！</h4><h4 id="1-5-前后端联调测试！"><a href="#1-5-前后端联调测试！" class="headerlink" title="1.5 前后端联调测试！"></a>1.5 前后端联调测试！</h4><h3 id="2-IDEA中打开springboot项目"><a href="#2-IDEA中打开springboot项目" class="headerlink" title="2. IDEA中打开springboot项目"></a>2. IDEA中打开springboot项目</h3><p>最近在本地的IDEA软件中创建项目总是出错，所以都用spring的官网创建maven项目。当在网页<a href="https://start.spring.io/">Spring Initializr</a>中创建了springboot项目并下载解压之后，在idea中打开该项目还需要进行一定的的配置。</p><ul><li><p>设置maven配置文件的路径：File–&gt;Settings–&gt;Build,Excution,Development–&gt;Build Tools–&gt;Maven</p><img src="https://s3.bmp.ovh/imgs/2022/10/17/8b5a2deeb7b3f6db.png" style="zoom: 50%;"></li><li><p>重加载maven：点击菜单栏Help-&gt;Find Action，输入Maven projects；或者也可以直接后侧maven模块刷新按钮</p></li><li><p>选择本地的SDK版本：File–&gt;Project Structure–&gt;Project–&gt;Project SDK</p></li><li><p>若没有自动加载启动器，还需手动配置启动器</p><img src="https://s3.bmp.ovh/imgs/2022/10/17/40c34307ae173600.png" style="zoom: 33%;"></li><li><p>配置output路径：</p><img src="https://s3.bmp.ovh/imgs/2022/10/17/3c04491175bb9914.png" style="zoom:33%;"></li></ul>]]></content>
      
      
      <categories>
          
          <category> Springboot </category>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Springboot </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Springboot快速入门（七）——巩固知新（一）</title>
      <link href="/2022/10/05/Springboot%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%EF%BC%88%E4%B8%83%EF%BC%89%E2%80%94%E2%80%94%E5%B7%A9%E5%9B%BA%E7%9F%A5%E6%96%B0%EF%BC%88%E4%B8%80%EF%BC%89/"/>
      <url>/2022/10/05/Springboot%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%EF%BC%88%E4%B8%83%EF%BC%89%E2%80%94%E2%80%94%E5%B7%A9%E5%9B%BA%E7%9F%A5%E6%96%B0%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h3 id="1-Map集合、Collection中的集合与List集合的区别"><a href="#1-Map集合、Collection中的集合与List集合的区别" class="headerlink" title="1. Map集合、Collection中的集合与List集合的区别"></a>1. Map集合、Collection中的集合与List集合的区别</h3><p><code>private Map&lt;String,Object&gt; maps;</code></p><p><code>Map&lt;Integer, Department&gt; </code></p><p><code>Collection&lt;Department&gt;</code></p><p><code>private List&lt;Object&gt; list;</code></p><ul><li><p>Map是一个双列集合，存放形式为<strong>键值对（key-value)<strong>。元素是</strong>成对存在</strong>的(理解为夫妻)。每个元素由键与值两部分组成，通过键可以找对所对应的值，<strong>每个键只能对应一个值</strong>，且不能包含重复的键，值可以重复。</p><ul><li>HashMap</li><li>LinkedHashMap</li></ul></li><li><p>Collection中的集合，称为单列集合。元素是<strong>孤立存在</strong>的（理解为单身），向集合中存储元素采用一个个元素的方式存储。</p></li><li><p>List 接口是继承于 Collection接口并定义 一个允许重复项的有序集合。该接口不但能够对列表的一部分进行处理，还添加了面向位置的操作。</p><p><img src="https://img-blog.csdnimg.cn/img_convert/0cb41b7d632b212b032978fd73633d9a.png" alt="0cb41b7d632b212b032978fd73633d9a.png"></p></li></ul><h3 id="2-List＜T＞-、List＜-＞、List＜Object＞、List＜E＞、List＜U＞的区别"><a href="#2-List＜T＞-、List＜-＞、List＜Object＞、List＜E＞、List＜U＞的区别" class="headerlink" title="2. List＜T＞ 、List＜?＞、List＜Object＞、List＜E＞、List＜U＞的区别"></a>2. List＜T＞ 、List＜?＞、List＜Object＞、List＜E＞、List＜U＞的区别</h3><p>List&lt;T&gt;、List&lt;?&gt;、List&lt;Object&gt;这三者都可以容纳所有的对象，但使用的顺序应该是首选List&lt;T&gt;,次之List&lt;?&gt;,最后选择List&lt;Object&gt;</p><ul><li>List&lt;T&gt;表示的是List集合中的元素都为T类型，具体类型在运行期决定。可以进行诸如add、remove等操作，因为它的类型是固定的T类型，在编码期不需要进行任何的转型操作</li><li>List&lt;?&gt;表示的是任意类型。是只读类型的，不能进行增加、修改操作，但是却可以删除元素，比如执行remove、clear等方法。List&lt;?&gt;读取出的元素都是Object类型的，需要主动转型，所以它经常用于泛型方法的返回值</li><li>List&lt;Object&gt;表示List集合中的所有元素为Object类型，Object是所有类的父类，所以List&lt;Object&gt;也可以容纳所有的类类型</li></ul><p><strong>List&lt;E&gt; List&lt;T&gt; Map&lt;K, V&gt;</strong></p><p>E是Element首字母的缩写，E通常用来表示<strong>集合类型中的元素类型</strong>；</p><ul><li><p>例如List接口的定义：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">List</span>&lt;E&gt; <span class="keyword">extends</span> <span class="title class_">Collection</span>&lt;E&gt; </span><br></pre></td></tr></table></figure></li><li><p>K，V是Key, Value的首字符缩写，通常用来表示Map的键值类型</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">Map</span>&lt;K, V&gt;</span><br></pre></td></tr></table></figure></li><li><p>&lt;T&gt; T 表示“返回值”是一个泛型，传递什么类型，就返回什么类型</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> &lt;T&gt; T <span class="title function_">getListFirst</span><span class="params">(List&lt;T&gt; data)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(data == <span class="literal">null</span> || data.size() == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> data.get(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="3-AllArgsConstructor和-NoArgsConstructor"><a href="#3-AllArgsConstructor和-NoArgsConstructor" class="headerlink" title="3. @AllArgsConstructor和@NoArgsConstructor"></a>3. @AllArgsConstructor和@NoArgsConstructor</h3><ul><li><p><strong>lombok</strong></p><blockquote><p>在开发过程中，lombok的使用极大的简化了实体类的开发工作。在通常情况下我们需要手动去建立getter和setter方法，构造函数之类的，而lombok的作用就是能够在我们编译源码的时候自动帮我们生成这些方法，这些都是通过注解的方式：如：@builder, @NoArgsConstructor, @AllArgsConstructor, @Getter, @Setter, @data等。</p></blockquote></li><li><p><strong>@AllArgsContructor：</strong> 会生成一个包含所有变量的构造方法，默认生成的方法是 public 的（有参）</p></li><li><p><strong>@NoArgsConstructor ：</strong> 生成一个无参数的构造方法（无参）</p></li><li><p><strong>@RequiredArgsConstructor：</strong> 会生成一个包含常量，和标识了NotNull的变量的构造方法。生成的构造方法是私有的private。（可能带参数也可能不带参数）</p></li></ul><h3 id="4-Repository"><a href="#4-Repository" class="headerlink" title="4. @Repository"></a>4. @Repository</h3><ul><li><p>通过看源代码可以发现，<code>@Controller</code>、<code>@Service</code>还是<code>@Repository</code>全部都被<code>@Component</code>注解了。在Spring源码中，注解会一级一级向上递归搜索，搜索所有的注解信息，即被以上注解注解的类在Spring看来都会包含@Component注解。综上所述，本质上<code>@Controller</code>、<code>@Service</code>、<code>@Repository</code>、<code>@Component</code>本质都是<code>@Component</code>，<strong>即Spring容器中的一个组件</strong>。</p></li><li><p>添加这三个注解的主要目的就是为了逻辑分层</p><ul><li><strong>@Repository</strong>——对应<em>数据访问</em>层Bean</li><li><strong>@Service</strong>——<em>业务</em>Bean</li><li><strong>@Controller</strong>——控制层（<em>展示</em>层）Bean</li></ul></li><li><p>@Repository的功能是将数据访问层（Dao层）的类识别并标注为SpringBean，具体方式为直接在<strong>DAO类上标注</strong>即可，且只能标注在DAO类上。因为该注解的作用不只是将类识别为Bean，同时它还能将所标注的类中抛出的数据访问异常封装为 Spring 的数据访问异常类型。 Spring本身提供了一个丰富的并且是与具体的数据访问技术无关的数据访问异常结构，用于封装不同的持久层框架抛出的异常，使得异常独立于底层的框架。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//部门dao</span></span><br><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DepartmentDao</span> &#123;</span><br><span class="line">.........</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//员工dao</span></span><br><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">EmployeeDao</span> &#123;</span><br><span class="line">..........</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="5-配置Dao层"><a href="#5-配置Dao层" class="headerlink" title="5. 配置Dao层"></a>5. 配置Dao层</h3><h4 id="5-1-模拟数据库中的数据"><a href="#5-1-模拟数据库中的数据" class="headerlink" title="5.1 模拟数据库中的数据"></a>5.1 模拟数据库中的数据</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//模拟数据库中的数据</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> Map&lt;Integer, Department&gt; departments=<span class="literal">null</span>;</span><br><span class="line"><span class="keyword">static</span> &#123;</span><br><span class="line">    departments=<span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;Integer, Department&gt;();  <span class="comment">//创建一个部门表</span></span><br><span class="line">    departments.put(<span class="number">101</span>,<span class="keyword">new</span> <span class="title class_">Department</span>(<span class="number">101</span>,<span class="string">&quot;教学部&quot;</span>));</span><br><span class="line">    ..............................................</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//模拟数据库中的数据</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> Map&lt;Integer, Employee&gt; employees=<span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//员工有所属的部门</span></span><br><span class="line"><span class="meta">@Autowired(required = false)</span></span><br><span class="line"><span class="keyword">private</span> DepartmentDao departmentDao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> &#123;</span><br><span class="line">    employees=<span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;Integer, Employee&gt;();  <span class="comment">//创建一个部门表</span></span><br><span class="line">    employees.put(<span class="number">101</span>,<span class="keyword">new</span> <span class="title class_">Employee</span>(<span class="number">1001</span>,<span class="string">&quot;AA&quot;</span>,<span class="string">&quot;A123456789@qq.com&quot;</span>,<span class="number">1</span>,<span class="keyword">new</span> <span class="title class_">Department</span>(<span class="number">101</span>,<span class="string">&quot;教学部&quot;</span>)));</span><br><span class="line">    ...............................................</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="5-2-static用法"><a href="#5-2-static用法" class="headerlink" title="5.2 static用法"></a>5.2 <code>static</code>用法</h4><ul><li><p><strong>static关键字</strong>：</p><ul><li>在类中，用static声明的成员变量为<strong>静态成员变量</strong>，也成为<strong>类变量</strong>。类变量的生命周期和类相同，在整个应用程序执行期间都有效。</li><li>static修饰的成员变量和方法，<strong>从属于类</strong>；普通变量和方法从属于对象；静态方法不能调用非静态成员，编译会报错。</li><li>用途：方便在没有创建对象的情况下进行调用(方法&#x2F;变量)，被static关键字修饰的方法或者变量不需要依赖于对象来进行访问，只要类被加载了，就可以<strong>通过类名去进行访问</strong>。</li></ul></li><li><p><strong>static方法：</strong></p><ul><li>static方法也成为<strong>静态方法</strong>，由于静态方法不依赖于任何对象就可以直接访问，因此对于静态方法来说，是没有this的，因为不依附于任何对象，既然都没有对象，就谈不上this了。</li><li>并且由于此特性，在静态方法中不能访问类的非静态成员变量和非静态方法，因为非静态成员变量和非静态方法都必须依赖于具体的对象才能被调用。但是在非静态成员方法中是可以访问静态成员方法和静态成员变量。</li></ul></li><li><p><strong>static变量：</strong></p><ul><li>称为静态变量。静态变量<strong>被所有对象共享</strong>，在内存中只有一个副本，在类初次加载的时候才会初始化。</li><li>非静态变量是<strong>对象所拥有的</strong>，在创建对象的时候被初始化，存在多个副本，各个对象拥有的副本互不影响。</li></ul></li><li><p><strong>static块：</strong></p><p>静态初始化块，用于类的初始化操作，其作用就是提升程序性能。很多时候会将一些只需要进行一次的初始化操作都放在static代码块中进行。静态初始化块可以置于类中的任何地方，类中可以有多个静态初始化块。在类初次被加载时，会按照静态初始化块的顺序来执行每个块，并且只会执行一次。</p><p>例如：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Date birthDate;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Person</span><span class="params">(Date birthDate)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.birthDate = birthDate;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">isBornBoomer</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">Date</span> <span class="variable">startDate</span> <span class="operator">=</span> Date.valueOf(<span class="string">&quot;1946&quot;</span>);</span><br><span class="line">        <span class="type">Date</span> <span class="variable">endDate</span> <span class="operator">=</span> Date.valueOf(<span class="string">&quot;1964&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> birthDate.compareTo(startDate)&gt;=<span class="number">0</span> &amp;&amp; birthDate.compareTo(endDate) &lt; <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>isBornBoomer是用来这个人是否是1946-1964年出生的，而每次isBornBoomer被调用的时候，都会生成startDate和birthDate两个对象，造成了空间浪费，如果改成这样效率会更好：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Date birthDate;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Date startDate,endDate;</span><br><span class="line">    <span class="keyword">static</span>&#123;</span><br><span class="line">        startDate = Date.valueOf(<span class="string">&quot;1946&quot;</span>);</span><br><span class="line">        endDate = Date.valueOf(<span class="string">&quot;1964&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Person</span><span class="params">(Date birthDate)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.birthDate = birthDate;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">boolean</span> <span class="title function_">isBornBoomer</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> birthDate.compareTo(startDate)&gt;=<span class="number">0</span> &amp;&amp; birthDate.compareTo(endDate) &lt; <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> &#123;</span><br><span class="line">       departments=<span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;Integer, Department&gt;();  <span class="comment">//创建一个部门表</span></span><br><span class="line">       departments.put(<span class="number">101</span>,<span class="keyword">new</span> <span class="title class_">Department</span>(<span class="number">101</span>,<span class="string">&quot;教学部&quot;</span>));</span><br><span class="line">       departments.put(<span class="number">102</span>,<span class="keyword">new</span> <span class="title class_">Department</span>(<span class="number">102</span>,<span class="string">&quot;市场部&quot;</span>));</span><br><span class="line">       departments.put(<span class="number">103</span>,<span class="keyword">new</span> <span class="title class_">Department</span>(<span class="number">103</span>,<span class="string">&quot;教研部&quot;</span>));</span><br><span class="line">       departments.put(<span class="number">104</span>,<span class="keyword">new</span> <span class="title class_">Department</span>(<span class="number">104</span>,<span class="string">&quot;运营部&quot;</span>));</span><br><span class="line">       departments.put(<span class="number">105</span>,<span class="keyword">new</span> <span class="title class_">Department</span>(<span class="number">105</span>,<span class="string">&quot;后勤部&quot;</span>));</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="5-3-哈希表"><a href="#5-3-哈希表" class="headerlink" title="5.3 哈希表"></a>5.3 哈希表</h4><p><code> departments = new HashMap&lt;Integer, Department&gt;();   // 创建一个部门</code></p><p><code> employees = new HashMap&lt;&gt;();   // 创建一个部</code></p><ul><li><p><strong>什么是哈希表（Hash Table）？</strong></p><ul><li><p><strong>哈希方法</strong></p><p>在对象的存储<strong>位置</strong>和对象的关键<strong>属性</strong>（k）之间建立一个特定的对应关系（f），使每个对象与一个唯一的存储位置相对应。在查找时，只要根据待查对象的关键属性 k 计算f(k)的值即可。如果此对象在集合中，则必定在存储位置 f(k)上，因此不需要与集合中的其他元素进行比较，一次存取便能得到所需要的记录。</p></li><li><p>按照哈希方法思想建立的表为哈希表！</p><p>数组利于元素的查找，链表利于元素的插入和删除，而哈希表既能快速地查找又能高效地插入删除元素。哈希表是由一块<strong>地址连续的数组空间</strong>构成的，其中每个数组都是一个链表，哈希表可以被认为就是<strong>链表的数组</strong>，示意图如下：</p></li></ul><img src="https://s3.bmp.ovh/imgs/2022/10/12/706609496e8967b6.png" style="zoom:67%;"><ul><li>哈希表是一种<strong>数据结构</strong>，哈希函数是支撑哈希表的一类函数</li></ul></li><li><p>什么是Map和HashMap？</p><ul><li><p><strong>Map</strong>是映射、地图的意思，在java中Map表示一种把 k <strong>映射</strong>到 v 的数据类型</p></li><li><p><strong>Map&lt;K, V&gt;<strong>是一个以 <strong>键值(Key)-数值(Value)</strong> 对应形式存储数据的接口。 在数组中我们是通过数组下标来对其内容索引的，而在</strong>Map</strong>中我们通过对象来对对象进行索引，用来索引的对象叫做<strong>key</strong>，其对应的对象叫做<strong>value</strong>。</p></li><li><p><strong>HashMap</strong>是Map&lt;K, V&gt;的实现类。(Hashtable也是Map&lt;K, V&gt;的实现类) <strong>HashMap</strong>存储数据采用哈希表结构 ，元素的存取顺序不能保证一致。但键值是唯一、不重复的。</p></li><li><p><strong>HashMap</strong> 的 key 与 value 类型可以相同也可以不同，可以是字符串（String）类型的 key 和 value，也可以是整型（Integer）的 key 和字符串（String）类型的 value。</p><img src="https://s3.bmp.ovh/imgs/2022/10/05/a5d785054d62dd50.png" style="zoom: 67%;"></li></ul></li><li><p>HashMap的用法</p><blockquote><p>参考链接：<a href="https://www.runoob.com/java/java-hashmap.html">Java HashMap | 菜鸟教程 (runoob.com)</a></p></blockquote><ul><li><p><strong>添加元素</strong></p><p><strong>put()方法</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引入 HashMap 类      </span></span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RunoobTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 创建 HashMap 对象 Sites</span></span><br><span class="line">        HashMap&lt;Integer, String&gt; Sites = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;Integer, String&gt;();</span><br><span class="line">        <span class="comment">// 添加键值对</span></span><br><span class="line">        Sites.put(<span class="number">1</span>, <span class="string">&quot;Google&quot;</span>);</span><br><span class="line">        Sites.put(<span class="number">2</span>, <span class="string">&quot;Runoob&quot;</span>);</span><br><span class="line">        System.out.println(Sites);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="number">1</span>=Google, <span class="number">2</span>=Runoob&#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>创建字符串（String）类型的key和value</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引入 HashMap 类      </span></span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RunoobTest</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 创建 HashMap 对象 Sites</span></span><br><span class="line">        HashMap&lt;String, String&gt; Sites = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;String, String&gt;();</span><br><span class="line">        <span class="comment">// 添加键值对</span></span><br><span class="line">        Sites.put(<span class="string">&quot;one&quot;</span>, <span class="string">&quot;Google&quot;</span>);</span><br><span class="line">        Sites.put(<span class="string">&quot;two&quot;</span>, <span class="string">&quot;Runoob&quot;</span>);</span><br><span class="line">        &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;one=Google, two=Runoob&#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>访问元素</strong></p><p><strong>get(key)方法</strong>来获取 key 对应的 value:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 添加键值对</span></span><br><span class="line">      Sites.put(<span class="number">1</span>, <span class="string">&quot;Google&quot;</span>);</span><br><span class="line">      Sites.put(<span class="number">2</span>, <span class="string">&quot;Runoob&quot;</span>);</span><br><span class="line">      Sites.put(<span class="number">3</span>, <span class="string">&quot;Taobao&quot;</span>); </span><br><span class="line">System.out.println(Sites.get(<span class="number">3</span>));</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Taobao</span><br></pre></td></tr></table></figure></li><li><p><strong>删除元素</strong></p><p><strong>remove(key)方法</strong>来删除 key 对应的键值对(key-value)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 添加键值对</span></span><br><span class="line">      Sites.put(<span class="number">1</span>, <span class="string">&quot;Google&quot;</span>);</span><br><span class="line">      Sites.put(<span class="number">2</span>, <span class="string">&quot;Runoob&quot;</span>);</span><br><span class="line">      Sites.put(<span class="number">3</span>, <span class="string">&quot;Taobao&quot;</span>);</span><br><span class="line">      Sites.put(<span class="number">4</span>, <span class="string">&quot;Zhihu&quot;</span>);</span><br><span class="line">      Sites.remove(<span class="number">4</span>);</span><br><span class="line">      System.out.println(Sites);</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="number">1</span>=Google, <span class="number">2</span>=Runoob, <span class="number">3</span>=Taobao&#125;</span><br></pre></td></tr></table></figure><p>删除所有键值对(key-value)可以使用 <strong>clear方法</strong>：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 添加键值对</span></span><br><span class="line">      Sites.put(<span class="number">1</span>, <span class="string">&quot;Google&quot;</span>);</span><br><span class="line">      Sites.put(<span class="number">2</span>, <span class="string">&quot;Runoob&quot;</span>);</span><br><span class="line">      Sites.put(<span class="number">3</span>, <span class="string">&quot;Taobao&quot;</span>);</span><br><span class="line">      Sites.put(<span class="number">4</span>, <span class="string">&quot;Zhihu&quot;</span>);</span><br><span class="line">      Sites.clear();</span><br><span class="line">      System.out.println(Sites);</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>计算大小</strong></p><p><strong>size()方法</strong>，计算 HashMap 中的元素数量</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 添加键值对</span></span><br><span class="line">      Sites.put(<span class="number">1</span>, <span class="string">&quot;Google&quot;</span>);</span><br><span class="line">      Sites.put(<span class="number">2</span>, <span class="string">&quot;Runoob&quot;</span>);</span><br><span class="line">      Sites.put(<span class="number">3</span>, <span class="string">&quot;Taobao&quot;</span>);</span><br><span class="line">      Sites.put(<span class="number">4</span>, <span class="string">&quot;Zhihu&quot;</span>);</span><br><span class="line">      System.out.println(Sites.size());</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">4</span></span><br></pre></td></tr></table></figure></li><li><p><strong>迭代HashMap</strong></p><p> <strong>for-each</strong> 来迭代 HashMap 中的元素</p><p>如果你只想获取 key，可以使用 <strong>keySet()</strong> 方法，然后可以通过 <strong>get(key)</strong> 获取对应的 value，如果你只想获取 value，可以使用 <strong>values()</strong> 方法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 添加键值对</span></span><br><span class="line">      Sites.put(<span class="number">1</span>, <span class="string">&quot;Google&quot;</span>);</span><br><span class="line">      Sites.put(<span class="number">2</span>, <span class="string">&quot;Runoob&quot;</span>);</span><br><span class="line">      Sites.put(<span class="number">3</span>, <span class="string">&quot;Taobao&quot;</span>);</span><br><span class="line">      Sites.put(<span class="number">4</span>, <span class="string">&quot;Zhihu&quot;</span>);</span><br><span class="line">      <span class="comment">// 输出 key 和 value</span></span><br><span class="line">      <span class="keyword">for</span> (Integer i : Sites.keySet()) &#123;</span><br><span class="line">          System.out.println(<span class="string">&quot;key: &quot;</span> + i + <span class="string">&quot; value: &quot;</span> + Sites.get(i));</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">// 返回所有 value 值</span></span><br><span class="line">      <span class="keyword">for</span>(String value: Sites.values()) &#123;</span><br><span class="line">        <span class="comment">// 输出每一个value</span></span><br><span class="line">        System.out.print(value + <span class="string">&quot;, &quot;</span>);</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">key: <span class="number">1</span> value: Google</span><br><span class="line">key: <span class="number">2</span> value: Runoob</span><br><span class="line">key: <span class="number">3</span> value: Taobao</span><br><span class="line">key: <span class="number">4</span> value: Zhihu</span><br><span class="line">Google, Runoob, Taobao, Zhihu,</span><br></pre></td></tr></table></figure></li></ul></li></ul><h3 id="6-ViewControllerRegistry和addViewController（首页实现）"><a href="#6-ViewControllerRegistry和addViewController（首页实现）" class="headerlink" title="6. ViewControllerRegistry和addViewController（首页实现）"></a>6. ViewControllerRegistry和addViewController（首页实现）</h3><p><strong>ViewControllerRegistry</strong> 创建简单的<strong>路由</strong>。</p><p>在项目开发过程中，经常会涉及页面跳转问题，而且这个页面跳转没有任何业务逻辑过程，只是单纯的路由过程 ( 点击一个按钮跳转到一个页面 ) 。Spring MVC 中提供了一个方法，可以把类似代码统一管理，减少类似代码的书写（根据项目要求，或者代码规范，不一定非要统一管理页面跳转，有时会把相同业务逻辑的代码放在一个类中）。</p><p>常规写法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/toview&quot;)</span></span><br><span class="line"> <span class="keyword">public</span> String <span class="title function_">view</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;view&quot;</span>;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p> 在继承<code>WebMvcConfigurerAdapter</code>的<code>DemoMVCConfig</code>类中重载<code>addViewControllers</code>:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addViewControllers</span><span class="params">(ViewControllerRegistry registry)</span> &#123;</span><br><span class="line">    registry.addViewController(<span class="string">&quot;/toview&quot;</span>).setViewName(<span class="string">&quot;/view&quot;</span>);</span><br><span class="line">    <span class="comment">//添加更多</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>addViewController</strong></p><p>当项目中涉及大量的页面跳转，我们可以使用addViewControllers方法实现<strong>无业务逻辑跳转，从而减少控制器代码的编写。</strong>addViewControllers方法可以实现将<strong>一个请求直接映射为视图</strong>，不需要编写控制器来实现，从而简化了页面跳转。</p><h3 id="7-页面国际化"><a href="#7-页面国际化" class="headerlink" title="7. 页面国际化"></a>7. 页面国际化</h3><p><code>public Locale resolveLocale(HttpServletRequest request) &#123;。。。&#125;</code></p><h4 id="7-1-Locale"><a href="#7-1-Locale" class="headerlink" title="7.1 Locale"></a>7.1 Locale</h4><p><code> Locale locale = Locale.getDefault(); // 如果没有获取到就使用系统默认的,获得此Java虚拟机当前线程默认的语言环境值</code></p><p><strong>Locale</strong>对象表示了一个特定的地理，政治或文化区域。需要使用到<strong>Locale</strong>执行其任务的操作称为<strong>区域设置敏感</strong>，并使用<strong>Locale</strong>为用户定制信息。</p><p>获取当前Java虚拟机线程默认的国家和语言信息</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">country</span> <span class="operator">=</span> defaultLocale.getCountry();<span class="comment">//返回国家地区代码</span></span><br><span class="line"></span><br><span class="line"><span class="type">String</span> <span class="variable">language</span> <span class="operator">=</span> defaultLocale.getLanguage();<span class="comment">//返回国家的语言</span></span><br><span class="line"></span><br><span class="line"><span class="type">String</span> <span class="variable">displayCountry</span> <span class="operator">=</span> defaultLocale.getDisplayCountry();<span class="comment">//返回适合向用户显示的国家信息</span></span><br><span class="line"></span><br><span class="line"><span class="type">String</span> <span class="variable">displayLanaguage</span> <span class="operator">=</span> defaultLocale.getDisplayLanaguage();<span class="comment">//返回适合向用户展示的语言信息</span></span><br><span class="line"></span><br><span class="line"><span class="type">String</span> <span class="variable">displayName</span> <span class="operator">=</span> defaultLocale.getDisplayName();<span class="comment">//返回适合向用户展示的语言环境名</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>若当前Java虚拟机线程所处的操作系统的区域语言设置为“中文（简体，中国）”，则上边的运行结果将会是：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">CN</span><br><span class="line"></span><br><span class="line">zh</span><br><span class="line"></span><br><span class="line">中国</span><br><span class="line"></span><br><span class="line">中文</span><br><span class="line"></span><br><span class="line">中文（中国）</span><br></pre></td></tr></table></figure><ul><li><p><strong>使用ResourceBundle读取国际化资源文件</strong></p><p>ResourceBundle资源包包含特定语言环境的对象。使用其可以加载并读取语言环境资源</p><ul><li>轻松的本地化或者翻译成不同的语言</li><li>一次处理多个语言环境</li><li>以后可以轻松的进行修改，一遍支持更多的语言环境</li></ul></li></ul><h4 id="7-2-HttpServletRequest-和HttpServletResponse"><a href="#7-2-HttpServletRequest-和HttpServletResponse" class="headerlink" title="7.2 HttpServletRequest 和HttpServletResponse"></a>7.2 HttpServletRequest 和HttpServletResponse</h4><p>Servlet 处理 HTTP 请求的流程如下：</p><p><img src="https://s3.bmp.ovh/imgs/2022/10/16/d59b962a33f7b4c5.png"></p><blockquote><ol><li>Servlet 容器接收到来自客户端的 HTTP 请求后，容器会针对该请求分别创建一个 HttpServletRequest 对象和 HttpServletReponse 对象。</li><li>容器将 HttpServletRequest 对象和 HttpServletReponse 对象以参数的形式传入 service() 方法内，并调用该方法。</li><li>在 service() 方法中 Servlet 通过 HttpServletRequest 对象获取客户端信息以及请求的相关信息。</li><li>对 HTTP 请求进行处理。</li><li>请求处理完成后，将响应信息封装到 HttpServletReponse 对象中。</li><li>Servlet 容器将响应信息返回给客户端。</li><li>当 Servlet 容器将响应信息返回给客户端后，HttpServletRequest 对象和 HttpServletReponse 对象被销毁。</li></ol></blockquote><p>通过以上流程可以看出， HttpServletRequest 和 HttpServletReponse 是 Servlet 处理 HTTP 请求流程中最重要的两个对象。<strong>HttpServletRequest 对象用于封装 HTTP 请求信息，HttpServletReponse 对象用于封装 HTTP 响应信息。</strong></p><h4 id="7-3-request-getParameter-“l”"><a href="#7-3-request-getParameter-“l”" class="headerlink" title="7.3 request.getParameter(“l”);"></a>7.3 request.getParameter(“l”);</h4><h4 id="7-4-StringUtils"><a href="#7-4-StringUtils" class="headerlink" title="7.4 StringUtils"></a>7.4 StringUtils</h4><h3 id="8-什么时候用setXX-，什么时候用getXX-？什么时候用-RequestMapping-，什么时候用-PostMapping-，什么时候用-GetMapping-？"><a href="#8-什么时候用setXX-，什么时候用getXX-？什么时候用-RequestMapping-，什么时候用-PostMapping-，什么时候用-GetMapping-？" class="headerlink" title="8.什么时候用setXX()，什么时候用getXX()？什么时候用@RequestMapping()，什么时候用@PostMapping()，什么时候用@GetMapping()？"></a>8.什么时候用setXX()，什么时候用getXX()？什么时候用@RequestMapping()，什么时候用@PostMapping()，什么时候用@GetMapping()？</h3><h3 id="9-Model-model"><a href="#9-Model-model" class="headerlink" title="9. Model model"></a>9. Model model</h3><h3 id="10-HttpSession"><a href="#10-HttpSession" class="headerlink" title="10. HttpSession"></a>10. HttpSession</h3><p><code> session.invalidate();</code></p><h3 id="11-request-getRequestDispatcher-“-x2F-index-html”-forward-request-response"><a href="#11-request-getRequestDispatcher-“-x2F-index-html”-forward-request-response" class="headerlink" title="11.request.getRequestDispatcher(“&#x2F;index.html”).forward(request,response);"></a>11.request.getRequestDispatcher(“&#x2F;index.html”).forward(request,response);</h3>]]></content>
      
      
      <categories>
          
          <category> Springboot </category>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Springboot </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Springboot快速入门（六）——Web开发：增删改查员工</title>
      <link href="/2022/09/30/Springboot%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%EF%BC%88%E5%85%AD%EF%BC%89%E2%80%94%E2%80%94Web%E5%BC%80%E5%8F%91%EF%BC%9A%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5/"/>
      <url>/2022/09/30/Springboot%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%EF%BC%88%E5%85%AD%EF%BC%89%E2%80%94%E2%80%94Web%E5%BC%80%E5%8F%91%EF%BC%9A%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5/</url>
      
        <content type="html"><![CDATA[<h2 id="1-员工列表展示（查）"><a href="#1-员工列表展示（查）" class="headerlink" title="1. 员工列表展示（查）"></a>1. 员工列表展示（查）</h2><blockquote><p>界面的导航栏和侧边栏都是公共界面，所以可以一起提取出来做成一个commons页面</p></blockquote><blockquote><p> 抽取公共片段 th:fragment 定义模板名</p><p> 引入公共片段 th:insert 插入模板名</p></blockquote><h3 id="1-1-员工列表的跳转"><a href="#1-1-员工列表的跳转" class="headerlink" title="1.1 员工列表的跳转"></a>1.1 员工列表的跳转</h3><ul><li><p>将<code>list.html</code>文件放到emp文件夹下</p><p><img src="https://img-blog.csdnimg.cn/bb04c572b3974cc790cde118b196c454.png#pic_center" alt="在这里插入图片描述"></p></li><li><p>编写Controller</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">EmployeeController</span> &#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    EmployeeDao employeeDao;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询所有员工，返回列表页面</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> model</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/emps&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">list</span><span class="params">(Model model)</span>&#123;</span><br><span class="line">        Collection&lt;Employee&gt; employees = employeeDao.getAll();</span><br><span class="line">        <span class="comment">// 结果返回前端</span></span><br><span class="line">        model.addAttribute(<span class="string">&quot;emps&quot;</span>,employees);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;emp/list&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="1-2-提取公共页面并插入"><a href="#1-2-提取公共页面并插入" class="headerlink" title="1.2 提取公共页面并插入"></a>1.2 提取公共页面并插入</h3><ul><li><p><code>templates</code>目录下新建一个<code>commons</code>包，其中新建<code>commons.html</code>用来放置公共页面代码</p></li><li><p>把<code>dashboard.html</code>和<code>list.html</code>中顶部导航栏和侧边栏的代码放入<code>commons.html</code>页面；  </p></li><li><p>并删除<code>dashboard.html</code>和<code>list.html</code>中的导航栏和侧边栏代码</p></li><li><p>分别在<code>dashboard.html</code>和<code>list.html</code>删除的部分插入提取出来的公共部分<strong>topbar</strong>和<strong>sidebar</strong></p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--顶部导航栏，利用th:fragment提取出来，命名为topbar--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">nav</span> <span class="attr">class</span>=<span class="string">&quot;navbar navbar-dark sticky-top bg-dark flex-md-nowrap p-0&quot;</span> <span class="attr">th:fragment</span>=<span class="string">&quot;topbar&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;navbar-brand col-sm-3 col-md-2 mr-0&quot;</span> <span class="attr">href</span>=<span class="string">&quot;http://getbootstrap.com/docs/4.0/examples/dashboard/#&quot;</span>&gt;</span>[[$&#123;session.loginUser&#125;]]<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    ·························································</span><br><span class="line">    ·························································</span><br><span class="line"><span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">&lt;!--侧边栏，利用th:fragment提取出来，命名为sidebar--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">nav</span> <span class="attr">class</span>=<span class="string">&quot;col-md-2 d-none d-md-block bg-light sidebar&quot;</span> <span class="attr">th:fragment</span>=<span class="string">&quot;sidebar&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;sidebar-sticky&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;nav flex-column&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;nav-item&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;nav-link active&quot;</span> <span class="attr">href</span>=<span class="string">&quot;http://getbootstrap.com/docs/4.0/examples/dashboard/#&quot;</span>&gt;</span></span><br><span class="line">                    ·············································</span><br><span class="line">                    ·············································</span><br><span class="line">                    首页 <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;sr-only&quot;</span>&gt;</span>(current)<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   ·········································</span><br><span class="line">            ············································</span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;nav-item&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;nav-link&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/emps&#125;&quot;</span>&gt;</span></span><br><span class="line">                    ··············································</span><br><span class="line">                    ··············································</span><br><span class="line">                    员工管理</span><br><span class="line">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span> </span><br><span class="line">            </span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--导航栏--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:replace</span>=<span class="string">&quot;~&#123;commons/commons::topbar&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container-fluid&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--侧边栏--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:replace</span>=<span class="string">&quot;~&#123;commons/commons::sidebar&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                ·············································</span><br><span class="line">                ·············································</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="1-3-高亮"><a href="#1-3-高亮" class="headerlink" title="1.3 高亮"></a>1.3 高亮</h3><blockquote><p>页面中，使高亮的代码是<code>class=&quot;nav-link active&quot;</code>属性</p></blockquote><ul><li><p><strong>dashboard.html</strong>页面</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--侧边栏--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:replace</span>=<span class="string">&quot;~&#123;commons/commons::sidebar(active=&#x27;main.html&#x27;)&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><strong>list.html</strong>页面</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--侧边栏--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:replace</span>=<span class="string">&quot;~&#123;commons/commons::siderbar(active=&#x27;list.html&#x27;)&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><strong>commons.html</strong>页面，利用三元运算符判断决定是否高亮</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:class</span>=<span class="string">&quot;$&#123;active==&#x27;main.html&#x27;?&#x27;nav-link active&#x27;:&#x27;nav-link&#x27;&#125;&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/index.html&#125;&quot;</span>&gt;</span>  首页</span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">th:class</span>=<span class="string">&quot;$&#123;active==&#x27;list.html&#x27;?&#x27;nav-link active&#x27;:&#x27;nav-link&#x27;&#125;&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/emps&#125;&quot;</span>&gt;</span> 员工管理</span><br></pre></td></tr></table></figure></li></ul><h3 id="1-4-显示自己的数据值并添加两个按钮"><a href="#1-4-显示自己的数据值并添加两个按钮" class="headerlink" title="1.4 显示自己的数据值并添加两个按钮"></a>1.4 显示自己的数据值并添加两个按钮</h3><ul><li><p>修改<strong>list.html</strong>页面，显示自己的数据值</p></li><li><p>修改性别和date的显示，并添加<strong>编辑</strong>和<strong>删除</strong>两个标签</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>id<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>lastName<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>email<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>gender<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>department<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>birth<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>操作<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--/*@thymesVar id=&quot;emps&quot; type=&quot;templates&quot;*/--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span> <span class="attr">th:each</span>=<span class="string">&quot;emp:$&#123;emps&#125;&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--&lt;td th:text=&quot;$&#123;emp.getId()&#125;&quot;&gt;&lt;/td&gt;--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>[[$&#123;emp.getId()&#125;]]<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>[[$&#123;emp.getLastName()&#125;]]<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>[[$&#123;emp.getEmail()&#125;]]<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>[[$&#123;emp.getGender()==0?&#x27;女&#x27;:&#x27;男&#x27;&#125;]]<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>[[$&#123;emp.department.getDepartmentName()&#125;]]<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>[[$&#123;emp.getBirth()&#125;]]<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-sm btn-primary&quot;</span>&gt;</span>编辑<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-sm btn-danger&quot;</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="1-5-效果图"><a href="#1-5-效果图" class="headerlink" title="1.5 效果图"></a>1.5 效果图</h3><p><img src="https://s3.bmp.ovh/imgs/2022/09/23/eff5ad4706d2f8ab.png"></p><h2 id="2-增加员工"><a href="#2-增加员工" class="headerlink" title="2. 增加员工"></a>2. 增加员工</h2><h3 id="2-1-修改前端界面"><a href="#2-1-修改前端界面" class="headerlink" title="2.1 修改前端界面"></a>2.1 修改前端界面</h3><h4 id="2-1-1-list-html页面"><a href="#2-1-1-list-html页面" class="headerlink" title="2.1.1 list.html页面"></a>2.1.1 list.html页面</h4><blockquote><p> 新增添加员工按钮，点击该按钮时发起一个请求<code>/add</code></p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">  <span class="comment">&lt;!--添加员工--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-sm btn-success&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/add&#125;&quot;</span>&gt;</span>添加员工<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2-1-2-add-html页面"><a href="#2-1-2-add-html页面" class="headerlink" title="2.1.2 add.html页面"></a>2.1.2 add.html页面</h4><ul><li><p>复制list.html页面，粘贴到<code>templates/emp</code>下</p></li><li><p>留下头部、导航栏、侧边栏，只把body中的main部分删除</p></li><li><p>bootstrap官网文档 ：<a href="https://v4.bootcss.com/docs/4.0/components/forms/">https://v4.bootcss.com/docs/4.0/components/forms/</a> 可以去里面找自己喜欢的样式，放到body的侧边栏下</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span>&gt;</span>LastName<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;quary&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span>&gt;</span>Email<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;email&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span></span></span><br><span class="line"><span class="tag">               <span class="attr">placeholder</span>=<span class="string">&quot;1524368@qq.com&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span>&gt;</span>Gender<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-check form-check-inline&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">&quot;form-check-input&quot;</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span></span></span><br><span class="line"><span class="tag">                   <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">&quot;form-check-label&quot;</span>&gt;</span>男<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-check form-check-inline&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">&quot;form-check-input&quot;</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span></span></span><br><span class="line"><span class="tag">                   <span class="attr">value</span>=<span class="string">&quot;0&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">&quot;form-check-label&quot;</span>&gt;</span>女<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span>&gt;</span>department<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">select</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span>&gt;</span>1<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span>&gt;</span>2<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span>&gt;</span>3<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span>&gt;</span>4<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span>&gt;</span>5<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span>&gt;</span>Birth<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;quary&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary&quot;</span>&gt;</span>添加<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span>  </span><br></pre></td></tr></table></figure></li><li><p>修改页面form表单提交地址和方式</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">th:action</span>=<span class="string">&quot;@&#123;/add&#125;&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>给标签添加<code>name</code>属性</p></li><li><p>循环遍历<code>department</code>，特别注意，因部门在前端传入的参数是部门id，所以部门标签处的name属性应为<code>department.id</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">main</span> <span class="attr">role</span>=<span class="string">&quot;main&quot;</span> <span class="attr">class</span>=<span class="string">&quot;col-md-9 ml-sm-auto col-lg-10 pt-3 px-4&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--    添加成员        --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">th:action</span>=<span class="string">&quot;@&#123;/add&#125;&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span>&gt;</span>LastName<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;lastName&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;quary&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span>&gt;</span>Email<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;email&quot;</span> <span class="attr">name</span>=<span class="string">&quot;email&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span></span></span><br><span class="line"><span class="tag">                   <span class="attr">placeholder</span>=<span class="string">&quot;15243685@qq.com&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span>&gt;</span>Gender<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-check form-check-inline&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">&quot;form-check-input&quot;</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span></span></span><br><span class="line"><span class="tag">                       <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">&quot;form-check-label&quot;</span>&gt;</span>男<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-check form-check-inline&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">&quot;form-check-input&quot;</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span></span></span><br><span class="line"><span class="tag">                       <span class="attr">value</span>=<span class="string">&quot;0&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">&quot;form-check-label&quot;</span>&gt;</span>女<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span>&gt;</span>department<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--注意这里的name是department.id，因为传入的参数为id--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">select</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">name</span>=<span class="string">&quot;department.id&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span> <span class="attr">th:each</span>=<span class="string">&quot;department:$&#123;departments&#125;&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;department.getDepartmentName()&#125;&quot;</span> <span class="attr">th:value</span>=<span class="string">&quot;$&#123;department.getId()&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span>&gt;</span>Birth<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;birth&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;birth:yyyy/MM/dd&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary&quot;</span>&gt;</span>添加<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">main</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="2-2-修改后端"><a href="#2-2-修改后端" class="headerlink" title="2.2 修改后端"></a>2.2 修改后端</h3><h4 id="EmployeeController-java文件"><a href="#EmployeeController-java文件" class="headerlink" title="EmployeeController.java文件"></a>EmployeeController.java文件</h4><ul><li><p><strong>add方法</strong></p><p>处理<code>添加员工</code>的请求，通过<code>get</code>方式提交请求，在<code>EmployeeController</code>中添加一个<code>add</code>方法用来处理<code>list</code>页面点击提交按钮的操作，返回到<code>add.html</code>添加员工页面。</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Autowired(required = false)</span></span><br><span class="line">DepartmentDao departmentDao;</span><br><span class="line">  </span><br><span class="line"><span class="meta">@GetMapping(&quot;/add&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">add</span><span class="params">(Model model)</span>&#123;</span><br><span class="line">     <span class="comment">//查出所有的部门信息</span></span><br><span class="line">    Collection&lt;Department&gt; departments = departmentDao.getDepartments();</span><br><span class="line">    model.addAttribute(<span class="string">&quot;departments&quot;</span>,departments);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;emp/add&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>addEmp方法</strong></p><p>处理点击<code>添加按钮</code>的操作</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PostMapping(&quot;/add&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">addEmp</span><span class="params">(Employee employee)</span> &#123;</span><br><span class="line">    System.out.println(employee);</span><br><span class="line">    <span class="comment">// 添加员工</span></span><br><span class="line">    employeeDao.save(employee);   <span class="comment">//调用底层业务方法保存员工信息</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;redirect:/emps&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="2-3-结果图"><a href="#2-3-结果图" class="headerlink" title="2.3 结果图"></a>2.3 结果图</h3><img src="https://s3.bmp.ovh/imgs/2022/09/27/dfe619f82e9f078a.png" style="zoom: 50%;"><img src="https://s3.bmp.ovh/imgs/2022/09/27/f6d30df7e0550726.png" style="zoom:50%;"><h2 id="3-修改员工信息"><a href="#3-修改员工信息" class="headerlink" title="3 修改员工信息"></a>3 修改员工信息</h2><h3 id="3-1-修改前端界面"><a href="#3-1-修改前端界面" class="headerlink" title="3.1 修改前端界面"></a>3.1 修改前端界面</h3><h4 id="3-1-1-list-html页面"><a href="#3-1-1-list-html页面" class="headerlink" title="3.1.1 list.html页面"></a>3.1.1 list.html页面</h4><blockquote><p>点击<code>编辑</code>标签时，跳转到编辑页面<code>update.html</code></p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-sm btn-primary&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/edit/&#123;id&#125;(id=$&#123;emp.getId()&#125;)&#125;&quot;</span>&gt;</span>编辑<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3-1-2-update-html页面"><a href="#3-1-2-update-html页面" class="headerlink" title="3.1.2 update.html页面"></a>3.1.2 update.html页面</h4><blockquote><p>将add页面复制一份改为update页面，将后台查询的数据回显</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">th:action</span>=<span class="string">&quot;@&#123;/edit&#125;&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span>&gt;</span>LastName<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">th:value</span>=<span class="string">&quot;$&#123;emp.getLastName()&#125;&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;lastName&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span></span></span><br><span class="line"><span class="tag">               <span class="attr">placeholder</span>=<span class="string">&quot;lastname:zsr&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span>&gt;</span>Email<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">th:value</span>=<span class="string">&quot;$&#123;emp.getEmail()&#125;&quot;</span> <span class="attr">type</span>=<span class="string">&quot;email&quot;</span> <span class="attr">name</span>=<span class="string">&quot;email&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span></span></span><br><span class="line"><span class="tag">               <span class="attr">placeholder</span>=<span class="string">&quot;email:xxxxx@qq.com&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span>&gt;</span>Gender<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-check form-check-inline&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">th:checked</span>=<span class="string">&quot;$&#123;emp.getGender()==1&#125;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-check-input&quot;</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span></span></span><br><span class="line"><span class="tag">                   <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">&quot;form-check-label&quot;</span>&gt;</span>男<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-check form-check-inline&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">th:checked</span>=<span class="string">&quot;$&#123;emp.getGender()==0&#125;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-check-input&quot;</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span></span></span><br><span class="line"><span class="tag">                   <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span> <span class="attr">value</span>=<span class="string">&quot;0&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">&quot;form-check-label&quot;</span>&gt;</span>女<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span>&gt;</span>department<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--注意这里的name是department.id，因为传入的参数为id--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">select</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">name</span>=<span class="string">&quot;department.id&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">th:selected</span>=<span class="string">&quot;$&#123;department.getId()==emp.department.getId()&#125;&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">th:each</span>=<span class="string">&quot;department:$&#123;departments&#125;&quot;</span> </span></span><br><span class="line"><span class="tag">                    <span class="attr">th:text</span>=<span class="string">&quot;$&#123;department.getDepartmentName()&#125;&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">th:value</span>=<span class="string">&quot;$&#123;department.getId()&#125;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span>&gt;</span>Birth<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--springboot默认的日期格式为yy/MM/dd--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">th:value</span>=<span class="string">&quot;$&#123;emp.getBirth()&#125;&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;birth&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;birth:yyyy/MM/dd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary&quot;</span>&gt;</span>修改<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>规定一下显示的日期格式</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--springboot默认的日期格式为yy/MM/dd--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">th:value</span>=<span class="string">&quot;$&#123;#dates.format(emp.getBirth(),&#x27;yyyy-MM-dd&#x27;)&#125;&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;date&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">placeholder</span>=<span class="string">&quot;birth:yy/MM/dd&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>修改表单提交的地址</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">th:action</span>=<span class="string">&quot;@&#123;/updateEmp&#125;&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>指定修改人的id</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;hidden&quot;</span> <span class="attr">name</span>=<span class="string">&quot;id&quot;</span> <span class="attr">th:value</span>=<span class="string">&quot;$&#123;emp.getId()&#125;&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-2-修改后端"><a href="#3-2-修改后端" class="headerlink" title="3.2 修改后端"></a>3.2 修改后端</h3><h4 id="EmployeeController-java文件-1"><a href="#EmployeeController-java文件-1" class="headerlink" title="EmployeeController.java文件"></a>EmployeeController.java文件</h4><ul><li><p><strong>toUpdateAll方法</strong></p><p>员工的修改页面</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/edit/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toUpdateAll</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> <span class="type">int</span> id,Model model)</span>&#123;</span><br><span class="line">        <span class="comment">//查询指定的id员工，添加到emp中，用于前端接收</span></span><br><span class="line">        Employee employee=employeeDao.getEmployee(id);</span><br><span class="line">        model.addAttribute(<span class="string">&quot;emp&quot;</span>,employee);</span><br><span class="line">        <span class="comment">//查出所有的部门信息，添加到department中，用于前端接收</span></span><br><span class="line">        Collection&lt;Department&gt; departments=departmentDao.getDepartments();</span><br><span class="line">        model.addAttribute(<span class="string">&quot;departments&quot;</span>,departments);</span><br><span class="line">        <span class="comment">//返回编辑员工页面</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;/emp/update&quot;</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>updateEmp方法</strong></p><p>保存修改的内容，回到列表页面</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PostMapping(&quot;/updateEmp&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">updateEmp</span><span class="params">(Employee employee)</span>&#123;</span><br><span class="line">        employeeDao.save(employee);</span><br><span class="line">        <span class="comment">//回到员工列表页面</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;redirect:/emps&quot;</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="3-3-结果图"><a href="#3-3-结果图" class="headerlink" title="3.3 结果图"></a>3.3 结果图</h3><img src="https://s3.bmp.ovh/imgs/2022/09/30/049a9dc4d7548357.png" style="zoom:50%;"><h3 id="3-4-出错"><a href="#3-4-出错" class="headerlink" title="3.4 出错"></a>3.4 出错</h3><blockquote><p>点击修改按钮之后页面跳转之后没有数据</p></blockquote><p>经过往前的排查，最后发现是在创建部门表的时候id不对应！！！本来应该是1001，写成了101。虽然在增加数据的时候没问题，但是在修改数据和删改数据的时候就读取不到正确的数据了！</p><img src="https://s3.bmp.ovh/imgs/2022/09/30/66ca8b475896ee8a.png" style="zoom: 50%;"><img src="https://s3.bmp.ovh/imgs/2022/09/30/047b44662a44fbcf.png" style="zoom: 50%;"><h2 id="4-删除数据"><a href="#4-删除数据" class="headerlink" title="4 删除数据"></a>4 删除数据</h2><h3 id="4-1-修改前端界面"><a href="#4-1-修改前端界面" class="headerlink" title="4.1 修改前端界面"></a>4.1 修改前端界面</h3><ul><li><strong>list.html页面</strong></li></ul><blockquote><p>点击<code>删除</code>标签是，发起一个请求，删除指定的用户，再重新返回到<code>list</code>页面显示员工数据</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-sm btn-danger&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/delete/&#123;id&#125;(id=$&#123;emp.getId()&#125;)&#125;&quot;</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="4-2-修改后端"><a href="#4-2-修改后端" class="headerlink" title="4.2 修改后端"></a>4.2 修改后端</h3><h5 id="EmployeeController-java文件-2"><a href="#EmployeeController-java文件-2" class="headerlink" title="EmployeeController.java文件"></a>EmployeeController.java文件</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/delete/&#123;id&#125;&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">delete</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> Integer id)</span> &#123;</span><br><span class="line">    employeeDao.delete(id);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;redirect:/emps&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Springboot </category>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Springboot </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Springboot快速入门（五）——Debug：增加员工</title>
      <link href="/2022/09/27/Springboot%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%EF%BC%88%E4%BA%94%EF%BC%89%E2%80%94%E2%80%94Debug%EF%BC%9A%E5%A2%9E%E5%8A%A0%E5%91%98%E5%B7%A5/"/>
      <url>/2022/09/27/Springboot%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%EF%BC%88%E4%BA%94%EF%BC%89%E2%80%94%E2%80%94Debug%EF%BC%9A%E5%A2%9E%E5%8A%A0%E5%91%98%E5%B7%A5/</url>
      
        <content type="html"><![CDATA[<h2 id="报错1：点击添加员工之后跳转页面错误"><a href="#报错1：点击添加员工之后跳转页面错误" class="headerlink" title="报错1：点击添加员工之后跳转页面错误"></a>报错1：点击添加员工之后跳转页面错误</h2><p><strong>报错：java.lang.NullPointerException: null！</strong></p><p>在<code>Collection&lt;Department&gt; departments=departmentDao.getDepartments();</code>这一行代码，debug之后发现departmentDao值为null，可能departmentDao并没有装配进去。再对比<code>EmployeeDao.java</code>文件，发现少了@Repository<br><strong>解决办法：在DepartmentDao.java文件前引入@Repository就ok</strong></p><h2 id="报错2：添加员工之后跳转到的页面只有两条完整数据"><a href="#报错2：添加员工之后跳转到的页面只有两条完整数据" class="headerlink" title="报错2：添加员工之后跳转到的页面只有两条完整数据"></a>报错2：添加员工之后跳转到的页面只有两条完整数据</h2><p><img src="https://s3.bmp.ovh/imgs/2022/09/27/ebdbf87bc5e27572.png"></p><h3 id="debug1："><a href="#debug1：" class="headerlink" title="debug1："></a>debug1：</h3><p>此处id&#x3D;null，此处猜测save方法或许有点问题，故进入save方法再进行调试</p><p><img src="https://s3.bmp.ovh/imgs/2022/09/27/667d6f14cb34c44a.png"></p><h3 id="debug2："><a href="#debug2：" class="headerlink" title="debug2："></a>debug2：</h3><p>此处id值是通过前端正确传入了的，没有问题，department也接收到了id值，故在下一个方法打上断点</p><p><img src="https://s3.bmp.ovh/imgs/2022/09/27/1081940252960ee9.png"></p><h3 id="debug3："><a href="#debug3：" class="headerlink" title="debug3："></a>debug3：</h3><p>此处就出现问题了，department的id值并没有传入到employee中。再看这句代码，虽然<code>employee.setDepartment</code>取到了id值，但并没有把值传到employee.put之中，并且此处的<code>employee.getId</code>取不到department的id值，改为<code>employees.put(employee.getDepartment().getId(), employee);</code>之后再调试，发现department取上值了。</p><p><img src="https://s3.bmp.ovh/imgs/2022/09/27/79ebf7c4d67a9e51.png"></p><p><img src="https://s3.bmp.ovh/imgs/2022/09/27/c5fed453ccd715dd.png"></p><h2 id="报错3：员工department值为空，数据只能添加显示5条"><a href="#报错3：员工department值为空，数据只能添加显示5条" class="headerlink" title="报错3：员工department值为空，数据只能添加显示5条"></a>报错3：员工department值为空，数据只能添加显示5条</h2><p>现在虽可以显示完记录并成功添加了，但是新添加的员工没有department</p><p><img src="https://s3.bmp.ovh/imgs/2022/09/27/9bcdb3d218ce85f8.png"></p><h3 id="尝试："><a href="#尝试：" class="headerlink" title="尝试："></a>尝试：</h3><p>在add.html页面把department的选择改为数字1~5</p><p><img src="https://s3.bmp.ovh/imgs/2022/09/27/7d01760dc8eb39b6.png"></p><p><strong>结果：发现每个部门对应的id为101-105，而之前前端传回后端的id却是1001-1005，则发现是在<code>DepartmentDao.java</code>文件中打错了部门的id，导致id与部门名不对应。</strong></p><p><img src="https://s3.bmp.ovh/imgs/2022/09/27/3d139c5d0c1ce717.png"></p><p><img src="https://s3.bmp.ovh/imgs/2022/09/27/b2f0990fe628a3c9.png"></p><p>修改完成之后，发现部门值还是显示不出来，且每新增一条数据，就会删除一条数据，页面只会显示5条数据，考虑到前面更改了EmployeeDao中的代码，再重新恢复为之前作者的代码之后，页面显示正常！</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">employee.setDepartment(departmentDao.getDepartmentById(employee.getDepartment().getId()));</span><br><span class="line">employees.put(employee.getId(),employee);</span><br></pre></td></tr></table></figure><p>再debug一下：部门的值已经传进去了</p><h3 id="debug1：-1"><a href="#debug1：-1" class="headerlink" title="debug1："></a>debug1：</h3><p>部门的id传入</p><p><img src="https://s3.bmp.ovh/imgs/2022/09/27/4fa2ab0b1563d0ca.png"></p><h3 id="debug2：-1"><a href="#debug2：-1" class="headerlink" title="debug2："></a>debug2：</h3><p>save方法中获取到部门值</p><p><img src="https://s3.bmp.ovh/imgs/2022/09/27/4954b909f152e9f4.png"></p><h3 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h3><p>此次困扰最久的就是部门值不显示问题，归根结底还是自己粗心的原因，但是同时也对调试代码有了进一步的了解！</p>]]></content>
      
      
      <categories>
          
          <category> Springboot </category>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Springboot </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Springboot快速入门（四）——Web开发：国际化/登录/注销</title>
      <link href="/2022/09/23/Springboot%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%EF%BC%88%E5%9B%9B%EF%BC%89%E2%80%94%E2%80%94Web%E5%BC%80%E5%8F%91%EF%BC%9A%E5%9B%BD%E9%99%85%E5%8C%96%E3%80%81%E7%99%BB%E5%BD%95%E3%80%81%E5%88%97%E8%A1%A8%E5%B1%95%E7%A4%BA/"/>
      <url>/2022/09/23/Springboot%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%EF%BC%88%E5%9B%9B%EF%BC%89%E2%80%94%E2%80%94Web%E5%BC%80%E5%8F%91%EF%BC%9A%E5%9B%BD%E9%99%85%E5%8C%96%E3%80%81%E7%99%BB%E5%BD%95%E3%80%81%E5%88%97%E8%A1%A8%E5%B1%95%E7%A4%BA/</url>
      
        <content type="html"><![CDATA[<h2 id="1-页面国际化"><a href="#1-页面国际化" class="headerlink" title="1. 页面国际化"></a>1. 页面国际化</h2><h3 id="1-1-配置文件编写"><a href="#1-1-配置文件编写" class="headerlink" title="1.1 配置文件编写"></a>1.1 配置文件编写</h3><ul><li><p>resources资源文件下新建一个<strong>i18n目录</strong>，存放国际化配置文件</p></li><li><p>建立一个<strong>login.properties</strong>文件，一个<strong>login_zh_CN.properties</strong>，还有一个<strong>login_en_US.properties</strong>；</p><p><img src="https://img-blog.csdnimg.cn/829f3e8f6a524f2a99b7eb984357749c.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5p2o5LiZ5a-F,size_14,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p></li><li><p>编写配置</p><ul><li><p>login.properties ： 默认</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">login.btn=登录</span><br><span class="line">login.password=密码</span><br><span class="line">login.remember=记住我</span><br><span class="line">login.tip=请登录</span><br><span class="line">login.username=用户名</span><br></pre></td></tr></table></figure></li><li><p>英文</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">login.btn=Sign in</span><br><span class="line">login.password=Password</span><br><span class="line">login.remember=Remember me</span><br><span class="line">login.tip=Please sign in</span><br><span class="line">login.username=Username</span><br></pre></td></tr></table></figure></li><li><p>中文</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">login.btn=登录</span><br><span class="line">login.password=密码</span><br><span class="line">login.remember=记住我</span><br><span class="line">login.tip=请登录</span><br><span class="line">login.username=用户名</span><br></pre></td></tr></table></figure></li></ul></li><li><p>配置页面国际化值</p><p><img src="https://img-blog.csdnimg.cn/94ae3202a9e34bdd82f10cec0bff1290.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5p2o5LiZ5a-F,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p></li></ul><h3 id="1-2-配置生效"><a href="#1-2-配置生效" class="headerlink" title="1.2 配置生效"></a>1.2 配置生效</h3><ul><li><p>点击链接让个人的国际化资源生效，就需要让我们自己的<strong>Locale</strong>生效！ 需要去自己写一个自己的<strong>LocaleResolver</strong>，可以在链接上携带区域信息</p><ul><li><p>修改前端页面的跳转</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 这里传入参数不需要使用 ？ 使用 （key=value）--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-sm&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/index.html(l=&#x27;zh_CN&#x27;)&#125;&quot;</span>&gt;</span>中文<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-sm&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/index.html(l=&#x27;en_US&#x27;)&#125;&quot;</span>&gt;</span>English<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>写一个处理的组件类（在config文件夹下）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 可以在链接上携带区域信息</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyLocaleResolver</span> <span class="keyword">implements</span> <span class="title class_">LocaleResolver</span> &#123;</span><br><span class="line">    <span class="comment">// 解析请求</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Locale <span class="title function_">resolveLocale</span><span class="params">(HttpServletRequest request)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">language</span> <span class="operator">=</span> request.getParameter(<span class="string">&quot;l&quot;</span>);</span><br><span class="line">        <span class="type">Locale</span> <span class="variable">locale</span> <span class="operator">=</span> Locale.getDefault(); <span class="comment">// 如果没有获取到就使用系统默认的</span></span><br><span class="line">        <span class="comment">// 如果请求链接不为空</span></span><br><span class="line">        <span class="keyword">if</span> (!StringUtils.isEmpty(language)) &#123;</span><br><span class="line">            <span class="comment">// 分割请求参数</span></span><br><span class="line">            String[] split = language.split(<span class="string">&quot;_&quot;</span>);</span><br><span class="line">            <span class="comment">// 国家，地区</span></span><br><span class="line">            locale = <span class="keyword">new</span> <span class="title class_">Locale</span>(split[<span class="number">0</span>], split[<span class="number">1</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> locale;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setLocale</span><span class="params">(HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse, Locale locale)</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>为了让区域化信息能够生效，需要再配置一下这个组件！在个人的MvcConofig下添加 bean；（在MyMvcConfig中）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="keyword">public</span> LocaleResolver <span class="title function_">localeResolver</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">MyLocaleResolver</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h2 id="2-登录功能实现"><a href="#2-登录功能实现" class="headerlink" title="2. 登录功能实现"></a>2. 登录功能实现</h2><h3 id="2-1-登录"><a href="#2-1-登录" class="headerlink" title="2.1 登录"></a>2.1 登录</h3><ul><li><p>登录的html页面提交地址，并且所有的表单标签都需要加上一个name属性</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">class</span>=<span class="string">&quot;form-signin&quot;</span> <span class="attr">th:action</span>=<span class="string">&quot;@&#123;/user/login&#125;&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">·············</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>编写LoginController </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LoginController</span> &#123;</span><br><span class="line">    <span class="meta">@PostMapping(&quot;/user/login&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">login</span><span class="params">(<span class="meta">@RequestParam(&quot;username&quot;)</span> String username,</span></span><br><span class="line"><span class="params">                        <span class="meta">@RequestParam(&quot;password&quot;)</span> String password,</span></span><br><span class="line"><span class="params">                        Model model, HttpSession session)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!StringUtils.isEmpty(username) &amp;&amp; <span class="string">&quot;123456&quot;</span>.equals(password))&#123;</span><br><span class="line">            <span class="comment">// 登录成功！将用户信息放入session</span></span><br><span class="line">            session.setAttribute(<span class="string">&quot;loginUser&quot;</span>,username);</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;dashboard&quot;</span>; <span class="comment">// 跳转到首页</span></span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 登录失败！存放错误信息</span></span><br><span class="line">            model.addAttribute(<span class="string">&quot;msg&quot;</span>,<span class="string">&quot;用户名密码错误&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;index&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>登录失败的话，需要将后台信息输出到前台，可以在首页标题下面加上判断！</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--判断是否显示，使用if, $&#123;&#125;可以使用工具类，可以看thymeleaf的中文文档--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;color: red&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;msg&#125;&quot;</span> <span class="attr">th:if</span>=<span class="string">&quot;$&#123;not #strings.isEmpty(msg)&#125;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>登录成功后，由于是转发，链接不变，可以<strong>重定向到首页</strong></p><ul><li><p>再添加一个视图控制映射，在自己的<strong>MyMvcConfig</strong>中：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">registry.addViewController(<span class="string">&quot;/main.html&quot;</span>).setViewName(<span class="string">&quot;dashboard&quot;</span>);</span><br></pre></td></tr></table></figure></li><li><p>将 LoginController 的代码改为重定向</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//登录成功！防止表单重复提交，我们重定向</span></span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;redirect:/main.html&quot;</span>;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h3 id="2-2-登录拦截器"><a href="#2-2-登录拦截器" class="headerlink" title="2.2 登录拦截器"></a>2.2 登录拦截器</h3><ul><li><p>自定义拦截器</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LoginHandlerInterceptor</span> <span class="keyword">implements</span> <span class="title class_">HandlerInterceptor</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">preHandle</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="comment">//获取loginUser信息进行判断</span></span><br><span class="line">        <span class="type">Object</span> <span class="variable">user</span> <span class="operator">=</span> request.getSession().getAttribute(<span class="string">&quot;loginUser&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span>(user==<span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="comment">//未登录，返回首页</span></span><br><span class="line">            request.setAttribute(<span class="string">&quot;msg&quot;</span>,<span class="string">&quot;没有权限，请登录账户&quot;</span>);</span><br><span class="line">            request.getRequestDispatcher(<span class="string">&quot;/index.html&quot;</span>).forward(request,response);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="comment">//登录，放行</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>将拦截器注册到SpringMVC配置类当中——MyMVCConfig.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addInterceptors</span><span class="params">(InterceptorRegistry registry)</span> &#123;</span><br><span class="line">    <span class="comment">// 注册拦截器，及拦截请求和要剔除哪些请求!</span></span><br><span class="line">    <span class="comment">// 还需要过滤静态资源文件，否则样式显示不出来</span></span><br><span class="line">    registry.addInterceptor(<span class="keyword">new</span> <span class="title class_">LoginHandlerInterceptor</span>())</span><br><span class="line">        .addPathPatterns(<span class="string">&quot;/**&quot;</span>)</span><br><span class="line">        .excludePathPatterns(<span class="string">&quot;/index.html&quot;</span>,<span class="string">&quot;/&quot;</span>,<span class="string">&quot;/user/login&quot;</span>,<span class="string">&quot;/static/**&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="3-注销页面"><a href="#3-注销页面" class="headerlink" title="3 注销页面"></a>3 注销页面</h2><h3 id="3-1-修改前端界面"><a href="#3-1-修改前端界面" class="headerlink" title="3.1 修改前端界面"></a>3.1 修改前端界面</h3><blockquote><p>在提取出来的公共<code>commons</code>页面，顶部导航栏处的标签添加<code>href</code>属性，实现点击发起请求<code>user/logOut</code></p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;nav-link&quot;</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/user/loginOut&#125;&quot;</span>&gt;</span>Sign out<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-2-修改后端界面"><a href="#3-2-修改后端界面" class="headerlink" title="3.2 修改后端界面"></a>3.2 修改后端界面</h3><h5 id="LoginController-java文件"><a href="#LoginController-java文件" class="headerlink" title="LoginController.java文件"></a>LoginController.java文件</h5><blockquote><p>处理点击<code>注销</code>标签的请求，在<code>LoginController</code>中编写对应的方法，清除session，并重定向到首页</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/user/loginOut&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">logout</span><span class="params">(HttpSession session)</span> &#123;</span><br><span class="line">    session.invalidate();</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;redirect:/index.html&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Springboot </category>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Springboot </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Springboot快速入门（三）——Web开发：首页实现</title>
      <link href="/2022/09/14/Springboot%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%EF%BC%88%E4%B8%89%EF%BC%89%E2%80%94%E2%80%94Web%E5%BC%80%E5%8F%91%EF%BC%9A%E9%A6%96%E9%A1%B5%E5%AE%9E%E7%8E%B0/"/>
      <url>/2022/09/14/Springboot%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%EF%BC%88%E4%B8%89%EF%BC%89%E2%80%94%E2%80%94Web%E5%BC%80%E5%8F%91%EF%BC%9A%E9%A6%96%E9%A1%B5%E5%AE%9E%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="1-SpringBoot-Web开发"><a href="#1-SpringBoot-Web开发" class="headerlink" title="1. SpringBoot Web开发"></a>1. SpringBoot Web开发</h2><h3 id="1-1-要解决的问题："><a href="#1-1-要解决的问题：" class="headerlink" title="1.1 要解决的问题："></a>1.1 <strong>要解决的问题：</strong></h3><ul><li>导入静态资源</li><li>首页</li><li>jsp，模板引擎Thymeleaf</li><li>装配扩展SpringMVC</li><li>增删改查</li><li>拦截器</li><li>国际化</li></ul><h3 id="1-2-自动装配"><a href="#1-2-自动装配" class="headerlink" title="1.2 自动装配"></a>1.2 自动装配</h3><ul><li>xxxxAutoConfiguration….：向容器自动配置组件</li><li>xxxxProperties：自动配置类，装配配置文件中自定义的一些内容</li></ul><h2 id="2-静态资源处理"><a href="#2-静态资源处理" class="headerlink" title="2 静态资源处理"></a>2 静态资源处理</h2><h3 id="2-1-GetMapping和-RequestMapping有啥区别"><a href="#2-1-GetMapping和-RequestMapping有啥区别" class="headerlink" title="2.1 @GetMapping和@RequestMapping有啥区别"></a>2.1 @GetMapping和@RequestMapping有啥区别</h3><ul><li><p>@RequestMapping可以指定GET、POST请求方式</p></li><li><p>@GetMapping等价于@RequestMapping的GET请求方式。eg：</p><p><em><strong>@RequestMapping(value &#x3D; “hello”, method&#x3D; RequestMethod.GET )</strong></em>  &#x3D;&#x3D; <em><strong>@GetMapping(“hello”)</strong></em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloController</span> &#123;</span><br><span class="line">    <span class="comment">//@RequestMapping(value = &quot;hello&quot;, method= RequestMethod.GET )</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/hello&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">hello</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;hello,world&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="2-2-静态资源存放的目录"><a href="#2-2-静态资源存放的目录" class="headerlink" title="2.2 静态资源存放的目录"></a>2.2 静态资源存放的目录</h3> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;classpath:/META-INF/resources/</span></span><br><span class="line"><span class="string">&quot;</span>classpath:/resources/<span class="string">&quot;</span></span><br><span class="line"><span class="string">&quot;</span>classpath:/<span class="keyword">static</span>/<span class="string">&quot;</span></span><br><span class="line"><span class="string">&quot;</span>classpath:/<span class="keyword">public</span>/<span class="string">&quot;</span></span><br></pre></td></tr></table></figure><ul><li>优先级：resources&gt;static(默认)&gt;public</li></ul><h3 id="2-3-自定义静态资源路径"><a href="#2-3-自定义静态资源路径" class="headerlink" title="2.3 自定义静态资源路径"></a>2.3 自定义静态资源路径</h3> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">spring.web.resources.<span class="keyword">static</span>-locations=classpath:/coding/,classpath:/github/</span><br></pre></td></tr></table></figure><p>   一旦自己定义了静态文件夹的路径，原来的自动配置就都会失效了！</p><h2 id="3-thymeleaf模板引擎"><a href="#3-thymeleaf模板引擎" class="headerlink" title="3. thymeleaf模板引擎"></a>3. thymeleaf模板引擎</h2><h2 id="4-Spring-MVC-配置原理"><a href="#4-Spring-MVC-配置原理" class="headerlink" title="4. Spring MVC 配置原理"></a>4. Spring MVC 配置原理</h2><h2 id="5-配置环境及首页"><a href="#5-配置环境及首页" class="headerlink" title="5. 配置环境及首页"></a>5. 配置环境及首页</h2><h3 id="5-1-配置环境准备工作"><a href="#5-1-配置环境准备工作" class="headerlink" title="5.1 配置环境准备工作"></a>5.1 配置环境准备工作</h3><h4 id="5-1-1-导入依赖包"><a href="#5-1-1-导入依赖包" class="headerlink" title="5.1.1 导入依赖包"></a>5.1.1 导入依赖包</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--   lombok     --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="5-1-2-导入实体类"><a href="#5-1-2-导入实体类" class="headerlink" title="5.1.2 导入实体类"></a>5.1.2 导入实体类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 部门类</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Department</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String departmentName;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 员工类</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Employee</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String lastName;</span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line">    <span class="keyword">private</span> Integer gender;</span><br><span class="line">    <span class="keyword">private</span> Department department;</span><br><span class="line">    <span class="keyword">private</span> Date birth;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="5-1-3-配置Dao层"><a href="#5-1-3-配置Dao层" class="headerlink" title="5.1.3 配置Dao层"></a>5.1.3 配置Dao层</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DepartmentDao</span> &#123;</span><br><span class="line">    <span class="comment">// 模拟数据库中的数据</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Map&lt;Integer, Department&gt; departments=<span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        departments = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;Integer, Department&gt;();   <span class="comment">// 创建一个部门</span></span><br><span class="line">        departments.put(<span class="number">101</span>,<span class="keyword">new</span> <span class="title class_">Department</span>(<span class="number">101</span>,<span class="string">&quot;运营部&quot;</span>));</span><br><span class="line">        departments.put(<span class="number">102</span>,<span class="keyword">new</span> <span class="title class_">Department</span>(<span class="number">102</span>,<span class="string">&quot;策划部&quot;</span>));</span><br><span class="line">        departments.put(<span class="number">103</span>,<span class="keyword">new</span> <span class="title class_">Department</span>(<span class="number">103</span>,<span class="string">&quot;法务部&quot;</span>));</span><br><span class="line">        departments.put(<span class="number">104</span>,<span class="keyword">new</span> <span class="title class_">Department</span>(<span class="number">104</span>,<span class="string">&quot;开发部&quot;</span>));</span><br><span class="line">        departments.put(<span class="number">105</span>,<span class="keyword">new</span> <span class="title class_">Department</span>(<span class="number">105</span>,<span class="string">&quot;宣传部&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 获得所有部门的信息</span></span><br><span class="line">    <span class="keyword">public</span> Collection&lt;Department&gt; <span class="title function_">getDepartments</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> departments.values();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 通过ID查询部门</span></span><br><span class="line">    <span class="keyword">public</span> Department <span class="title function_">getDepartment</span><span class="params">(Integer id)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> departments.get(id);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">EmployeeDao</span> &#123;</span><br><span class="line">    <span class="comment">// 模拟数据库中的数据</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Map&lt;Integer, Employee&gt; employees=<span class="literal">null</span>;</span><br><span class="line">    <span class="comment">// 员工所属部门</span></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> DepartmentDao departmentDao;</span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        employees = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();   <span class="comment">// 创建一个部</span></span><br><span class="line">        employees.put(<span class="number">1001</span>,<span class="keyword">new</span> <span class="title class_">Employee</span>(<span class="number">1001</span>,<span class="string">&quot;Quary&quot;</span>,<span class="string">&quot;A2835467@qq.com&quot;</span>,<span class="number">1</span>,<span class="keyword">new</span> <span class="title class_">Department</span>(<span class="number">1001</span>,<span class="string">&quot;运营部&quot;</span>),<span class="keyword">new</span> <span class="title class_">Date</span>()));</span><br><span class="line">        employees.put(<span class="number">1002</span>,<span class="keyword">new</span> <span class="title class_">Employee</span>(<span class="number">1002</span>,<span class="string">&quot;Quary&quot;</span>,<span class="string">&quot;B2835467@qq.com&quot;</span>,<span class="number">0</span>,<span class="keyword">new</span> <span class="title class_">Department</span>(<span class="number">1002</span>,<span class="string">&quot;策划部&quot;</span>),<span class="keyword">new</span> <span class="title class_">Date</span>()));</span><br><span class="line">        employees.put(<span class="number">1003</span>,<span class="keyword">new</span> <span class="title class_">Employee</span>(<span class="number">1003</span>,<span class="string">&quot;Quary&quot;</span>,<span class="string">&quot;C2835467@qq.com&quot;</span>,<span class="number">1</span>,<span class="keyword">new</span> <span class="title class_">Department</span>(<span class="number">1003</span>,<span class="string">&quot;法务部&quot;</span>),<span class="keyword">new</span> <span class="title class_">Date</span>()));</span><br><span class="line">        employees.put(<span class="number">1004</span>,<span class="keyword">new</span> <span class="title class_">Employee</span>(<span class="number">1004</span>,<span class="string">&quot;Quary&quot;</span>,<span class="string">&quot;D2835467@qq.com&quot;</span>,<span class="number">0</span>,<span class="keyword">new</span> <span class="title class_">Department</span>(<span class="number">1004</span>,<span class="string">&quot;开发部&quot;</span>),<span class="keyword">new</span> <span class="title class_">Date</span>()));</span><br><span class="line">        employees.put(<span class="number">1005</span>,<span class="keyword">new</span> <span class="title class_">Employee</span>(<span class="number">1005</span>,<span class="string">&quot;Quary&quot;</span>,<span class="string">&quot;F2835467@qq.com&quot;</span>,<span class="number">1</span>,<span class="keyword">new</span> <span class="title class_">Department</span>(<span class="number">1005</span>,<span class="string">&quot;宣传部&quot;</span>),<span class="keyword">new</span> <span class="title class_">Date</span>()));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 增加员工,主键自增</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Integer initid=<span class="number">1006</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">save</span><span class="params">(Employee employee)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(employee.getId()==<span class="literal">null</span>)&#123;</span><br><span class="line">            employee.setId(initid);</span><br><span class="line">        &#125;        employee.setDepartment(departmentDao.getDepartment(employee.getDepartment().getId()));</span><br><span class="line">        employees.put(employee.getId(),employee);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 查询全部员工信息</span></span><br><span class="line">    <span class="keyword">public</span> Collection&lt;Employee&gt; <span class="title function_">getAll</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> employees.values();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 通过ID查询员工</span></span><br><span class="line">    <span class="keyword">public</span> Employee <span class="title function_">getEmployee</span><span class="params">(Integer id)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> employees.get(id);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 删除员工</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">delete</span><span class="params">(Integer id)</span>&#123;</span><br><span class="line">        employees.remove(id);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="5-1-4-导入静态资源"><a href="#5-1-4-导入静态资源" class="headerlink" title="5.1.4 导入静态资源"></a>5.1.4 导入静态资源</h4><ul><li>css，js等放在static文件夹下</li><li>html放在template文件夹下</li></ul><h3 id="5-2-首页实现"><a href="#5-2-首页实现" class="headerlink" title="5.2 首页实现"></a>5.2 首页实现</h3><ul><li><p>方式一：写一个controller实现</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">IndexController</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 会解析到templates目录下的index.html页面</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping(&#123;&quot;/&quot;,&quot;/index.html&quot;&#125;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">index</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;index&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>方式二：自己编写MVC的扩展配置</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">IndexController</span> <span class="keyword">implements</span> <span class="title class_">WebMvcConfigurer</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addViewControllers</span><span class="params">(ViewControllerRegistry registry)</span> &#123;</span><br><span class="line">        registry.addViewController(<span class="string">&quot;/&quot;</span>).setViewName(<span class="string">&quot;index&quot;</span>);</span><br><span class="line">        registry.addViewController(<span class="string">&quot;/index.html&quot;</span>).setViewName(<span class="string">&quot;index&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>解决资源导入</p><ul><li><code>xmlns:th=&quot;http://www.thymeleaf.org&quot;</code></li><li><code>th:href=&quot;@&#123;&#125;&quot;</code></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span>&gt;</span></span><br><span class="line">    ·····················</span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/css/bootstrap.min.css&#125;&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/css/signin.css&#125;&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line">    ·····················</span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">&quot;mb-4&quot;</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/img/bootstrap-solid.svg&#125;&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> <span class="attr">width</span>=<span class="string">&quot;72&quot;</span> <span class="attr">height</span>=<span class="string">&quot;72&quot;</span>&gt;</span></span><br><span class="line">    ·····················</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Springboot </category>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Springboot </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Springboot快速入门（二）——自定义启动器</title>
      <link href="/2022/09/13/Springboot%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%EF%BC%88%E4%BA%8C%EF%BC%89%E2%80%94%E2%80%94%E8%87%AA%E5%AE%9A%E4%B9%89%E5%90%AF%E5%8A%A8%E5%99%A8/"/>
      <url>/2022/09/13/Springboot%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%EF%BC%88%E4%BA%8C%EF%BC%89%E2%80%94%E2%80%94%E8%87%AA%E5%AE%9A%E4%B9%89%E5%90%AF%E5%8A%A8%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="1-自动装配原理再理解"><a href="#1-自动装配原理再理解" class="headerlink" title="1.自动装配原理再理解"></a>1.自动装配原理再理解</h2><h3 id="1-1-自动装配要点"><a href="#1-1-自动装配要点" class="headerlink" title="1.1 自动装配要点"></a>1.1 自动装配要点</h3><ul><li><p>SpringBoot启动会加载大量的自动配置类</p></li><li><p>看需要的功能有没有在SpringBoot默认写好的自动配置类中</p></li><li><p>再来看这个自动配置类中到底配置了哪些组件（只要我们要用的组件存在在其中，我们就不需要再手动配置了）</p></li><li><p>给容器中自动配置类添加组件的时候，会从<strong>properties类</strong>中获取某些属性。我们只需要在配置文件中指定这些属性的值即可</p><ul><li><p><strong>xxxxAutoConfigurartion</strong>：自动配置类；给容器中添加组件；</p></li><li><p><strong>xxxxProperties</strong>:封装配置文件中相关属性。</p></li></ul></li></ul><h3 id="1-2-了解-Conditional"><a href="#1-2-了解-Conditional" class="headerlink" title="1.2 了解@Conditional"></a>1.2 了解@Conditional</h3><ul><li><p>自动配置类必须在一定的条件下才能生效，必须是@Conditional指定的条件成立，才给容器中添加组件，配置里面的所有内容才生效</p></li><li><p>@Conditional派生注解（Spring注解版原生的@Conditional作用）</p><img src="https://img-blog.csdnimg.cn/454161204ff94b8eb647a59dbae55710.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5p2o5LiZ5a-F,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述" style="zoom: 80%;"></li><li><p>可以通过启用 <strong>debug&#x3D;true</strong>属性；来让控制台打印自动配置报告，这样就可以很方便的知道哪些自动配置类生效</p><ul><li>Positive matches:（自动配置类启用的：正匹配）</li><li>Negative matches:（没有启动，没有匹配成功的自动配置类：负匹配）</li><li>Unconditional classes: （没有条件的类）</li></ul></li></ul><h2 id="2-自定义starter"><a href="#2-自定义starter" class="headerlink" title="2. 自定义starter"></a>2. 自定义starter</h2><blockquote><p>启动器模块是一个<strong>空jar文件</strong>，仅提供<strong>辅助性依赖管理</strong>，这些依赖可能用于<strong>自动装配或者其他类库</strong>。启动器包了一层自动配置类，自动配置类作用就是写@Bean注解，<strong>往容器里面配置Bean</strong>，然后Bean所需要的属性都来源于配置文件<strong>所映射的属性配置类</strong></p></blockquote><h3 id="2-1-命名约束"><a href="#2-1-命名约束" class="headerlink" title="2.1 命名约束"></a>2.1 <strong>命名约束</strong></h3><ul><li>官方命名：</li></ul><p>​        前缀： spring-boot-starter-xxx</p><p>​        比如：spring-boot-starter-web…</p><ul><li>自定义命名：</li></ul><p>​        xxx-spring-boot-starter</p><p>​        比如：mybatis-spring-boot-starter</p><h3 id="2-2-编写启动器"><a href="#2-2-编写启动器" class="headerlink" title="2.2 编写启动器"></a>2.2 <strong>编写启动器</strong></h3><ul><li><p>需要建立的项目模块</p><ul><li>一个springboot空项目：diy</li><li>一个maven模块：starter</li><li>一个springboot模块：starter-autoconfigure</li><li>一个测试springboot模块：test</li></ul></li><li><p>在 <strong>starter</strong> 中导入 starter-autoconfigure 的依赖，starter无需编写什么代码，只需让该工程引入starter-autoconfigure依赖（<strong>即maven模块中引入springboot模块</strong>）：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--引入自动配置包--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.cc<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>starter-autoconfigure<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><strong>starter-autoconfigure项目下：</strong></p><ul><li><p>Pom中只留下一个 starter，这是所有的启动器基本配置</p></li><li><p>编写HelloProperties配置类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ConfigurationProperties(prefix = &quot;cc.hello&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloProperties</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String prefix;</span><br><span class="line">    <span class="keyword">private</span> String suffix;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getPrefix</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> prefix;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setPrefix</span><span class="params">(String prefix)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.prefix = prefix;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getSuffix</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> suffix;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setSuffix</span><span class="params">(String suffix)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.suffix = suffix;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>编写一个个人服务HelloService：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloService</span> &#123;</span><br><span class="line">    HelloProperties helloProperties;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> HelloProperties <span class="title function_">getHelloProperties</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> helloProperties;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setHelloProperties</span><span class="params">(HelloProperties helloProperties)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.helloProperties=helloProperties;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">sayHello</span><span class="params">(String name)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> helloProperties.getPrefix()+name+helloProperties.getSuffix();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>编写自动配置HelloServiceAutoConfiguration 类并注入Bean：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 自动配制类</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * EnableConfigurationProperties的作用</span></span><br><span class="line"><span class="comment"> * 1、开启HelloProperties配置绑定功能</span></span><br><span class="line"><span class="comment"> * 2、把这个HelloProperties这个组件自动注册到容器中</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@ConditionalOnWebApplication</span> <span class="comment">//web应用生效</span></span><br><span class="line"><span class="meta">@EnableConfigurationProperties(HelloProperties.class)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloServiceAutoConfiguration</span> &#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    HelloProperties helloProperties;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span> <span class="comment">// @Bean 用在方法上，告诉Spring容器，你可以从下面这个方法中拿到一个Bean</span></span><br><span class="line">    <span class="keyword">public</span> HelloService <span class="title function_">helloService</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">HelloService</span> <span class="variable">service</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HelloService</span>();</span><br><span class="line">        service.setHelloProperties(helloProperties);</span><br><span class="line">        <span class="keyword">return</span> service;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>在resources编写一个自己的 META-INF\spring.factories</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># Auto Configure</span><br><span class="line">org.springframework.boot.autoconfigure.EnableAutoConfiguration=\com.cc.HelloServiceAutoConfiguration</span><br></pre></td></tr></table></figure></li><li><p>安装到maven库</p><p><img src="https://img-blog.csdnimg.cn/87cf1d7fac9e44eb979edb4e948d7b9a.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5p2o5LiZ5a-F,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p></li></ul></li><li><p>测试项目test下：</p><ul><li><p>导入我们自己写的启动器</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.cc<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>starter-autoconfigure<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>编写一个 HelloController 进行测试自己的写的接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloController</span> &#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    HelloService helloService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/hello&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">hello</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> helloService.sayHello(<span class="string">&quot;whh&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>编写配置文件 application.properties</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cc.hello.prefix=&quot;qqqqqq&quot;</span><br><span class="line">cc.hello.suffix=&quot;pppppp&quot;</span><br></pre></td></tr></table></figure></li><li><p>启动项目测试</p><img src="https://s3.bmp.ovh/imgs/2022/09/14/dba0d82514a3c54f.png" style="zoom: 80%;"></li></ul></li></ul><h2 id="3-软件报错问题"><a href="#3-软件报错问题" class="headerlink" title="3. 软件报错问题"></a>3. 软件报错问题</h2><h3 id="3-1-连接不到spring网站，下载不了压缩包"><a href="#3-1-连接不到spring网站，下载不了压缩包" class="headerlink" title="3.1 连接不到spring网站，下载不了压缩包"></a>3.1 连接不到spring网站，下载不了压缩包</h3><img src="https://s3.bmp.ovh/imgs/2022/09/14/5b451564d0b6b8bd.png" style="zoom:67%;"><img src="https://s3.bmp.ovh/imgs/2022/09/14/0ef09097f356a6ac.png" style="zoom:67%;"><ul><li>解决办法：<strong>联想电脑管家的问题，把电脑管家退出之后就可以了</strong></li></ul><h3 id="3-2-maven与IDEA版本不匹配"><a href="#3-2-maven与IDEA版本不匹配" class="headerlink" title="3.2 maven与IDEA版本不匹配"></a>3.2 maven与IDEA版本不匹配</h3><img src="https://img-blog.csdnimg.cn/ad9ea91d01ab4344a8a5a178bb806c45.png" alt="img" style="zoom: 50%;"><ul><li>解决办法：在IDEA中打开“Preferences”，找到“Maven”菜单，在“Maven home directory”中，选择IDEA自带的<strong>Maven3</strong>（自带Maven的版本肯定是兼容的）</li></ul><img src="https://img-blog.csdnimg.cn/9bde46848fb24cfd87b64951b13e3f29.png" alt="img" style="zoom:50%;">]]></content>
      
      
      <categories>
          
          <category> Springboot </category>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Springboot </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown发表过程遇到的问题（持续更新）</title>
      <link href="/2022/09/12/Markdown%E5%8F%91%E8%A1%A8%E8%BF%87%E7%A8%8B%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98%EF%BC%88%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%EF%BC%89/"/>
      <url>/2022/09/12/Markdown%E5%8F%91%E8%A1%A8%E8%BF%87%E7%A8%8B%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98%EF%BC%88%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="1-内容全加载进了代码块"><a href="#1-内容全加载进了代码块" class="headerlink" title="1. 内容全加载进了代码块"></a>1. 内容全加载进了代码块</h2><p>在代码块前不要再加- </p><h2 id="2-如何让-gt-显示原样不被解析"><a href="#2-如何让-gt-显示原样不被解析" class="headerlink" title="2. 如何让# * &gt; 显示原样不被解析"></a>2. 如何让# * &gt; 显示原样不被解析</h2><p>在符号前加反斜杠，如：</p><p>\#</p><p>\*</p><p>\&gt;</p><h2 id="3-页面404"><a href="#3-页面404" class="headerlink" title="3 页面404"></a>3 页面404</h2><p>只有“[构建电子地图网站——03 搭建开发平台：MyBatis+TypeHandler+Jts](<a href="https://chendh.cc/2022/11/16/%E6%9E%84%E5%BB%BA%E7%94%B5%E5%AD%90%E5%9C%B0%E5%9B%BE%E7%BD%91%E7%AB%99%E2%80%94%E2%80%9403">https://chendh.cc/2022/11/16/构建电子地图网站——03</a> 搭建开发平台：MyBatis+TypeHandler+Jts&#x2F;)”这个界面显示不出来，这是第二次遇见这个问题了，之前也遇见过这个问题，就像是这个文档被损坏了一般！删除内容，更改标题都不行，最后还是只有按照之前的那样：把原文档删除，重新建一个文档，再把内容复制过去，再在开头添加一个<code>date</code>属性</p><img src="https://s3.uuu.ovh/imgs/2022/11/23/d29d59d20f512575.png" style="zoom:50%;"><p>在网站<code>标签</code>页面发现有一个SpringBoot和Springboot，当点击<code>SpringBoot</code>时，跳转的页面也是404；而点击<code>Springboot</code>时，跳转的页面却是标签为<code>SpringBoot</code>的文档，就完全错乱的，有可能是Hexo博客系统的标签是不分大小写的~最后都改为Springboot就成功了！</p><img src="https://s3.uuu.ovh/imgs/2022/11/23/896de3a3297f71c1.png" style="zoom: 67%;">]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Springboot快速入门（一）——yaml配置</title>
      <link href="/2022/09/08/Springboot%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%EF%BC%88%E4%B8%80%EF%BC%89%E2%80%94%E2%80%94yaml%E9%85%8D%E7%BD%AE/"/>
      <url>/2022/09/08/Springboot%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%EF%BC%88%E4%B8%80%EF%BC%89%E2%80%94%E2%80%94yaml%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<blockquote><p>以下笔记来自b站up：遇见狂神说（【狂神说Java】SpringBoot最新教程IDEA版通俗易懂）视频+<a href="https://www.cnblogs.com/gh110">subeiLY</a>博客</p></blockquote><h2 id="1-pom-xml文件"><a href="#1-pom-xml文件" class="headerlink" title="1. pom.xml文件"></a>1. pom.xml文件</h2><ul><li>spring-boot-dependencies：核心依赖在父工程中！</li><li>在写或者引入一些Springboot依赖的时候，不需要指定版本，就因为有这些版本仓库</li></ul><h2 id="2-启动器"><a href="#2-启动器" class="headerlink" title="2. 启动器"></a>2. 启动器</h2>   <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span>   </span><br></pre></td></tr></table></figure><ul><li><p>启动器：就是springboot的启动场景</p></li><li><p>比如<strong>spring-boot-starter-web</strong>，自动导入web环境所有的依赖！</p></li><li><p>springboot会将所有的功能场景，都变成一个个的启动器</p></li><li><p>需要使用什么功能，就只需要找到对应的启动器就行<strong>starter</strong>，spring官网有启动器的介绍，找到starter</p></li></ul><h2 id="3-主程序"><a href="#3-主程序" class="headerlink" title="3. 主程序"></a>3. 主程序</h2><ul><li><code>@ComponentScan</code>：<ul><li>该注解在Spring中对应XML配置中的元素</li><li>作用：自动扫描并加载符合条件的组件或者bean，将这个bean定义加载到IOC容器中</li></ul></li><li><code>@SpringBootConfiguration</code>：spring boot的配置<ul><li><code>@Configuration</code>：spring配置类，对应Spring的xml 配置文件</li><li><code>@Component</code>：说明这是一个Spring组件，负责启动应用</li></ul></li><li><code>@EnableAutoConfiguration</code>：开启自动配置功能<ul><li><code>@AutoConfigurationPackage</code>：自动配置包<ul><li><code>@Import(&#123;Registrar.class&#125;)</code>：自动配置包注册</li></ul></li><li><code>@Import(&#123;AutoConfigurationImportSelector.class&#125;)</code>：自动导入组件</li></ul></li></ul><blockquote><p> 结论：</p><ol><li>SpringBoot在启动的时候从类路径下的<strong>META-INF&#x2F;spring.factories</strong>中获取 <strong>EnableAutoConfiguration</strong>指定的值；</li><li>将这些值作为自动配置类导入容器，自动配置类就生效，帮我们进行自动配置工作；</li><li>整个J2EE的整体解决方案和自动配置都在<strong>springboot-autoconfigure的jar包</strong>中；</li><li>它会把所有需要导入的组件，以类名的方式返回，这些组件就会被添加到容器；</li><li>容器中也会存在非常多的 xxxAuto Configuration的文件（@Bean），就是这些类给容器中导入了这个场景需要的所有组件并自动配置，@Configuration, JavaConfig；</li><li>有了自动配置类，免去了我们手动编写配置注入功能组件等的工作！</li></ol></blockquote><h2 id="4-主启动类如何运行"><a href="#4-主启动类如何运行" class="headerlink" title="4. 主启动类如何运行"></a>4. 主启动类如何运行</h2><ul><li><p>SpringApplication 这个类主要做了以下四件事情：</p><ul><li>推断应用的类型是普通的项目还是Web项目；</li><li>查找并加载所有可用初始化器 ， 设置到initializers属性中；</li><li>找出所有的应用程序监听器，设置到listeners属性中；</li><li>推断并设置main方法的定义类，找到运行的主类。</li></ul></li><li><p>run方法：</p><p><img src="https://img-blog.csdnimg.cn/99efd89c9d834e7baf7a5d134765085c.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5p2o5LiZ5a-F,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p></li></ul><h2 id="5-yaml配置"><a href="#5-yaml配置" class="headerlink" title="5. yaml配置"></a>5. yaml配置</h2><ul><li><p>传统的xml配置：</p><p><code>&lt;server&gt;</code><br><code>&lt;port&gt;8081&lt;/port&gt;</code><br><code>&lt;/server&gt;</code></p></li><li><p>yaml配置：</p><p><code>server:   port: 8081</code></p></li><li><p>例如：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8080</span></span><br><span class="line"><span class="comment"># 普通的key-value</span></span><br><span class="line"><span class="attr">name:</span> <span class="string">chendh</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 对象</span></span><br><span class="line"><span class="attr">student:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">chendh</span></span><br><span class="line">  <span class="attr">age:</span> <span class="number">23</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 行内写法</span></span><br><span class="line"><span class="attr">student2:</span> &#123;<span class="attr">name:</span> <span class="string">chendh</span>,<span class="attr">age:</span> <span class="number">23</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 数组 用-值表示数组中的一个元素</span></span><br><span class="line"><span class="attr">pets:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">cat</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">dog</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">pig</span></span><br><span class="line"></span><br><span class="line"><span class="attr">pets2:</span> [<span class="string">cat</span>,<span class="string">dog</span>,<span class="string">pig</span>]</span><br></pre></td></tr></table></figure></li><li><p>基础语法：</p><ul><li><p>空格不能省略</p></li><li><p>以缩进来控制层级关系，只要是<strong>左边对齐</strong>的一列数据都是<strong>同一个层级</strong>的</p></li><li><p>属性和值的大小写都是十分敏感的</p><ul><li>字面量：普通的值 [ 数字，布尔值，字符串 ]</li><li>字面量直接写在后面就可以 ， 字符串默认不用加上双引号或者单引号</li></ul></li><li><p>“ ” 双引号，不会转义字符串里面的特殊字符 ， <strong>特殊字符会作为本身想表示的意思</strong>； 比如 ： name: “github\n subei” 输出 ： github 换行 subei</p></li><li><p>‘’ 单引号，会转义特殊字符 ， <strong>特殊字符最终会变成和普通字符</strong>一样输出 比如 ： name: ‘github\n subei’ 输出 ： github\n subei</p></li></ul></li></ul><h2 id="6-给属性赋值的几种方式——推荐使用yaml配置的方式"><a href="#6-给属性赋值的几种方式——推荐使用yaml配置的方式" class="headerlink" title="6. 给属性赋值的几种方式——推荐使用yaml配置的方式"></a>6. 给属性赋值的几种方式——推荐使用yaml配置的方式</h2><h3 id="6-1-yaml配置的方式"><a href="#6-1-yaml配置的方式" class="headerlink" title="6.1 yaml配置的方式"></a>6.1 yaml配置的方式</h3><ul><li><p>编写一个yaml配置</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">person:</span> </span><br><span class="line"><span class="attr">name:</span> <span class="string">subeiLY</span></span><br><span class="line"><span class="attr">age:</span> <span class="number">18</span></span><br><span class="line"><span class="attr">happy:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">birth:</span> <span class="number">2002</span><span class="string">/03/04</span></span><br><span class="line"><span class="attr">maps:</span> &#123;<span class="attr">k1:</span> <span class="string">v1</span>,<span class="attr">k2:</span> <span class="string">v2</span>&#125;</span><br><span class="line"><span class="attr">lists:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">code</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">book</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">music</span></span><br><span class="line"><span class="attr">dog:</span> </span><br><span class="line">  <span class="attr">name:</span> <span class="string">来福</span></span><br><span class="line">  <span class="attr">age:</span> <span class="number">2</span></span><br></pre></td></tr></table></figure></li><li><p>将person注入到类中</p><p><code>@ConfigurationProperties(prefix = &quot;person&quot;)</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">@ConfigurationProperties作用：</span></span><br><span class="line"><span class="comment">将配置文件中配置的每一个属性的值，映射到这个组件中；</span></span><br><span class="line"><span class="comment">告诉SpringBoot将本类中的所有属性和配置文件中相关的配置进行绑定</span></span><br><span class="line"><span class="comment">参数 prefix = “person” : 将配置文件中的person下面的所有属性一一对应</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 注册bean</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@ConfigurationProperties(prefix = &quot;person&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    <span class="keyword">private</span> Boolean happy;</span><br><span class="line">    <span class="keyword">private</span> Date birth;</span><br><span class="line">    <span class="keyword">private</span> Map&lt;String,Object&gt; maps;</span><br><span class="line">    <span class="keyword">private</span> List&lt;Object&gt; list;</span><br><span class="line">    <span class="keyword">private</span> Dog dog;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 有参无参构造、get、set方法、toString()方法</span></span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>导入依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 导入配置文件处理器，配置文件进行绑定就会有提示，需要重启 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-configuration-processor<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>测试类中测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Springboot02ConfigApplicationTests</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span>  <span class="comment">// 将人类自动注入进来</span></span><br><span class="line">    Person person;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">contextLoads</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(person);    <span class="comment">// 打印一下人物对象</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="6-2-加载指定的配置文件"><a href="#6-2-加载指定的配置文件" class="headerlink" title="6.2 加载指定的配置文件"></a>6.2 加载指定的配置文件</h3><ul><li><p>resources目录下新建一个person.properties文件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">name=chendh</span><br></pre></td></tr></table></figure></li><li><p>代码中指定加载person.properties文件</p><p><code>@PropertySource(value = &quot;classpath:person.properties&quot;)</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="comment">//@ConfigurationProperties(prefix = &quot;person&quot;)</span></span><br><span class="line"><span class="comment">// 指定配置文件绑定</span></span><br><span class="line"><span class="meta">@PropertySource(value = &quot;classpath:person.properties&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;name&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    ......</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="6-3-配置文件占位符"><a href="#6-3-配置文件占位符" class="headerlink" title="6.3 配置文件占位符"></a>6.3 配置文件占位符</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">person:</span><br><span class="line">  name: subeiLY$&#123;random.uuid&#125; # 随机uuid</span><br><span class="line">  age: $&#123;random.<span class="type">int</span>&#125;  # 随机<span class="type">int</span></span><br><span class="line">  happy: <span class="literal">true</span></span><br><span class="line">  birth: <span class="number">2002</span>/<span class="number">03</span>/<span class="number">04</span></span><br><span class="line">  maps: &#123;k1: v1,k2: v2&#125;</span><br><span class="line">  lists:</span><br><span class="line">    - code</span><br><span class="line">    - book</span><br><span class="line">    - music</span><br><span class="line">  dog:</span><br><span class="line">    # 引用person.hello 的值，如果不存在就用 ：后面的值，即 other，然后拼接上_来福</span><br><span class="line">    name: $&#123;person.hello:other&#125;_来福</span><br><span class="line">    age: <span class="number">2</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>结论：</p><ul><li>配置yml和配置properties都可以获取到值 ，推荐yaml配置</li><li>若在某个业务中，只需要获取配置文件中的某个值，可以使用一下 <strong>@value</strong></li><li>若专门编写了一个JavaBean来和配置文件进行一一映射，就直接**@conﬁgurationProperties**，不要犹豫！</li></ul></blockquote><h2 id="7-JSR303数据校验"><a href="#7-JSR303数据校验" class="headerlink" title="7. JSR303数据校验"></a>7. JSR303数据校验</h2><ul><li><p>在pom.xml文件中添加</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-validation<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.5.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>Springboot中可以用**@validated**来校验数据，如果数据异常则会统一抛出异常，方便异常中心统一处理。先写个注解让name只能支持Email格式；</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@ConfigurationProperties(prefix = &quot;person&quot;)</span></span><br><span class="line"><span class="meta">@Validated</span>  <span class="comment">// 数据校验</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line">    <span class="comment">// name必须是邮箱格式</span></span><br><span class="line">    <span class="meta">@Email(message=&quot;邮箱格式错误&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    ......</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>运行结果：default message [name]，邮箱格式不对</p></li><li><p>使用数据校验可以保证数据的正确性，以下是常用的：</p><p><img src="https://img-blog.csdnimg.cn/d33178109c8b485b93f095afaf0b6e09.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5p2o5LiZ5a-F,size_12,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@NotNull(message=&quot;名字不能为空&quot;)</span></span><br><span class="line"><span class="keyword">private</span> String userName;</span><br><span class="line"><span class="meta">@Max(value=120,message=&quot;年龄最大不能查过120&quot;)</span></span><br><span class="line"><span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line"><span class="meta">@Email(message=&quot;邮箱格式错误&quot;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 空检查</span></span><br><span class="line"><span class="meta">@Null</span> 验证对象是否为<span class="literal">null</span></span><br><span class="line"><span class="meta">@NotNull</span> 验证对象是否不为<span class="literal">null</span>, 无法查检长度为<span class="number">0</span>的字符串</span><br><span class="line"><span class="meta">@NotBlank</span> 检查约束字符串是不是Null还有被Trim的长度是否大于<span class="number">0</span>,只对字符串,且会去掉前后空格.</span><br><span class="line"><span class="meta">@NotEmpty</span> 检查约束元素是否为NULL或者是EMPTY.</span><br><span class="line"></span><br><span class="line"><span class="comment">// Booelan检查</span></span><br><span class="line"><span class="meta">@AssertTrue</span> 验证 Boolean 对象是否为 <span class="literal">true</span></span><br><span class="line"><span class="meta">@AssertFalse</span> 验证 Boolean 对象是否为 <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 长度检查</span></span><br><span class="line"><span class="meta">@Size(min=, max=)</span> 验证对象（Array,Collection,Map,String）长度是否在给定的范围之内</span><br><span class="line"><span class="meta">@Length(min=, max=)</span> string is between min and max included.</span><br><span class="line"></span><br><span class="line"><span class="comment">// 日期检查</span></span><br><span class="line"><span class="meta">@Past</span> 验证 Date 和 Calendar 对象是否在当前时间之前</span><br><span class="line"><span class="meta">@Future</span> 验证 Date 和 Calendar 对象是否在当前时间之后</span><br><span class="line"><span class="meta">@Pattern</span> 验证 String 对象是否符合正则表达式的规则</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">.......等等</span><br><span class="line">除此以外，我们还可以自定义一些数据校验规则</span><br></pre></td></tr></table></figure></li></ul><h2 id="8-多环境配置及配置文件位置"><a href="#8-多环境配置及配置文件位置" class="headerlink" title="8. 多环境配置及配置文件位置"></a>8. 多环境配置及配置文件位置</h2><blockquote><p><strong>profile</strong>是Spring对不同环境提供不同配置功能的支持，可以通过激活不同的环境版本，实现快速切换环境</p></blockquote><h3 id="8-1-多配置文件"><a href="#8-1-多配置文件" class="headerlink" title="8.1 多配置文件"></a>8.1 多配置文件</h3><ul><li><p>application-{profile}.properties&#x2F;yaml用来指定多个环境版本</p><p>比如：</p><ul><li>application-test.properties 代表测试环境配置</li><li>application-dev.properties 代表开发环境配置</li></ul></li><li><p>但是Springboot并不会直接启动这些配置文件，它默认使用application.properties主配置文件； 需要通过一个配置来选择需要激活的环境：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 比如在配置文件中指定使用dev环境，我们可以通过设置不同的端口号进行测试；</span></span><br><span class="line"><span class="comment"># 我们启动SpringBoot，就可以看到已经切换到dev下的配置了；</span></span><br><span class="line"><span class="string">spring.profiles.active=dev</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="8-2-yaml多文档块"><a href="#8-2-yaml多文档块" class="headerlink" title="8.2 yaml多文档块"></a>8.2 yaml多文档块</h3><ul><li><p>yaml不需要创建多个配置文件，更加方便！</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8081</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 选择要激活那个环境块</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">profiles:</span></span><br><span class="line">    <span class="attr">active:</span> <span class="string">dev</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8082</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">profiles:</span> <span class="string">dev</span> <span class="comment"># 配置环境的名称</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8083</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">profiles:</span> <span class="string">test</span> <span class="comment"># 配置环境的名称</span></span><br></pre></td></tr></table></figure></li></ul><blockquote><p>注意：如果yml和properties同时都配置了端口，并且没有激活其他环境 ， <strong>默认会使用properties配置文件的！</strong></p></blockquote><h3 id="8-3-配置文件的优先级"><a href="#8-3-配置文件的优先级" class="headerlink" title="8.3 配置文件的优先级"></a>8.3 配置文件的优先级</h3><ul><li><blockquote><p>优先级1：项目路径下的config文件夹配置文件<br>优先级2：项目路径下配置文件<br>优先级3：资源路径下的config文件夹配置文件<br>优先级4：资源路径下配置文件</p></blockquote><p><img src="https://img-blog.csdnimg.cn/f9c5393819344e23a215ec51908a77e5.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5p2o5LiZ5a-F,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p></li><li><p>可以通过<strong>spring.config.location</strong>来改变默认的配置文件位置</p></li><li><p>项目打包好以后，我们可以使用命令行参数的形式，启动项目的时候来指定配置文件的新位置；这种情况，一般是后期运维做的多，相同配置，外部指定的配置文件优先级最高，比如：</p><p><code>java -jar spring-boot-config.jar --</code><br><code>spring.config.location=F:/application.properties</code></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Springboot </category>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Springboot </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Springboot demo1项目（二）</title>
      <link href="/2022/09/07/Springboot%20demo1%E9%A1%B9%E7%9B%AE%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
      <url>/2022/09/07/Springboot%20demo1%E9%A1%B9%E7%9B%AE%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="1-MySQL数据库连接出错：2003-Can’t-connect-to-MySQL-server-on-‘localhost’-10038"><a href="#1-MySQL数据库连接出错：2003-Can’t-connect-to-MySQL-server-on-‘localhost’-10038" class="headerlink" title="1. MySQL数据库连接出错：2003-Can’t connect to MySQL server on ‘localhost’(10038)"></a>1. MySQL数据库连接出错：2003-Can’t connect to MySQL server on ‘localhost’(10038)</h2><p>解决办法：打开任务管理器，在服务处，把MySQL的服务打开</p><h2 id="2-User中setter和getter方法的作用"><a href="#2-User中setter和getter方法的作用" class="headerlink" title="2. User中setter和getter方法的作用"></a>2. User中setter和getter方法的作用</h2><blockquote><p>这是Java中的封装技术。</p></blockquote><ul><li><p>封装：</p><p>也称为信息隐藏，是指利用抽象数据类型将<strong>数据和基于数据的操作</strong>封装在一起，使其构成一个不可分割的独立实体，数据被保护在抽象数据类型的内部，尽可能地隐藏内部的细节，只保留一些<strong>对外接口</strong>使之与外部发生联系。用户无需知道对象内部方法的实现细节，但可以根据对象提供的外部接口(对象名和参数)访问该对象。</p></li><li><p>在设置变量的属性时，我们通常会对数据进行封装，这样就可以增加了数据访问限制，增加了程序可维护性。而实现方法就是：用private去修饰一个变量，然后再用setter方法去设置该变量的值，然后在用getter方法去调用该变量的值。代码如下：<br><img src="https://s3.bmp.ovh/imgs/2022/09/07/deb26c3df5ee9176.png"></p></li><li><p>比如：</p><p>一个父类有多个子类（甚至还有间接子类），程序代码中，子类是不能直接访问父类的private属性的；这时提供的set &#x2F;get方法是很有必要的。诚然，若将父类的属性声明为protected，在子类中就可以直接访问了，但是这种方法破坏了数据的隐藏和封装原则，关键是不利于代码的维护，如果父类中的一个属性改名了，那么在子类中用到该属性名的代码，要发生大范围的修改，而前面的private，set，get方法就比较好，对代码只需小范围的修改，一般都是这么用的，这是一个良好的编程习惯。</p></li></ul><h2 id="3-Java中构造方法的作用"><a href="#3-Java中构造方法的作用" class="headerlink" title="3. Java中构造方法的作用"></a>3. Java中构造方法的作用</h2><blockquote><p>构造方法的主要作用就是<strong>创建对象</strong>。分为有参数和无参数的构造方法。构造方法的名字必须和所在类的名字一致，没有返回值，但不能声明void，访问权限可以为任意，但是一般情况下使用public方法权限。</p></blockquote><ul><li>有参数的构造方法主要就是用于对创建出来的对象进行初始化，如：<br><img src="https://s3.bmp.ovh/imgs/2022/09/07/27b9c522c2933c54.png"></li><li>无参数的构造方法又叫缺省构造方法。若你的类如果没有定义任何构造方法，Java的编译器会配上一个自动缺省构造方法，这个构造方法是空的，不做任何事情，只是为了满足编译需要。或者，也可以自己写一个空的构造方法，在里边对一些属性赋值，或者执行一些其他操作，如：<br><img src="https://s3.bmp.ovh/imgs/2022/09/07/242ee7fc3436c463.png"></li></ul><h2 id="4-super与this关键字"><a href="#4-super与this关键字" class="headerlink" title="4. super与this关键字"></a>4. super与this关键字</h2><p>由于子类不能继承父类的构造方法，因此，如果要<strong>调用父类的构造方法</strong>，可以使用 super 关键字。super 可以用来<strong>访问父类的构造方法、普通方法和属性</strong>。</p><ul><li><p>super与this的区别：</p><ul><li><p>this 指的是<strong>当前对象的引用</strong>，super 是当前对象的<strong>父对象的引用</strong></p></li><li><p>super 关键字的用法：</p><p>super.父类属性名：调用<strong>父类</strong>中的属性</p><p>super.父类方法名：调用<strong>父类</strong>中的方法</p><p>super()：调用<strong>父类</strong>的无参构造方法</p><p>super(参数)：调用<strong>父类</strong>的有参构造方法</p></li><li><p>this 关键字的用法：</p><p>this.属性名：表示<strong>当前对象</strong>的属性</p><p>this.方法名(参数)：表示调用<strong>当前对象</strong>的方法</p></li></ul></li></ul><h2 id="5-Mapper注解的介绍"><a href="#5-Mapper注解的介绍" class="headerlink" title="5. @Mapper注解的介绍"></a>5. @Mapper注解的介绍</h2><blockquote><p>Mybatis是一个优秀的持久层框架，什么是持久层呢？就是可以长时间保存数据到数据库或者硬盘当中，不会像放在内存中，一断电就丢失了。<br>@Mapper注解是由Mybatis框架中定义的一个描述数据层接口的注解，注解往往起到的都是一个描述性作用，用于告诉sprigng框架此接口的实现类由Mybatis负责创建，并将其实现类对象存储到spring容器中。</p></blockquote><ul><li>首先我们需要引入jar包（依赖）,分别是JDBC、MYSQL、MYBATIS。<br><img src="https://s3.bmp.ovh/imgs/2022/09/07/5694d78064ef67fd.png"></li><li>然后创建一个接口类，类的上面需要写上@Mapper注释用来表示该接口类的实现类对象交给mybatis底层创建，然后交由Spring框架管理。</li><li>类里写上对数据库中的表数据的抽象方法</li><li>创建一个测试类，用来测试接口中的类的方法可否调用，测试类的上面要写上@SpringBootTest注解表示这个测试类交给Spring框架管理，声明一个接口类型的属性然后上面用@Autowired注解表示将这个接口类的实现类对象赋值给接口属性，然后写上一个方法，方法体里利用test对象调用接口中的testdelete删除方法，返回值是一个整数的类型的变量。输出这个变量，表示是数据库表中被影响行数。我删除的是id为5这个信息所以只有1个影响行数。<br>参考：<a href="https://segmentfault.com/a/1190000023818508">https://segmentfault.com/a/1190000023818508</a></li></ul><h2 id="6-依赖注入"><a href="#6-依赖注入" class="headerlink" title="6. 依赖注入"></a>6. 依赖注入</h2><h3 id="6-1-什么是依赖注入？"><a href="#6-1-什么是依赖注入？" class="headerlink" title="6.1 什么是依赖注入？"></a>6.1 什么是依赖注入？</h3><p>  如果一个类A的功能实现需要借助于类B，那么就称类B是类A的<strong>依赖</strong>。如果在类A的内部去实例化类B，那么两者之间会出现较高的<strong>耦合</strong>，一旦类B出现了问题，类A也需要进行改造，如果这样的情况较多，每个类之间都有很多依赖，那么就会出现牵一发而动全身的情况，程序会极难维护，并且很容易出现问题。<br>  要解决这个问题，就要把A类对B类的控制权抽离出来，交给一个第三方去做，<strong>把控制权反转给第三方</strong>，就称作<strong>控制反转（IOC Inversion Of Control）</strong>。控制反转是一种思想，是能够解决问题的一种可能的结果，而<strong>依赖注入（Dependency Injection）</strong>就是其最典型的实现方法。由第三方（我们称作IOC容器）来控制依赖，把他通过<strong>构造函数、属性或者工厂模式</strong>等方法，注入到类A内，这样就极大程度的对类A和类B进行了解耦。<br>参考：<a href="https://blog.csdn.net/bandaoyu/article/details/104761209">https://blog.csdn.net/bandaoyu/article/details/104761209</a> </p><h3 id="6-2-如何实现依赖注入"><a href="#6-2-如何实现依赖注入" class="headerlink" title="6.2 如何实现依赖注入"></a>6.2 如何实现依赖注入</h3><p>  以往Spring使用中，依赖注入一般都是通过在Spring的<strong>配置文件中添加bean方法</strong>实现的，相对于这个方式SpringBoot的实现方式就显得非常便捷了。SpringBoot的实现方式基本都是<strong>通过注解实现</strong>的。</p>]]></content>
      
      
      <categories>
          
          <category> Springboot </category>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Springboot </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>本地Git连接远程GitHub仓库</title>
      <link href="/2022/09/07/%E6%9C%AC%E5%9C%B0Git%E8%BF%9E%E6%8E%A5%E8%BF%9C%E7%A8%8BGitHub%E4%BB%93%E5%BA%93/"/>
      <url>/2022/09/07/%E6%9C%AC%E5%9C%B0Git%E8%BF%9E%E6%8E%A5%E8%BF%9C%E7%A8%8BGitHub%E4%BB%93%E5%BA%93/</url>
      
        <content type="html"><![CDATA[<blockquote><p>以下是已经存在GitHub账号和本地已经安装好git的情况！</p></blockquote><h4 id="1-在GitHub建立一个仓库"><a href="#1-在GitHub建立一个仓库" class="headerlink" title="1. 在GitHub建立一个仓库"></a>1. 在GitHub建立一个仓库</h4><h4 id="2-本地建立一个文件夹"><a href="#2-本地建立一个文件夹" class="headerlink" title="2. 本地建立一个文件夹"></a>2. 本地建立一个文件夹</h4><h4 id="3-在本地文件夹右击Git-Bash-Here"><a href="#3-在本地文件夹右击Git-Bash-Here" class="headerlink" title="3. 在本地文件夹右击Git Bash Here"></a>3. 在本地文件夹右击Git Bash Here</h4><ul><li><pre><code>git config --global user.name &quot;(自己的登录名)&quot;</code></pre></li><li><pre><code>git config --global user.emial &quot;(自己用的登陆邮箱)&quot;</code></pre></li><li><pre><code>git config --global user.name  ：检查是否登录成功</code></pre></li><li><pre><code>cd 本地文件夹 ：进入文件夹</code></pre></li><li><pre><code>git init ：初始化</code></pre></li><li><pre><code>git clone https://github.com/……. ：克隆仓库</code></pre></li><li><pre><code>cd 克隆下来的文件夹 ：进入克隆下来的文件夹</code></pre></li><li><pre><code>git add .  ：添加该文件夹下所有的代码到git本地仓库</code></pre></li><li><pre><code>git commit -m &quot;First commit&quot; ：代码同步到git上</code></pre></li><li><pre><code>(Git branch -M main )</code></pre></li><li><pre><code>git push -u origin master ：弹出登录窗口</code></pre></li></ul><blockquote><p>之后本地的文件就全部提交到GitHub上面</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Springboot demo1项目（一）</title>
      <link href="/2022/09/06/Springboot%20demo1%E9%A1%B9%E7%9B%AE%EF%BC%88%E4%B8%80%EF%BC%89/"/>
      <url>/2022/09/06/Springboot%20demo1%E9%A1%B9%E7%9B%AE%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h3 id="1-注解有什么用？"><a href="#1-注解有什么用？" class="headerlink" title="1. 注解有什么用？"></a>1. 注解有什么用？</h3><ul><li><p>注解里面不用写方法变量什么的，只起一个标注的作用，不是具体代码，标识类或方法等需要执行的任务</p></li><li><p>在编译期间或者运行期间读取程序，通过反射机制去判断及读取相应操作，当程序运行时需要反射机制去获取哪些方法、类、变量等添加了该注解。<br> <img src="https://s3.bmp.ovh/imgs/2022/09/06/07b5a6ea6a1cb862.png"><br> <img src="https://s3.bmp.ovh/imgs/2022/09/06/fc38e5fb08c6e549.png"><br> <img src="https://s3.bmp.ovh/imgs/2022/09/06/f1698ec430dc2e32.png"></p></li><li><p>自定义注解：</p><ul><li>添加一个方法注解InitMethod<br><img src="https://s3.bmp.ovh/imgs/2022/09/06/b768fcf0ccefaec7.png"></li></ul></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">   package cn.bdqn.demo1;</span><br><span class="line">import java.lang.annotation.ElementType;</span><br><span class="line">import java.lang.annotation.Retention;</span><br><span class="line">import java.lang.annotation.RetentionPolicy;</span><br><span class="line">import java.lang.annotation.Target;</span><br><span class="line">@Target(ElementType.METHOD)    //对方法进行注解</span><br><span class="line">@Retention(RetentionPolicy.RUNTIME)    //运行时执行注解</span><br><span class="line">public @interface InitMethod&#123;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><ul><li>写一个InitDemo类使用方法注解</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">   package cn.bdqn.demo1;</span><br><span class="line">public class InitDemo&#123;</span><br><span class="line">@InitMethod</span><br><span class="line">public void init()&#123;</span><br><span class="line">System.out.println(&quot;init.....&quot;);</span><br><span class="line">&#125;</span><br><span class="line">@InitMethod</span><br><span class="line">public void test()&#123;</span><br><span class="line">System.out.println(&quot;test...&quot;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>在Test类中遍历InitDemo类中所有方法<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"> package cn.bdqn.demo1;</span><br><span class="line">import java.lang.reflect.Method;</span><br><span class="line">public class Test&#123;</span><br><span class="line">public static void main(String[]args) throws Exception&#123;</span><br><span class="line">Class clazz=Class.forName(&quot;cn.bdqn.demo1.InitDemo&quot;);//拿到InitDemo类</span><br><span class="line">Method[] methods=clazz.getMethods();//遍历InitDemo类中所有方法</span><br><span class="line">if(methods!=null)&#123;</span><br><span class="line">for(Methodmethod:methods)&#123;</span><br><span class="line">Boolean isInitMethod=method.isAnnotationPresent(InitMethod.class);//isAnnotationPresent判断是否拥有某一个注解，并返回布尔类型</span><br><span class="line">if(isInitMethod)&#123;</span><br><span class="line">method.invoke(clazz.getConstructor(null).newInstance(null),null);</span><br><span class="line">   &#125;&#125;&#125;&#125;&#125;</span><br></pre></td></tr></table></figure>参考：<a href="https://www.bilibili.com/video/BV1Py4y1Y77P/?spm_id_from=333.788.recommend_more_video.5&amp;vd_source=e18fd054c638dd62bfe0ba010156eb06">https://www.bilibili.com/video/BV1Py4y1Y77P/?spm_id_from=333.788.recommend_more_video.5&amp;vd_source=e18fd054c638dd62bfe0ba010156eb06</a></li></ul><h3 id="2-程序中所用到的注解"><a href="#2-程序中所用到的注解" class="headerlink" title="2. 程序中所用到的注解"></a>2. 程序中所用到的注解</h3><ul><li>main方法：<ul><li>@SpringBootApplication：申明让Springboot自动给程序进行必要的配置，这个配置等同于：（@Configuration 、@EnableAutoConfiguration 、 @ComponentScan） 三个配置；</li><li><u>@MapperScan(value &#x3D; “cn.bdqn.demo1.mapper”)</u>：指定要扫描的Mapper类的包的路径；</li></ul></li><li>controller层中：<ul><li>@Controller ：用于定义控制器类，在spring项目中由控制器负责将用户发来的URL请求转发到对应的服务接口（service层），<br>  一般这个注解在类中，通常方法需要配合注解@RequestMapping</li><li>@Resource：与@Autowired 用法 用法相似，也是做依赖注入的，从容器中自动获取bean。但还是有一定的区别；</li><li><u>@RequestMapping(“&#x2F;list”)</u>：提供路由信息，负责URL到Controller中的具体函数的映射</li><li><u>@GetMapping(“&#x2F;updatePage&#x2F;{id}”)</u>：get请求，等价于<u>@RequestMapping(value&#x3D;”&#x2F;updatePage&#x2F;{id}”,method&#x3D;RequestMethod.GET)</u></li><li><u>@PostMapping(“&#x2F;update”)</u>：post请求，等价于<u>@RequestMapping(value&#x3D;”&#x2F;update”,method&#x3D;RequestMethod.POST)</u></li><li>@PathVariable：在@RequestMapping注解方法中获取URL变量  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">@RequestMapping(value=&quot;/hello/&#123;id&#125;/&#123;name&#125;&quot;,method= RequestMethod.GET)</span><br><span class="line">publicString sayHello(@PathVariable(&quot;id&quot;) Integer id,@PathVariable(&quot;name&quot;) String name)&#123;</span><br><span class="line">return&quot;id:&quot;+id+&quot; name:&quot;+name;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li>service层中：<ul><li>@Service：一般用于修饰service层的组件；</li><li>@Override：重写父类；</li></ul></li><li>mapper层&#x2F;dao层：<ul><li>@Mapper：使用@Mapper注解要定义成一个接口interface；不用写mapper映射文件（xml）;为这个接口生成一个实现类，让别的类进行引用；如果有多个类的话，可以使用@MapperScan进行注解，一次性注解多个包；</li><li><u>@Select(“select * from user”)</u>：选择数据库中的数据</li><li><u>@Insert(“ insert into  user( username,password ) values (#{username},#{password}) “)</u>：插入数据库中的数据</li><li><u>@Delete(“ delete from user where id&#x3D; #{id} “)</u>：删除数据库中的数据</li><li><u>@Select(“select * from user where id&#x3D; #{1} “)</u>：按id选择数据库中的数据</li><li><u>@Update(“update user set username&#x3D;#{username},password&#x3D;#{password} where id&#x3D;#{id} “)</u>：更新数据库中的数据</li></ul></li></ul><p>参考：<a href="https://blog.csdn.net/fenlin88l/article/details/89466723">https://blog.csdn.net/fenlin88l/article/details/89466723</a><br><a href="https://blog.csdn.net/weixin_40753536/article/details/81285046">https://blog.csdn.net/weixin_40753536/article/details/81285046</a></p><h3 id="3-Model层"><a href="#3-Model层" class="headerlink" title="3. Model层"></a>3. Model层</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">@RequestMapping(&quot;/list&quot;)//路径</span><br><span class="line">public String userList(Model model)&#123;</span><br><span class="line">List&lt;User&gt; users=userService.findAll();</span><br><span class="line">model.addAttribute(&quot;users&quot;,users);</span><br><span class="line">return&quot;index&quot;;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><ul><li>Model是一个接口，包含addAttribute方法，其实现类是ExtendedModelMap。ExtendedModelMap继承了ModelMap类，ModelMap类实现了Map接口。</li><li>在控制器中，数据会存放到Model对象中，当需要生成HTML的时候，模板引擎会根据名字来定位数据。从广义上来说，Model指的是MVC中的M，即Model(模型)。从狭义上讲，Model就是个key-value集合。<br><img src="https://s3.bmp.ovh/imgs/2022/09/06/8b12ed2675e79c46.png"></li><li>往Model里放数据还有另外一种方式，使用ModelAndView。正如它的名字一样，ModelAndView将Model和视图名绑定在一起，作为请求处理方法的返回值。<br><img src="https://s3.bmp.ovh/imgs/2022/09/06/d0c15144cc7806e7.png"><br>参考：<a href="https://fookwood.com/spring-boot-tutorial-9-model">https://fookwood.com/spring-boot-tutorial-9-model</a></li></ul><h3 id="4-Integer和int的区别"><a href="#4-Integer和int的区别" class="headerlink" title="4. Integer和int的区别"></a>4. Integer和int的区别</h3><pre><code>基本数据类型: boolean，char，byte，short，int，long，float，double封装类类型：Boolean，Character，Byte，Short，Integer，Long，Float，Double</code></pre><h4 id="4-1-基本使用对比"><a href="#4-1-基本使用对比" class="headerlink" title="4.1 基本使用对比"></a>4.1 基本使用对比</h4><ul><li>Integer是int的封装类；int是基本数据类型；</li><li>Integer变量必须实例化后才能使用；int变量不需要；</li><li>Integer实际是对象的引用，指向此new的Integer对象；int是直接存储数据值 ；</li><li>Integer的默认值是null；int的默认值是0。<h4 id="4-2-深入对比"><a href="#4-2-深入对比" class="headerlink" title="4.2 深入对比"></a>4.2 深入对比</h4></li><li>由于Integer变量实际上是对一个Integer对象的引用，所以两个通过new生成的Integer变量永远是不相等的（因为new生成的是两个对象，其内存地址不同）<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Integer i = new Integer(100);</span><br><span class="line">Integer j = new Integer(100);</span><br><span class="line">   System.out.print(i == j); //false</span><br></pre></td></tr></table></figure></li><li>Integer变量和int变量比较时，只要两个变量的值是向等的，则结果为true（因为封装类Integer和基本数据类型int比较时，java会自动拆包装为int，然后进行比较，实际上就变为两个int变量的比较）<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Integer i = new Integer(100);</span><br><span class="line">int j = 100；</span><br><span class="line">System.out.print(i == j); //true</span><br></pre></td></tr></table></figure></li><li>非new生成的Integer变量和new Integer()生成的变量比较时，结果为false。因为非new生成的Integer变量指向的是静态常量池中cache数组中存储的指向了堆中的Integer对象，而new Integer()生成的变量指向堆中新建的对象，两者在内存中的对象引用（地址）不同<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Integer i = new Integer(100);</span><br><span class="line">Integer j = 100;</span><br><span class="line">System.out.print(i == j); //false</span><br></pre></td></tr></table></figure></li><li>对于两个非new生成的Integer对象，进行比较时，如果两个变量的值在区间-128到127之间，则比较结果为true，如果两个变量的值不在此区间，则比较结果为false<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Integer i = 100;</span><br><span class="line">Integer j = 100;</span><br><span class="line">System.out.print(i == j); //true</span><br><span class="line"></span><br><span class="line">Integer i = 128;</span><br><span class="line">Integer j = 128;</span><br><span class="line">System.out.print(i == j); //false</span><br></pre></td></tr></table></figure></li><li>自动装箱和拆箱<ul><li>自动装箱：将基本数据类型重新转化为对象<br>  &#x2F;&#x2F; 声明一个Integer对象，用到了自动的装箱：解析为:<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">   Integer num = Integer.valueOf(9);</span><br><span class="line">Integer num = 9;</span><br></pre></td></tr></table></figure></li><li>自动拆箱：将对象重新转化为基本数据类型，因为对象时不能直接进行运算的，而是要转化为基本数据类型后才能进行加减乘除<br>  &#x2F; &#x2F;声明一个Integer对象<br>  <code>   Integer num = 9;  </code><br>   &#x2F;&#x2F; 进行计算时隐含的有自动拆箱<br>   <code>  System.out.print(num--);  </code></li></ul></li></ul><p>参考：<a href="https://blog.csdn.net/chenliguan/article/details/53888018">https://blog.csdn.net/chenliguan/article/details/53888018</a></p><h3 id="5-HttpServletRequest和HttpServletReponse"><a href="#5-HttpServletRequest和HttpServletReponse" class="headerlink" title="5. HttpServletRequest和HttpServletReponse"></a>5. HttpServletRequest和HttpServletReponse</h3><p>HttpServletRequest对象专门用于封装 HTTP 请求消息，简称 request 对象。</p><p>HttpServletReponse 对象用于封装 HTTP 响应信息。</p>]]></content>
      
      
      <categories>
          
          <category> Springboot </category>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Springboot </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客+搭载腾讯云迁移步骤</title>
      <link href="/2022/08/24/%E8%BF%81%E7%A7%BB%E5%8D%9A%E5%AE%A2/"/>
      <url>/2022/08/24/%E8%BF%81%E7%A7%BB%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<p>最近更换了电脑，离家之前只把旧电脑本地保存的hexo博客文件夹复制了下来，以为会很麻烦，其实步骤倒也挺简单的，下面将步骤记录一下！</p><blockquote><p>原博客平台：Hexo+腾讯云+宝塔面板+Xshell</p></blockquote><h3 id="1-拷贝原电脑本地的Hexo博客文件夹"><a href="#1-拷贝原电脑本地的Hexo博客文件夹" class="headerlink" title="1. 拷贝原电脑本地的Hexo博客文件夹"></a>1. 拷贝原电脑本地的Hexo博客文件夹</h3><p>删除node_modules文件夹，这个文件夹后面会再生成一个新node_modules的文件夹</p><p><img src="https://s3.bmp.ovh/imgs/2022/08/26/f5a0449194e4fefc.png"></p><h3 id="2-安装node-js"><a href="#2-安装node-js" class="headerlink" title="2. 安装node.js"></a>2. 安装node.js</h3><p>参考链接：<a href="https://www.runoob.com/nodejs/nodejs-install-setup.html">https://www.runoob.com/nodejs/nodejs-install-setup.html</a></p><ul><li>node -v 测试是否安装成功</li></ul><p><img src="https://s3.bmp.ovh/imgs/2022/08/26/abdd16fe94015c7f.png"></p><h3 id="3-安装git"><a href="#3-安装git" class="headerlink" title="3. 安装git"></a>3. 安装git</h3><ul><li>设置git环境变量，在Path路径中新增git文件安装路径下的bin文件路径<br><img src="https://s3.bmp.ovh/imgs/2022/08/26/e6737611d5611f83.png"></li><li>设置环境变量…&#x2F;AppData&#x2F;Roaming&#x2F;npm</li><li>重启git</li></ul><p>未配置环境变量前所报的错误：<br><img src="https://s3.bmp.ovh/imgs/2022/08/26/e84f25fd67371497.png"></p><p><img src="https://s3.bmp.ovh/imgs/2022/08/26/bafe44e0b8ce447d.png"></p><h3 id="4-安装Hexo"><a href="#4-安装Hexo" class="headerlink" title="4. 安装Hexo"></a>4. 安装Hexo</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p><img src="https://s3.bmp.ovh/imgs/2022/08/26/78ff1786c95e9a43.png"></p><h3 id="5-重新下载node-moudles文件"><a href="#5-重新下载node-moudles文件" class="headerlink" title="5.重新下载node_moudles文件"></a>5.重新下载node_moudles文件</h3> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install </span><br></pre></td></tr></table></figure><p><img src="https://s3.bmp.ovh/imgs/2022/08/26/0fb2193f9c177635.png"></p><h3 id="6-下载Xshell连接腾讯云服务器"><a href="#6-下载Xshell连接腾讯云服务器" class="headerlink" title="6. 下载Xshell连接腾讯云服务器"></a>6. 下载Xshell连接腾讯云服务器</h3><h3 id="7-博客测试"><a href="#7-博客测试" class="headerlink" title="7. 博客测试"></a>7. 博客测试</h3><ul><li>生成静态文件 <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo -g</span><br></pre></td></tr></table></figure></li></ul><p>出错，禁止在此系统运行脚本<br><img src="https://s3.bmp.ovh/imgs/2022/08/26/1977705e3b956028.png"><br>解决办法：在系统设置中允许执行powershell脚本<br><a href="https://blog.csdn.net/weixin_43874301/article/details/111102493">https://blog.csdn.net/weixin_43874301/article/details/111102493</a></p><p>再次运行，成功！<br><img src="https://s3.bmp.ovh/imgs/2022/08/26/7aa97ff5fd4852df.png"></p><ul><li>本地预览效果</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><ul><li>推送到云服务器</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> others </category>
          
      </categories>
      
      
        <tags>
            
            <tag> others </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo发布文章</title>
      <link href="/2022/04/23/hexo%E5%8F%91%E5%B8%83%E6%96%87%E7%AB%A0/"/>
      <url>/2022/04/23/hexo%E5%8F%91%E5%B8%83%E6%96%87%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="1-hexo发布文章的大致方法"><a href="#1-hexo发布文章的大致方法" class="headerlink" title="1. hexo发布文章的大致方法"></a>1. hexo发布文章的大致方法</h2><p>（参考链接：<a href="https://blog.csdn.net/weixin_44517301/article/details/106230638">如何发布文章到自己搭建的hexo博客上！_隔壁郑同学的博客-CSDN博客_hexo如何发布文章</a>）</p><blockquote><ul><li>直接把.md文件复制到source&#x2F;_post文件夹中</li><li>复制完之后然后使用文本编辑器打开它，在第一行加上title</li><li>Hexo g 生成静态文件</li><li>Hexo s 本地预览</li><li>Hexo d 发布到服务器</li></ul></blockquote><p><strong>遇到的问题：</strong></p><ul><li>hexo博客 markdown解析不了标题(#)</li></ul><p>markdown标题标准写法写法需要在”#”和后面字符之间加一个空格，如果不加空格 有些引擎就解析不了</p><h2 id="2-图片加载不出来——今天遇到最恼火的问题！"><a href="#2-图片加载不出来——今天遇到最恼火的问题！" class="headerlink" title="2. 图片加载不出来——今天遇到最恼火的问题！"></a>2. 图片加载不出来——今天遇到最恼火的问题！</h2><ul><li><h3 id="大部分人的方法："><a href="#大部分人的方法：" class="headerlink" title="大部分人的方法："></a>大部分人的方法：</h3></li></ul><p>参考链接：<a href="https://www.jianshu.com/p/f72aaad7b852">HEXO插入图片（详细版） - 简书 (jianshu.com)</a>    <a href="https://blog.csdn.net/lwcxy966/article/details/91363965">Hexo 图片不显示_风清云韵！的博客-CSDN博客</a></p><blockquote><ul><li>安装插件：hexo-asset-image<br>npm install <a href="https://github.com/CodeFalling/hexo-asset-image">https://github.com/CodeFalling/hexo-asset-image</a> –save </li><li>修改根目录_config.yml文件<br>post_asset_folder: true</li><li>修改&#x2F;node_modules&#x2F;hexo-asset-image&#x2F;index.js中内容：<br>参考链接：<a href="https://blog.csdn.net/lwcxy966/article/details/91363965">https://blog.csdn.net/lwcxy966/article/details/91363965</a></li><li>把图片放到与md文件同名的文件夹中，再复制到md文件</li><li>然后就：hexo clean、hexo g、hexo s</li></ul></blockquote><p>我用这个方法还是显示不出来！最后看到一篇博文说hexo-asset-image 已无效，那么可能我之前下载的插件并没有用，也就是一直在做无用功！o(╥﹏╥)o</p><p>参考链接：<a href="https://blog.csdn.net/yiyungent/article/details/121871157">hexo-asset-img | Hexo 本地图片插件: 转换 图片相对路径 为 asset_img_studyla的博客-CSDN博客_hexo图片插件</a></p><ul><li><h3 id="稍微改进的方法："><a href="#稍微改进的方法：" class="headerlink" title="稍微改进的方法："></a>稍微改进的方法：</h3></li></ul><p>参考链接：<a href="https://blog.csdn.net/weixin_30734435/article/details/98497054">解决Hexo图片无法显示问题_weixin_30734435的博客-CSDN博客</a></p><p>插入图片时用这种方式：<code>&#123;% asset\_img test.jpg %&#125;</code>，不用<code>!\[\](test.jpg)</code></p><p>这样试了确实是可以的，包括官方文档也写了这种方式，总之就是相对路径和绝对路径的问题！</p><p><img src="https://pic.imgdb.cn/item/630724b116f2c2beb13148d6.png"></p><!-- ![](2022-04-23-23-42-16.png) --><p>但是这种方式在vscode中使用起来也比较繁琐，需要手动一个一个地去更改图片！</p><ul><li><h3 id="成功的简便方法"><a href="#成功的简便方法" class="headerlink" title="成功的简便方法"></a>成功的简便方法</h3></li></ul><p>参考链接：<a href="https://hexo.io/zh-cn/docs/asset-folders#%E7%9B%B8%E5%AF%B9%E8%B7%AF%E5%BE%84%E5%BC%95%E7%94%A8%E7%9A%84%E6%A0%87%E7%AD%BE%E6%8F%92%E4%BB%B6">资源文件夹 | Hexo</a></p><p>其实答案就在官方文档就有o(╥﹏╥)o，我还全网到处去找方法，其实别人写的方法也就是从官方文档复制过去的，意思还没有写完全！</p><p><img src="https://pic.imgdb.cn/item/630724e016f2c2beb1316ee9.png"></p><!-- ![](image_3.58b9ca5e.png) --><p>意思就是：hexo-renderer-marked 3.1.0 引入了一个新选项，允许您在 Markdown 中嵌入图像，而无需使用asset_img 标签插件。</p><blockquote><ul><li>npm install hexo-renderer-marked –save</li></ul></blockquote><blockquote><ul><li>修改_config.yml配置文件：</li></ul></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">post_asset_folder: true</span><br><span class="line">marked:</span><br><span class="line">prependRoot: true</span><br><span class="line">postAsset: true</span><br></pre></td></tr></table></figure><p>（主要就是增加后面两行！）</p><ul><li><h3 id="其他问题"><a href="#其他问题" class="headerlink" title="其他问题"></a>其他问题</h3></li></ul><p>在尝试了第一二种方法后，当把_config.yml配置文件中的relative link改为true之后，用第一种方法图片也能显示了，这个意思就是允许把链接改为与根目录的相对地址，这里改动之后也相当于图片的绝对地址改为了相对地址。Hexo s本地预览的时候，图片界面也都显示正常！但当hexo d提交到服务器上去，用域名访问时，图片虽然是正常加载的，但是界面的格式完全没有了！！！后来把true换为false就又好了o(╥﹏╥)o。具体原因我也不清楚，还是推荐使用绝对地址！<br><img src="https://pic.imgdb.cn/item/630724e316f2c2beb13171af.png"></p><!-- ![](image_4.45d66e51.png)--><ul><li><h4 id="图片加载速度慢！"><a href="#图片加载速度慢！" class="headerlink" title="图片加载速度慢！"></a>图片加载速度慢！</h4></li></ul><p>中间改动过程中其实有一两次步骤方法对了的，但是就是没有看到图片，后来等了一会儿图片才加载出来，是因为这个主题，作者设置了一个图片延迟加载！</p><p>参考文档：<a href="https://github.com/Troy-Yang/hexo-lazyload-image">Troy-Yang&#x2F;hexo-lazyload-image: lazyload image plugin for Hexo. (github.com)</a></p><p>同样在_config.yml文件中修改一下配置就行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">lazyload:</span><br><span class="line">enable: false</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>初始markdown</title>
      <link href="/2022/04/22/%E5%88%9D%E8%AF%86markdown/"/>
      <url>/2022/04/22/%E5%88%9D%E8%AF%86markdown/</url>
      
        <content type="html"><![CDATA[<p><strong>用notepad++也可以用markdown语法，但是好像画图不太能实现：</strong></p><p><em><a href="https://blog.csdn.net/weixin_39345384/article/details/80786184">Win10环境下，告别MarkdownPad，用Notepad++搭建编写md文档的环境_对方北方的博客-CSDN博客_markdownpad</a></em></p><p><strong>遂又下载了一个vscode，根据b站up主的视频和文档：</strong><br><em><a href="https://www.bilibili.com/video/BV1si4y1472o/?spm_id_from=333.788.recommend_more_video.1">教你Markdown+VSCODE实现最完美流畅写作体验_哔哩哔哩_bilibili</a></em></p><p><em><a href="https://www.limfx.pro/ReadArticle/57/yi-zhong-xie-zuo-de-xin-fang-fa">一种写作的新方法 (limfx.pro)</a></em></p><p><strong>下载的插件：</strong></p><blockquote><ol><li><a href="https://marketplace.visualstudio.com/items?itemName=yzhang.markdown-all-in-one">Markdown All in One</a> 这个辅助Markdown写作的。</li><li><a href="https://marketplace.visualstudio.com/items?itemName=yzane.markdown-pdf">Markdown PDF</a> 这个可以把Markdown渲染成PDF，这样你可以发给不会使用Markdown的人阅读。</li><li><a href="https://marketplace.visualstudio.com/items?itemName=mushan.vscode-paste-image">Paste Image</a> 这个允许你直接将图片粘贴到Markdown文件。</li><li><a href="https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker">Code Spell Checker</a>&#96; 这个是拼写检查，帮你找错别字的，这个是支持英文，需要中文的话可以使用Spell Right，不过不知为啥在某些电脑上不能用。</li><li><a href="https://marketplace.visualstudio.com/items?itemName=Limfx-Lee.limfxcodeex">LimfxCodeEx</a> 这个允许你快速的发表你写的文章，是改变你写作人生的一个神器。</li></ol></blockquote><p><strong>对比一下notepad++和vscode的预览模式，vscode更加完美一点！</strong></p><p><img src="https://pic.imgdb.cn/item/630726ba16f2c2beb1328423.png"></p><!-- ![](image_1.47604f5c.png) --><p><img src="https://pic.imgdb.cn/item/630726d516f2c2beb1329978.png"></p><!-- ![](image_2.a165b6c7.png) --><p><strong>Markdown相关语法：</strong></p><ol><li>标题</li></ol><ul><li># 这是一级标题，一级标题一般一篇文章只有一个</li><li>## 这是二级标题</li><li>### 三级标题</li><li>#### 四级标题</li><li>##### 五级标题</li></ul><ol start="2"><li>强调</li></ol><ul><li>一种是 *斜体* ,一种是 **加粗**</li><li>安装了Markdown All in One ，可和Word一样，用<strong>ctrl+i，ctrl+b</strong>来分别切换选中文字的斜体和加粗</li></ul><ol start="3"><li>列表</li></ol><ul><li>没有编号的列表：用**+ - ***号放在前面</li></ul><p><img src="https://pic.imgdb.cn/item/630726ef16f2c2beb132a69c.png"></p><!-- ![](image_3.2cba2087.png) --><ul><li>有编号的列表：阿拉伯数字+.+空格写内容 1. one</li><li>在一级内容前按下Tab，就变为二级内容</li></ul><ol start="4"><li>插入图片</li></ol><p>因安装了Paste Image插件，则就可以在要插入的地方按<strong>ctrl+alt+v</strong>将图片粘贴插入</p><ol start="5"><li><p>公式<br>(目前用处不多！)</p></li><li><p>表格</p></li></ol><p>用：<a href="https://www.tablesgenerator.com/markdown_tables#">Markdown Tables Generator</a> 会省事很多</p><ol start="7"><li>链接</li></ol><p>使用Markdown All in One,则可复制一个合法的url，然后选中某个文字直接粘贴变成一个链接：</p><ol start="8"><li>代码块</li></ol><p>在代码前面加```，后面也要加```；也可以前面只加`，后面也只加`</p><p>若是在前面加```python或者```javascript，则会由高亮显示，不加就没有</p><p>```python</p><p>s &#x3D; “Python syntax highlighting”</p><p>print s</p><p>```</p><p>```javascript</p><p>var s &#x3D; “JavaScript syntax highlighting”;</p><p>alert(s);</p><p>```</p><p>不加python&#x2F;javascrtipt：</p><p><img src="https://pic.imgdb.cn/item/6307272316f2c2beb132c451.png"></p><!-- ![](image_8.9492db4a.png) --><p>加了python&#x2F;javascrtipt：</p><p><img src="https://pic.imgdb.cn/item/6307273a16f2c2beb132d112.png"></p><!-- ![](image_9.89e4224a.png) --><p>分割线：单独一行打三个减号：-–</p><p>引用：在需要有用的一行前加上&gt;:</p>]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>重头再来！</title>
      <link href="/2022/04/21/%E9%87%8D%E5%A4%B4%E5%86%8D%E6%9D%A5%EF%BC%81/"/>
      <url>/2022/04/21/%E9%87%8D%E5%A4%B4%E5%86%8D%E6%9D%A5%EF%BC%81/</url>
      
        <content type="html"><![CDATA[<p>   继昨天把腾讯云服务器重置之后，登录服务器按照原来的方式就不行了，账号密码也改变了，现记录下操作中所遇到的问题！</p><h2 id="连接服务器准备工作："><a href="#连接服务器准备工作：" class="headerlink" title="连接服务器准备工作："></a>连接服务器准备工作：</h2><ol><li><p>首先先解决xshell登录问题：<br>   （参考链接：<a href="https://blog.csdn.net/weixin_42488417/article/details/102931660">https://blog.csdn.net/weixin_42488417/article/details/102931660</a> ，阿里云服务器初始使用public key登录ssh基于（xshell工具））</p></li><li><p>xshell报错：The remote SSH server rejected X11 forwarding警告<br>   （参考链接：<a href="https://zhuanlan.zhihu.com/p/112713066">https://zhuanlan.zhihu.com/p/112713066</a> ）</p></li><li><p>XShell只能通过public key方法登陆，修改为password方法登陆<br>   （参考链接：<a href="https://blog.csdn.net/Augenstern_/article/details/104253124">https://blog.csdn.net/Augenstern_/article/details/104253124</a> ）</p></li><li><p>登录宝塔用户名和密码在xshell中用命令查询：bt default</p></li><li><p>重新设置ssh密匙<br>   （参考链接：<a href="https://blog.csdn.net/h_h33/article/details/82178323">https://blog.csdn.net/h_h33/article/details/82178323</a> ）</p></li></ol><hr><h2 id="开始配置"><a href="#开始配置" class="headerlink" title="开始配置"></a>开始配置</h2><p><strong>配置过程主要参考文档</strong><br>  <em>（<a href="https://blog.csdn.net/weixin_45682081/article/details/105992591">https://blog.csdn.net/weixin_45682081/article/details/105992591</a> 使用宝塔面板一键部署hexo博客）</em></p><ol><li>输入hexo d的时候，报错：bash: git-receive-pack: command not found</li></ol><ul><li><p>按照解决办法输入：sudo ln -s &#x2F;usr&#x2F;local&#x2F;git&#x2F;bin&#x2F;git-receive-pack  &#x2F;usr&#x2F;bin&#x2F;git-receive-pack 也依然没用，最后再看了几个文档的方法，我也忘记具体是哪一步解决这个问题的了，o(╥﹏╥)o 下次尽量边解决边记录一下</p></li><li><p>按照：<a href="https://www.bilibili.com/video/BV1cp4y1i7C7?p=4">https://www.bilibili.com/video/BV1cp4y1i7C7?p=4</a> ，（【最全】教你如何用腾讯云服务器＋hexo 搭建属于自己的博客）再配置了一下环境变量，这个方法和开始我用的那个方法应该是一样的，但是我怕自己在这一步有更改到什么，就再次更改了一下，也不知道是不是这步解决报错的o(╥﹏╥)o<br><img src="https://pic.imgdb.cn/item/630727b516f2c2beb13322f9.png"></p><!--![](2022-04-22-22-39-40.png)--></li><li><p>按照：<a href="https://cloud.tencent.com/developer/article/1823096">https://cloud.tencent.com/developer/article/1823096</a> （将Hexo部署到云服务器（使用宝塔面板））更改配置钩子实现自动部署，开始按照文档是更改的post-receive文件，我看这个文件也更改成功了的，不知道后期为啥会报错！<br><img src="https://pic.imgdb.cn/item/630727d216f2c2beb1333702.png"></p><!--![](2022-04-22-22-39-18.png)--></li></ul><ol start="2"><li>最后hexo d没有报错之后，用IP地址和域名访问都没有内容，在这篇文章：<a href="https://zhuanlan.zhihu.com/p/120743882">https://zhuanlan.zhihu.com/p/120743882</a> （将hexo个人博客部署到个人云服务器–最详细踩坑教程）中看到：<br><img src="https://pic.imgdb.cn/item/630727ec16f2c2beb1334a78.png"><!-- ![](2022-04-22-22-37-52.png)--></li></ol><ul><li>打开我的配置文件，果然URL是错误的，写的还是之前的：<a href="http://chendh.top/">http://chendh.top</a> ,更改成<a href="http://chendh.cc/">http://chendh.cc</a> 之后，通过域名就可以访问了o(╥﹏╥)o</li></ul><hr><blockquote><p> 困扰了这几天的问题终于算大致解决了一下，从最开始用hexo+github搭建博客，到用halo+阿里云&#x2F;腾讯云。当初的想法是多用几种方法，看看哪种用起来更舒适，然后自己还可以再写个文档总结一下，博客的素材就有了！当时想得挺美好的，结果试了几天之后，初步的搭建好了，换了主题之后，自己也就没管了，隔了好多天再来看，自己都弄糊涂了，不同博客的主题、不同的服务器、不同的域名，把自己也给绕糊涂了，好多之前的步骤也给忘记了……<br>然后只好把服务器重置，全部重新归位！结果就是隔了这么久了，这个博客还处于开始搭建好阶段，唉~预想总是很美好的！所以以后还是不要老想着一口吃个大胖子，开始就什么都想要，西瓜芝麻都想捡，然而自己却又没有下过多时间和功夫在这上面，效果也并不好！以后还是老老实实先学好一样再说！</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/04/02/hello-world/"/>
      <url>/2022/04/02/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
